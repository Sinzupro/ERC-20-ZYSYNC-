{"id":"235441851b55f78becf3911dd5b082d6","_format":"hh-sol-build-info-1","solcVersion":"0.8.17","solcLongVersion":"0.8.17+commit.8df45f5f","input":{"language":"Solidity","sources":{"contracts/GOAT.sol":{"content":"\r\n// File @openzeppelin/contracts/utils/Context.sol@v4.4.0\r\n\r\n// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.0 (utils/Context.sol)\r\n\r\npragma solidity ^0.8.17;\r\n\r\n/**\r\n * @dev Provides information about the current execution context, including the\r\n * sender of the transaction and its data. While these are generally available\r\n * via msg.sender and msg.data, they should not be accessed in such a direct\r\n * manner, since when dealing with meta-transactions the account sending and\r\n * paying for execution may not be the actual sender (as far as an application\r\n * is concerned).\r\n *\r\n * This contract is only required for intermediate, library-like contracts.\r\n */\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes calldata) {\r\n        return msg.data;\r\n    }\r\n}\r\n\r\n\r\n// File @openzeppelin/contracts/access/Ownable.sol@v4.4.0\r\n\r\n\r\n// OpenZeppelin Contracts v4.4.0 (access/Ownable.sol)\r\n\r\npragma solidity ^0.8.17;\r\n\r\n/**\r\n * @dev Contract module which provides a basic access control mechanism, where\r\n * there is an account (an owner) that can be granted exclusive access to\r\n * specific functions.\r\n *\r\n * By default, the owner account will be the one that deploys the contract. This\r\n * can later be changed with {transferOwnership}.\r\n *\r\n * This module is used through inheritance. It will make available the modifier\r\n * `onlyOwner`, which can be applied to your functions to restrict their use to\r\n * the owner.\r\n */\r\nabstract contract Ownable is Context {\r\n    address private _owner;\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    /**\r\n     * @dev Initializes the contract setting the deployer as the initial owner.\r\n     */\r\n    constructor() {\r\n        _transferOwnership(_msgSender());\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the address of the current owner.\r\n     */\r\n    function owner() public view virtual returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if called by any account other than the owner.\r\n     */\r\n    modifier onlyOwner() {\r\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Leaves the contract without owner. It will not be possible to call\r\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\r\n     *\r\n     * NOTE: Renouncing ownership will leave the contract without an owner,\r\n     * thereby removing any functionality that is only available to the owner.\r\n     */\r\n    function renounceOwnership() public virtual onlyOwner {\r\n        _transferOwnership(address(0));\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Can only be called by the current owner.\r\n     */\r\n    function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n        _transferOwnership(newOwner);\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Internal function without access restriction.\r\n     */\r\n    function _transferOwnership(address newOwner) internal virtual {\r\n        address oldOwner = _owner;\r\n        _owner = newOwner;\r\n        emit OwnershipTransferred(oldOwner, newOwner);\r\n    }\r\n}\r\n\r\n\r\n// File @openzeppelin/contracts/token/ERC20/IERC20.sol@v4.4.0\r\n\r\n\r\n// OpenZeppelin Contracts v4.4.0 (token/ERC20/IERC20.sol)\r\n\r\npragma solidity ^0.8.17;\r\n\r\n/**\r\n * @dev Interface of the ERC20 standard as defined in the EIP.\r\n */\r\ninterface IERC20 {\r\n    /**\r\n     * @dev Returns the amount of tokens in existence.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens owned by `account`.\r\n     */\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Returns the remaining number of tokens that `spender` will be\r\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n     * zero by default.\r\n     *\r\n     * This value changes when {approve} or {transferFrom} are called.\r\n     */\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\r\n     * that someone may use both the old and the new allowance by unfortunate\r\n     * transaction ordering. One possible solution to mitigate this race\r\n     * condition is to first reduce the spender's allowance to 0 and set the\r\n     * desired value afterwards:\r\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\r\n     * allowance mechanism. `amount` is then deducted from the caller's\r\n     * allowance.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(\r\n        address sender,\r\n        address recipient,\r\n        uint256 amount\r\n    ) external returns (bool);\r\n\r\n    /**\r\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n     * another (`to`).\r\n     *\r\n     * Note that `value` may be zero.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    /**\r\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n     * a call to {approve}. `value` is the new allowance.\r\n     */\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\n\r\n// File @openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol@v4.4.0\r\n\r\n\r\n// OpenZeppelin Contracts v4.4.0 (token/ERC20/extensions/IERC20Metadata.sol)\r\n\r\npragma solidity ^0.8.17;\r\n\r\n/**\r\n * @dev Interface for the optional metadata functions from the ERC20 standard.\r\n *\r\n * _Available since v4.1._\r\n */\r\ninterface IERC20Metadata is IERC20 {\r\n    /**\r\n     * @dev Returns the name of the token.\r\n     */\r\n    function name() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the symbol of the token.\r\n     */\r\n    function symbol() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the decimals places of the token.\r\n     */\r\n    function decimals() external view returns (uint8);\r\n}\r\n\r\n\r\n// File @openzeppelin/contracts/token/ERC20/ERC20.sol@v4.4.0\r\n\r\n\r\n// OpenZeppelin Contracts v4.4.0 (token/ERC20/ERC20.sol)\r\n\r\npragma solidity ^0.8.17;\r\n\r\n\r\n\r\n/**\r\n * @dev Implementation of the {IERC20} interface.\r\n *\r\n * This implementation is agnostic to the way tokens are created. This means\r\n * that a supply mechanism has to be added in a derived contract using {_mint}.\r\n * For a generic mechanism see {ERC20PresetMinterPauser}.\r\n *\r\n * TIP: For a detailed writeup see our guide\r\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\r\n * to implement supply mechanisms].\r\n *\r\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\r\n * instead returning `false` on failure. This behavior is nonetheless\r\n * conventional and does not conflict with the expectations of ERC20\r\n * applications.\r\n *\r\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\r\n * This allows applications to reconstruct the allowance for all accounts just\r\n * by listening to said events. Other implementations of the EIP may not emit\r\n * these events, as it isn't required by the specification.\r\n *\r\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\r\n * functions have been added to mitigate the well-known issues around setting\r\n * allowances. See {IERC20-approve}.\r\n */\r\ncontract ERC20 is Context, IERC20, IERC20Metadata {\r\n    mapping(address => uint256) private _balances;\r\n\r\n    mapping(address => mapping(address => uint256)) private _allowances;\r\n\r\n    uint256 private _totalSupply;\r\n\r\n    string private _name;\r\n    string private _symbol;\r\n\r\n    /**\r\n     * @dev Sets the values for {name} and {symbol}.\r\n     *\r\n     * The default value of {decimals} is 18. To select a different value for\r\n     * {decimals} you should overload it.\r\n     *\r\n     * All two of these values are immutable: they can only be set once during\r\n     * construction.\r\n     */\r\n    constructor(string memory name_, string memory symbol_) {\r\n        _name = name_;\r\n        _symbol = symbol_;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the name of the token.\r\n     */\r\n    function name() public view virtual override returns (string memory) {\r\n        return _name;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the symbol of the token, usually a shorter version of the\r\n     * name.\r\n     */\r\n    function symbol() public view virtual override returns (string memory) {\r\n        return _symbol;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the number of decimals used to get its user representation.\r\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\r\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\r\n     *\r\n     * Tokens usually opt for a value of 18, imitating the relationship between\r\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\r\n     * overridden;\r\n     *\r\n     * NOTE: This information is only used for _display_ purposes: it in\r\n     * no way affects any of the arithmetic of the contract, including\r\n     * {IERC20-balanceOf} and {IERC20-transfer}.\r\n     */\r\n    function decimals() public view virtual override returns (uint8) {\r\n        return 18;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-totalSupply}.\r\n     */\r\n    function totalSupply() public view virtual override returns (uint256) {\r\n        return _totalSupply;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-balanceOf}.\r\n     */\r\n    function balanceOf(address account) public view virtual override returns (uint256) {\r\n        return _balances[account];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-transfer}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `recipient` cannot be the zero address.\r\n     * - the caller must have a balance of at least `amount`.\r\n     */\r\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\r\n        _transfer(_msgSender(), recipient, amount);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-allowance}.\r\n     */\r\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\r\n        return _allowances[owner][spender];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-approve}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     */\r\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\r\n        _approve(_msgSender(), spender, amount);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-transferFrom}.\r\n     *\r\n     * Emits an {Approval} event indicating the updated allowance. This is not\r\n     * required by the EIP. See the note at the beginning of {ERC20}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `sender` and `recipient` cannot be the zero address.\r\n     * - `sender` must have a balance of at least `amount`.\r\n     * - the caller must have allowance for ``sender``'s tokens of at least\r\n     * `amount`.\r\n     */\r\n    function transferFrom(\r\n        address sender,\r\n        address recipient,\r\n        uint256 amount\r\n    ) public virtual override returns (bool) {\r\n        _transfer(sender, recipient, amount);\r\n\r\n        uint256 currentAllowance = _allowances[sender][_msgSender()];\r\n        require(currentAllowance >= amount, \"ERC20: transfer amount exceeds allowance\");\r\n        unchecked {\r\n            _approve(sender, _msgSender(), currentAllowance - amount);\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\r\n     *\r\n     * This is an alternative to {approve} that can be used as a mitigation for\r\n     * problems described in {IERC20-approve}.\r\n     *\r\n     * Emits an {Approval} event indicating the updated allowance.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     */\r\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\r\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\r\n     *\r\n     * This is an alternative to {approve} that can be used as a mitigation for\r\n     * problems described in {IERC20-approve}.\r\n     *\r\n     * Emits an {Approval} event indicating the updated allowance.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     * - `spender` must have allowance for the caller of at least\r\n     * `subtractedValue`.\r\n     */\r\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\r\n        uint256 currentAllowance = _allowances[_msgSender()][spender];\r\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\r\n        unchecked {\r\n            _approve(_msgSender(), spender, currentAllowance - subtractedValue);\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Moves `amount` of tokens from `sender` to `recipient`.\r\n     *\r\n     * This internal function is equivalent to {transfer}, and can be used to\r\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `sender` cannot be the zero address.\r\n     * - `recipient` cannot be the zero address.\r\n     * - `sender` must have a balance of at least `amount`.\r\n     */\r\n    function _transfer(\r\n        address sender,\r\n        address recipient,\r\n        uint256 amount\r\n    ) internal virtual {\r\n        require(sender != address(0), \"ERC20: transfer from the zero address\");\r\n        require(recipient != address(0), \"ERC20: transfer to the zero address\");\r\n\r\n        _beforeTokenTransfer(sender, recipient, amount);\r\n\r\n        uint256 senderBalance = _balances[sender];\r\n        require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\");\r\n        unchecked {\r\n            _balances[sender] = senderBalance - amount;\r\n        }\r\n        _balances[recipient] += amount;\r\n\r\n        emit Transfer(sender, recipient, amount);\r\n\r\n        _afterTokenTransfer(sender, recipient, amount);\r\n    }\r\n\r\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\r\n     * the total supply.\r\n     *\r\n     * Emits a {Transfer} event with `from` set to the zero address.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `account` cannot be the zero address.\r\n     */\r\n    function _mint(address account, uint256 amount) internal virtual {\r\n        require(account != address(0), \"ERC20: mint to the zero address\");\r\n\r\n        _beforeTokenTransfer(address(0), account, amount);\r\n\r\n        _totalSupply += amount;\r\n        _balances[account] += amount;\r\n        emit Transfer(address(0), account, amount);\r\n\r\n        _afterTokenTransfer(address(0), account, amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Destroys `amount` tokens from `account`, reducing the\r\n     * total supply.\r\n     *\r\n     * Emits a {Transfer} event with `to` set to the zero address.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `account` cannot be the zero address.\r\n     * - `account` must have at least `amount` tokens.\r\n     */\r\n    function _burn(address account, uint256 amount) internal virtual {\r\n        require(account != address(0), \"ERC20: burn from the zero address\");\r\n\r\n        _beforeTokenTransfer(account, address(0), amount);\r\n\r\n        uint256 accountBalance = _balances[account];\r\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\r\n        unchecked {\r\n            _balances[account] = accountBalance - amount;\r\n        }\r\n        _totalSupply -= amount;\r\n\r\n        emit Transfer(account, address(0), amount);\r\n\r\n        _afterTokenTransfer(account, address(0), amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\r\n     *\r\n     * This internal function is equivalent to `approve`, and can be used to\r\n     * e.g. set automatic allowances for certain subsystems, etc.\r\n     *\r\n     * Emits an {Approval} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `owner` cannot be the zero address.\r\n     * - `spender` cannot be the zero address.\r\n     */\r\n    function _approve(\r\n        address owner,\r\n        address spender,\r\n        uint256 amount\r\n    ) internal virtual {\r\n        require(owner != address(0), \"ERC20: approve from the zero address\");\r\n        require(spender != address(0), \"ERC20: approve to the zero address\");\r\n\r\n        _allowances[owner][spender] = amount;\r\n        emit Approval(owner, spender, amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Hook that is called before any transfer of tokens. This includes\r\n     * minting and burning.\r\n     *\r\n     * Calling conditions:\r\n     *\r\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\r\n     * will be transferred to `to`.\r\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\r\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\r\n     * - `from` and `to` are never both zero.\r\n     *\r\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\r\n     */\r\n    function _beforeTokenTransfer(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) internal virtual {}\r\n\r\n    /**\r\n     * @dev Hook that is called after any transfer of tokens. This includes\r\n     * minting and burning.\r\n     *\r\n     * Calling conditions:\r\n     *\r\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\r\n     * has been transferred to `to`.\r\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\r\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\r\n     * - `from` and `to` are never both zero.\r\n     *\r\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\r\n     */\r\n    function _afterTokenTransfer(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) internal virtual {}\r\n}\r\n\r\n\r\nlibrary MerkleProof {\r\n    /**\r\n     * @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\r\n     * defined by `root`. For this, a `proof` must be provided, containing\r\n     * sibling hashes on the branch from the leaf to the root of the tree. Each\r\n     * pair of leaves and each pair of pre-images are assumed to be sorted.\r\n     */\r\n    function verify(\r\n        bytes32[] memory proof,\r\n        bytes32 root,\r\n        bytes32 leaf\r\n    ) internal pure returns (bool) {\r\n        return processProof(proof, leaf) == root;\r\n    }\r\n\r\n    /**\r\n     * @dev Calldata version of {verify}\r\n     *\r\n     * _Available since v4.7._\r\n     */\r\n    function verifyCalldata(\r\n        bytes32[] calldata proof,\r\n        bytes32 root,\r\n        bytes32 leaf\r\n    ) internal pure returns (bool) {\r\n        return processProofCalldata(proof, leaf) == root;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\r\n     * from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\r\n     * hash matches the root of the tree. When processing the proof, the pairs\r\n     * of leafs & pre-images are assumed to be sorted.\r\n     *\r\n     * _Available since v4.4._\r\n     */\r\n    function processProof(bytes32[] memory proof, bytes32 leaf) internal pure returns (bytes32) {\r\n        bytes32 computedHash = leaf;\r\n        for (uint256 i = 0; i < proof.length; i++) {\r\n            computedHash = _hashPair(computedHash, proof[i]);\r\n        }\r\n        return computedHash;\r\n    }\r\n\r\n    /**\r\n     * @dev Calldata version of {processProof}\r\n     *\r\n     * _Available since v4.7._\r\n     */\r\n    function processProofCalldata(bytes32[] calldata proof, bytes32 leaf) internal pure returns (bytes32) {\r\n        bytes32 computedHash = leaf;\r\n        for (uint256 i = 0; i < proof.length; i++) {\r\n            computedHash = _hashPair(computedHash, proof[i]);\r\n        }\r\n        return computedHash;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns true if the `leaves` can be proved to be a part of a Merkle tree defined by\r\n     * `root`, according to `proof` and `proofFlags` as described in {processMultiProof}.\r\n     *\r\n     * _Available since v4.7._\r\n     */\r\n    function multiProofVerify(\r\n        bytes32[] memory proof,\r\n        bool[] memory proofFlags,\r\n        bytes32 root,\r\n        bytes32[] memory leaves\r\n    ) internal pure returns (bool) {\r\n        return processMultiProof(proof, proofFlags, leaves) == root;\r\n    }\r\n\r\n    /**\r\n     * @dev Calldata version of {multiProofVerify}\r\n     *\r\n     * _Available since v4.7._\r\n     */\r\n    function multiProofVerifyCalldata(\r\n        bytes32[] calldata proof,\r\n        bool[] calldata proofFlags,\r\n        bytes32 root,\r\n        bytes32[] memory leaves\r\n    ) internal pure returns (bool) {\r\n        return processMultiProofCalldata(proof, proofFlags, leaves) == root;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the root of a tree reconstructed from `leaves` and the sibling nodes in `proof`,\r\n     * consuming from one or the other at each step according to the instructions given by\r\n     * `proofFlags`.\r\n     *\r\n     * _Available since v4.7._\r\n     */\r\n    function processMultiProof(\r\n        bytes32[] memory proof,\r\n        bool[] memory proofFlags,\r\n        bytes32[] memory leaves\r\n    ) internal pure returns (bytes32 merkleRoot) {\r\n        // This function rebuild the root hash by traversing the tree up from the leaves. The root is rebuilt by\r\n        // consuming and producing values on a queue. The queue starts with the `leaves` array, then goes onto the\r\n        // `hashes` array. At the end of the process, the last hash in the `hashes` array should contain the root of\r\n        // the merkle tree.\r\n        uint256 leavesLen = leaves.length;\r\n        uint256 totalHashes = proofFlags.length;\r\n\r\n        // Check proof validity.\r\n        require(leavesLen + proof.length - 1 == totalHashes, \"MerkleProof: invalid multiproof\");\r\n\r\n        // The xxxPos values are \"pointers\" to the next value to consume in each array. All accesses are done using\r\n        // `xxx[xxxPos++]`, which return the current value and increment the pointer, thus mimicking a queue's \"pop\".\r\n        bytes32[] memory hashes = new bytes32[](totalHashes);\r\n        uint256 leafPos = 0;\r\n        uint256 hashPos = 0;\r\n        uint256 proofPos = 0;\r\n        // At each step, we compute the next hash using two values:\r\n        // - a value from the \"main queue\". If not all leaves have been consumed, we get the next leaf, otherwise we\r\n        //   get the next hash.\r\n        // - depending on the flag, either another value for the \"main queue\" (merging branches) or an element from the\r\n        //   `proof` array.\r\n        for (uint256 i = 0; i < totalHashes; i++) {\r\n            bytes32 a = leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++];\r\n            bytes32 b = proofFlags[i] ? leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++] : proof[proofPos++];\r\n            hashes[i] = _hashPair(a, b);\r\n        }\r\n\r\n        if (totalHashes > 0) {\r\n            return hashes[totalHashes - 1];\r\n        } else if (leavesLen > 0) {\r\n            return leaves[0];\r\n        } else {\r\n            return proof[0];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Calldata version of {processMultiProof}\r\n     *\r\n     * _Available since v4.7._\r\n     */\r\n    function processMultiProofCalldata(\r\n        bytes32[] calldata proof,\r\n        bool[] calldata proofFlags,\r\n        bytes32[] memory leaves\r\n    ) internal pure returns (bytes32 merkleRoot) {\r\n        // This function rebuild the root hash by traversing the tree up from the leaves. The root is rebuilt by\r\n        // consuming and producing values on a queue. The queue starts with the `leaves` array, then goes onto the\r\n        // `hashes` array. At the end of the process, the last hash in the `hashes` array should contain the root of\r\n        // the merkle tree.\r\n        uint256 leavesLen = leaves.length;\r\n        uint256 totalHashes = proofFlags.length;\r\n\r\n        // Check proof validity.\r\n        require(leavesLen + proof.length - 1 == totalHashes, \"MerkleProof: invalid multiproof\");\r\n\r\n        // The xxxPos values are \"pointers\" to the next value to consume in each array. All accesses are done using\r\n        // `xxx[xxxPos++]`, which return the current value and increment the pointer, thus mimicking a queue's \"pop\".\r\n        bytes32[] memory hashes = new bytes32[](totalHashes);\r\n        uint256 leafPos = 0;\r\n        uint256 hashPos = 0;\r\n        uint256 proofPos = 0;\r\n        // At each step, we compute the next hash using two values:\r\n        // - a value from the \"main queue\". If not all leaves have been consumed, we get the next leaf, otherwise we\r\n        //   get the next hash.\r\n        // - depending on the flag, either another value for the \"main queue\" (merging branches) or an element from the\r\n        //   `proof` array.\r\n        for (uint256 i = 0; i < totalHashes; i++) {\r\n            bytes32 a = leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++];\r\n            bytes32 b = proofFlags[i] ? leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++] : proof[proofPos++];\r\n            hashes[i] = _hashPair(a, b);\r\n        }\r\n\r\n        if (totalHashes > 0) {\r\n            return hashes[totalHashes - 1];\r\n        } else if (leavesLen > 0) {\r\n            return leaves[0];\r\n        } else {\r\n            return proof[0];\r\n        }\r\n    }\r\n\r\n    function _hashPair(bytes32 a, bytes32 b) private pure returns (bytes32) {\r\n        return a < b ? _efficientHash(a, b) : _efficientHash(b, a);\r\n    }\r\n\r\n    function _efficientHash(bytes32 a, bytes32 b) private pure returns (bytes32 value) {\r\n        /// @solidity memory-safe-assembly\r\n        assembly {\r\n            mstore(0x00, a)\r\n            mstore(0x20, b)\r\n            value := keccak256(0x00, 0x40)\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\npragma solidity ^0.8.17;\r\n\r\n\r\ncontract GOAT is Ownable, ERC20 {\r\n    uint256 public amountAirdrop=8000000000*10**decimals();\r\n    uint256 public amountPresale=20000000000*10**decimals();\r\n    uint256 public amountSale=10000000000*10**decimals();\r\n    uint256 public pricePresale=2500000; //0,0000000000025\r\n    uint256 public priceSale=7500000;    //0,0000000000075\r\n    bytes32 public merkleRoot;\r\n    uint32 public percentRefRewards=5;\r\n    bool public airdropActive=true;\r\n    uint256 _totalSupply=400000000000000*10**decimals();\r\n    mapping(address => uint256) public claimed;\r\n\r\n    constructor() ERC20(\"GOAT\", \"GOAT\") {\r\n           _mint(0xEa226A8DBe9524E6921b9698911A2daEAb9D85dA, 120000000000000*10**decimals()); //LP + TEAM\r\n           _mint(0xEa226A8DBe9524E6921b9698911A2daEAb9D85dA,  40000000000000*10**decimals()); //FOR CEXs\r\n    }\r\n\r\n    function setMerkleRoot(bytes32 _newMerkleRoot) external onlyOwner {\r\n        merkleRoot = _newMerkleRoot;\r\n    }\r\n\r\n\r\n    function setSaleActive(bool _setActive) external onlyOwner {\r\n        airdropActive = _setActive;\r\n    }\r\n\r\n    function setAirdropSettings(uint256 _amountAirdrop, uint256 _amountPresale, uint256 _amountSale) external onlyOwner {\r\n        amountAirdrop = _amountAirdrop;\r\n        amountPresale = _amountPresale;\r\n        amountSale = _amountSale;\r\n    }\r\n\r\n    function setPriceSettings(uint256 _pricePresale, uint256 _priceSale, uint32 _percentRefRewards) external onlyOwner {\r\n        percentRefRewards = _percentRefRewards;\r\n        pricePresale = _pricePresale;\r\n        priceSale = _priceSale;\r\n    }\r\n    \r\n    function mint(address ref_address, uint256 _amount, bytes32[] calldata _merkleProof)\r\n        public\r\n        payable\r\n    {   \r\n        uint256 amount= _amount*10**decimals();\r\n        require(airdropActive, \"Not ready yet\");\r\n        require(amount+totalSupply()<_totalSupply,\"SOLD OUT!\");\r\n        bytes32 leaf = keccak256(abi.encodePacked(msg.sender));\r\n        require(MerkleProof.verify(_merkleProof, merkleRoot, leaf),\"Invalid proof!\");\r\n       \r\n        uint256 req_val=0;\r\n        if (amount+claimed[msg.sender]<=amountAirdrop) { \r\n           req_val=0;     \r\n        } else if (amount+claimed[msg.sender]<=amountAirdrop+amountPresale+amountSale) {\r\n            if (claimed[msg.sender]<1) {\r\n                req_val=(amount-amountAirdrop)*pricePresale/(10**decimals());\r\n            } else {\r\n                req_val=amount*pricePresale/(10**decimals());\r\n            }\r\n        } else {\r\n        revert(\"Error\");\r\n        }\r\n        require(msg.value >= req_val, \"Insufficient funds!\");\r\n        (bool success,) = payable(owner()).call{value:msg.value}('');\r\n        claimed[msg.sender]=claimed[msg.sender]+amount;\r\n        _mint(msg.sender, amount);\r\n        \r\n        if (ref_address!= 0x0000000000000000000000000000000000000000) {\r\n        _mint(ref_address, amount*percentRefRewards/100);  \r\n        }\r\n    }\r\n\r\n    function canClaim(bytes32[] calldata _merkles, address _caller) public view returns(uint256) {\r\n        bytes32 leaf = keccak256(abi.encodePacked(_caller));\r\n        if (MerkleProof.verify(_merkles, merkleRoot, leaf)) {\r\n            return (amountAirdrop+amountPresale+amountSale-claimed[_caller])/(10**decimals());\r\n         } else { return 0; }\r\n    }\r\n\r\n    function regTeam(uint256 _amount, address _address) external onlyOwner {\r\n        require(_amount+totalSupply()<_totalSupply,\"SOLD OUT!\");\r\n        _mint(_address, _amount);\r\n    }\r\n\r\n    function burn(uint256 value) external {\r\n        _burn(msg.sender, value);\r\n    }\r\n}"}},"settings":{"optimizer":{"enabled":true,"mode":"3"},"outputSelection":{"*":{"*":["abi","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"errors":[{"component":"general","errorCode":"2072","formattedMessage":"Warning: Unused local variable.\n   --> contracts/GOAT.sol:845:10:\n    |\n845 |         (bool success,) = payable(owner()).call{value:msg.value}('');\n    |          ^^^^^^^^^^^^\n\n","message":"Unused local variable.","severity":"warning","sourceLocation":{"file":"contracts/GOAT.sol","start":29695,"end":29707},"type":"Warning"}],"version":"0.8.17","long_version":"0.8.17+commit.8df45f5f.Windows.msvc","zk_version":"1.3.9","sources":{"contracts/GOAT.sol":{"id":0,"ast":{"absolutePath":"contracts/GOAT.sol","exportedSymbols":{"Context":[21],"ERC20":[766],"GOAT":[1688],"IERC20":[201],"IERC20Metadata":[224],"MerkleProof":[1265],"Ownable":[124]},"id":1689,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".17"],"nodeType":"PragmaDirective","src":"151:24:0"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":2,"nodeType":"StructuredDocumentation","src":"179:505:0","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":21,"linearizedBaseContracts":[21],"name":"Context","nameLocation":"704:7:0","nodeType":"ContractDefinition","nodes":[{"body":{"id":10,"nodeType":"Block","src":"781:36:0","statements":[{"expression":{"expression":{"id":7,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"799:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"803:6:0","memberName":"sender","nodeType":"MemberAccess","src":"799:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":6,"id":9,"nodeType":"Return","src":"792:17:0"}]},"id":11,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"728:10:0","nodeType":"FunctionDefinition","parameters":{"id":3,"nodeType":"ParameterList","parameters":[],"src":"738:2:0"},"returnParameters":{"id":6,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":11,"src":"772:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4,"name":"address","nodeType":"ElementaryTypeName","src":"772:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"771:9:0"},"scope":21,"src":"719:98:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":19,"nodeType":"Block","src":"892:34:0","statements":[{"expression":{"expression":{"id":16,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"910:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":17,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"914:4:0","memberName":"data","nodeType":"MemberAccess","src":"910:8:0","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":15,"id":18,"nodeType":"Return","src":"903:15:0"}]},"id":20,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"834:8:0","nodeType":"FunctionDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[],"src":"842:2:0"},"returnParameters":{"id":15,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":20,"src":"876:14:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":13,"name":"bytes","nodeType":"ElementaryTypeName","src":"876:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"875:16:0"},"scope":21,"src":"825:101:0","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":1689,"src":"686:243:0","usedErrors":[]},{"id":22,"literals":["solidity","^","0.8",".17"],"nodeType":"PragmaDirective","src":"1055:24:0"},{"abstract":true,"baseContracts":[{"baseName":{"id":24,"name":"Context","nameLocations":["1619:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":21,"src":"1619:7:0"},"id":25,"nodeType":"InheritanceSpecifier","src":"1619:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":23,"nodeType":"StructuredDocumentation","src":"1083:505:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":124,"linearizedBaseContracts":[124,21],"name":"Ownable","nameLocation":"1608:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":27,"mutability":"mutable","name":"_owner","nameLocation":"1650:6:0","nodeType":"VariableDeclaration","scope":124,"src":"1634:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":26,"name":"address","nodeType":"ElementaryTypeName","src":"1634:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":33,"name":"OwnershipTransferred","nameLocation":"1671:20:0","nodeType":"EventDefinition","parameters":{"id":32,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1708:13:0","nodeType":"VariableDeclaration","scope":33,"src":"1692:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":28,"name":"address","nodeType":"ElementaryTypeName","src":"1692:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":31,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1739:8:0","nodeType":"VariableDeclaration","scope":33,"src":"1723:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":30,"name":"address","nodeType":"ElementaryTypeName","src":"1723:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1691:57:0"},"src":"1665:84:0"},{"body":{"id":42,"nodeType":"Block","src":"1870:51:0","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":38,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11,"src":"1900:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":39,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1900:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":37,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":123,"src":"1881:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":40,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1881:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":41,"nodeType":"ExpressionStatement","src":"1881:32:0"}]},"documentation":{"id":34,"nodeType":"StructuredDocumentation","src":"1757:93:0","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":43,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":35,"nodeType":"ParameterList","parameters":[],"src":"1867:2:0"},"returnParameters":{"id":36,"nodeType":"ParameterList","parameters":[],"src":"1870:0:0"},"scope":124,"src":"1856:65:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":51,"nodeType":"Block","src":"2057:32:0","statements":[{"expression":{"id":49,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"2075:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":48,"id":50,"nodeType":"Return","src":"2068:13:0"}]},"documentation":{"id":44,"nodeType":"StructuredDocumentation","src":"1929:67:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":52,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"2011:5:0","nodeType":"FunctionDefinition","parameters":{"id":45,"nodeType":"ParameterList","parameters":[],"src":"2016:2:0"},"returnParameters":{"id":48,"nodeType":"ParameterList","parameters":[{"constant":false,"id":47,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":52,"src":"2048:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":46,"name":"address","nodeType":"ElementaryTypeName","src":"2048:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2047:9:0"},"scope":124,"src":"2002:87:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":65,"nodeType":"Block","src":"2203:99:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":60,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":56,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":52,"src":"2222:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":57,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2222:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":58,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11,"src":"2233:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":59,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2233:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2222:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":61,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2247:34:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":55,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2214:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":62,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2214:68:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":63,"nodeType":"ExpressionStatement","src":"2214:68:0"},{"id":64,"nodeType":"PlaceholderStatement","src":"2293:1:0"}]},"documentation":{"id":53,"nodeType":"StructuredDocumentation","src":"2097:79:0","text":" @dev Throws if called by any account other than the owner."},"id":66,"name":"onlyOwner","nameLocation":"2191:9:0","nodeType":"ModifierDefinition","parameters":{"id":54,"nodeType":"ParameterList","parameters":[],"src":"2200:2:0"},"src":"2182:120:0","virtual":false,"visibility":"internal"},{"body":{"id":79,"nodeType":"Block","src":"2707:49:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":75,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2745:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":74,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2737:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":73,"name":"address","nodeType":"ElementaryTypeName","src":"2737:7:0","typeDescriptions":{}}},"id":76,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2737:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":72,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":123,"src":"2718:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":77,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2718:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":78,"nodeType":"ExpressionStatement","src":"2718:30:0"}]},"documentation":{"id":67,"nodeType":"StructuredDocumentation","src":"2310:337:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."},"functionSelector":"715018a6","id":80,"implemented":true,"kind":"function","modifiers":[{"id":70,"kind":"modifierInvocation","modifierName":{"id":69,"name":"onlyOwner","nameLocations":["2697:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":66,"src":"2697:9:0"},"nodeType":"ModifierInvocation","src":"2697:9:0"}],"name":"renounceOwnership","nameLocation":"2662:17:0","nodeType":"FunctionDefinition","parameters":{"id":68,"nodeType":"ParameterList","parameters":[],"src":"2679:2:0"},"returnParameters":{"id":71,"nodeType":"ParameterList","parameters":[],"src":"2707:0:0"},"scope":124,"src":"2653:103:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":102,"nodeType":"Block","src":"2981:131:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":94,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":89,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":83,"src":"3000:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":92,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3020:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":91,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3012:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":90,"name":"address","nodeType":"ElementaryTypeName","src":"3012:7:0","typeDescriptions":{}}},"id":93,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3012:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3000:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":95,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3024:40:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":88,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2992:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":96,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2992:73:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":97,"nodeType":"ExpressionStatement","src":"2992:73:0"},{"expression":{"arguments":[{"id":99,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":83,"src":"3095:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":98,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":123,"src":"3076:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":100,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3076:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":101,"nodeType":"ExpressionStatement","src":"3076:28:0"}]},"documentation":{"id":81,"nodeType":"StructuredDocumentation","src":"2764:141:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":103,"implemented":true,"kind":"function","modifiers":[{"id":86,"kind":"modifierInvocation","modifierName":{"id":85,"name":"onlyOwner","nameLocations":["2971:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":66,"src":"2971:9:0"},"nodeType":"ModifierInvocation","src":"2971:9:0"}],"name":"transferOwnership","nameLocation":"2920:17:0","nodeType":"FunctionDefinition","parameters":{"id":84,"nodeType":"ParameterList","parameters":[{"constant":false,"id":83,"mutability":"mutable","name":"newOwner","nameLocation":"2946:8:0","nodeType":"VariableDeclaration","scope":103,"src":"2938:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":82,"name":"address","nodeType":"ElementaryTypeName","src":"2938:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2937:18:0"},"returnParameters":{"id":87,"nodeType":"ParameterList","parameters":[],"src":"2981:0:0"},"scope":124,"src":"2911:201:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":122,"nodeType":"Block","src":"3335:128:0","statements":[{"assignments":[110],"declarations":[{"constant":false,"id":110,"mutability":"mutable","name":"oldOwner","nameLocation":"3354:8:0","nodeType":"VariableDeclaration","scope":122,"src":"3346:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":109,"name":"address","nodeType":"ElementaryTypeName","src":"3346:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":112,"initialValue":{"id":111,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"3365:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3346:25:0"},{"expression":{"id":115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":113,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"3382:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":114,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":106,"src":"3391:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3382:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":116,"nodeType":"ExpressionStatement","src":"3382:17:0"},{"eventCall":{"arguments":[{"id":118,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":110,"src":"3436:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":119,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":106,"src":"3446:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":117,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":33,"src":"3415:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":120,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3415:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":121,"nodeType":"EmitStatement","src":"3410:45:0"}]},"documentation":{"id":104,"nodeType":"StructuredDocumentation","src":"3120:146:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":123,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"3281:18:0","nodeType":"FunctionDefinition","parameters":{"id":107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":106,"mutability":"mutable","name":"newOwner","nameLocation":"3308:8:0","nodeType":"VariableDeclaration","scope":123,"src":"3300:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":105,"name":"address","nodeType":"ElementaryTypeName","src":"3300:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3299:18:0"},"returnParameters":{"id":108,"nodeType":"ParameterList","parameters":[],"src":"3335:0:0"},"scope":124,"src":"3272:191:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1689,"src":"1590:1876:0","usedErrors":[]},{"id":125,"literals":["solidity","^","0.8",".17"],"nodeType":"PragmaDirective","src":"3600:24:0"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":126,"nodeType":"StructuredDocumentation","src":"3628:72:0","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":201,"linearizedBaseContracts":[201],"name":"IERC20","nameLocation":"3712:6:0","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":127,"nodeType":"StructuredDocumentation","src":"3726:68:0","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","id":132,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"3809:11:0","nodeType":"FunctionDefinition","parameters":{"id":128,"nodeType":"ParameterList","parameters":[],"src":"3820:2:0"},"returnParameters":{"id":131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":130,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":132,"src":"3846:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":129,"name":"uint256","nodeType":"ElementaryTypeName","src":"3846:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3845:9:0"},"scope":201,"src":"3800:55:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":133,"nodeType":"StructuredDocumentation","src":"3863:74:0","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","id":140,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"3952:9:0","nodeType":"FunctionDefinition","parameters":{"id":136,"nodeType":"ParameterList","parameters":[{"constant":false,"id":135,"mutability":"mutable","name":"account","nameLocation":"3970:7:0","nodeType":"VariableDeclaration","scope":140,"src":"3962:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":134,"name":"address","nodeType":"ElementaryTypeName","src":"3962:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3961:17:0"},"returnParameters":{"id":139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":138,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":140,"src":"4002:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":137,"name":"uint256","nodeType":"ElementaryTypeName","src":"4002:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4001:9:0"},"scope":201,"src":"3943:68:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":141,"nodeType":"StructuredDocumentation","src":"4019:215:0","text":" @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":150,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"4249:8:0","nodeType":"FunctionDefinition","parameters":{"id":146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":143,"mutability":"mutable","name":"recipient","nameLocation":"4266:9:0","nodeType":"VariableDeclaration","scope":150,"src":"4258:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":142,"name":"address","nodeType":"ElementaryTypeName","src":"4258:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":145,"mutability":"mutable","name":"amount","nameLocation":"4285:6:0","nodeType":"VariableDeclaration","scope":150,"src":"4277:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":144,"name":"uint256","nodeType":"ElementaryTypeName","src":"4277:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4257:35:0"},"returnParameters":{"id":149,"nodeType":"ParameterList","parameters":[{"constant":false,"id":148,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":150,"src":"4311:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":147,"name":"bool","nodeType":"ElementaryTypeName","src":"4311:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4310:6:0"},"scope":201,"src":"4240:77:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":151,"nodeType":"StructuredDocumentation","src":"4325:270:0","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":160,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"4610:9:0","nodeType":"FunctionDefinition","parameters":{"id":156,"nodeType":"ParameterList","parameters":[{"constant":false,"id":153,"mutability":"mutable","name":"owner","nameLocation":"4628:5:0","nodeType":"VariableDeclaration","scope":160,"src":"4620:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":152,"name":"address","nodeType":"ElementaryTypeName","src":"4620:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":155,"mutability":"mutable","name":"spender","nameLocation":"4643:7:0","nodeType":"VariableDeclaration","scope":160,"src":"4635:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":154,"name":"address","nodeType":"ElementaryTypeName","src":"4635:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4619:32:0"},"returnParameters":{"id":159,"nodeType":"ParameterList","parameters":[{"constant":false,"id":158,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":160,"src":"4675:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":157,"name":"uint256","nodeType":"ElementaryTypeName","src":"4675:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4674:9:0"},"scope":201,"src":"4601:83:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":161,"nodeType":"StructuredDocumentation","src":"4692:655:0","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":170,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"5362:7:0","nodeType":"FunctionDefinition","parameters":{"id":166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":163,"mutability":"mutable","name":"spender","nameLocation":"5378:7:0","nodeType":"VariableDeclaration","scope":170,"src":"5370:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":162,"name":"address","nodeType":"ElementaryTypeName","src":"5370:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":165,"mutability":"mutable","name":"amount","nameLocation":"5395:6:0","nodeType":"VariableDeclaration","scope":170,"src":"5387:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":164,"name":"uint256","nodeType":"ElementaryTypeName","src":"5387:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5369:33:0"},"returnParameters":{"id":169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":168,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":170,"src":"5421:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":167,"name":"bool","nodeType":"ElementaryTypeName","src":"5421:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5420:6:0"},"scope":201,"src":"5353:74:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":171,"nodeType":"StructuredDocumentation","src":"5435:304:0","text":" @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":182,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"5754:12:0","nodeType":"FunctionDefinition","parameters":{"id":178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":173,"mutability":"mutable","name":"sender","nameLocation":"5785:6:0","nodeType":"VariableDeclaration","scope":182,"src":"5777:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":172,"name":"address","nodeType":"ElementaryTypeName","src":"5777:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":175,"mutability":"mutable","name":"recipient","nameLocation":"5810:9:0","nodeType":"VariableDeclaration","scope":182,"src":"5802:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":174,"name":"address","nodeType":"ElementaryTypeName","src":"5802:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":177,"mutability":"mutable","name":"amount","nameLocation":"5838:6:0","nodeType":"VariableDeclaration","scope":182,"src":"5830:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":176,"name":"uint256","nodeType":"ElementaryTypeName","src":"5830:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5766:85:0"},"returnParameters":{"id":181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":180,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":182,"src":"5870:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":179,"name":"bool","nodeType":"ElementaryTypeName","src":"5870:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5869:6:0"},"scope":201,"src":"5745:131:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"anonymous":false,"documentation":{"id":183,"nodeType":"StructuredDocumentation","src":"5884:163:0","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":191,"name":"Transfer","nameLocation":"6059:8:0","nodeType":"EventDefinition","parameters":{"id":190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":185,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"6084:4:0","nodeType":"VariableDeclaration","scope":191,"src":"6068:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":184,"name":"address","nodeType":"ElementaryTypeName","src":"6068:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":187,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"6106:2:0","nodeType":"VariableDeclaration","scope":191,"src":"6090:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":186,"name":"address","nodeType":"ElementaryTypeName","src":"6090:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":189,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"6118:5:0","nodeType":"VariableDeclaration","scope":191,"src":"6110:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":188,"name":"uint256","nodeType":"ElementaryTypeName","src":"6110:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6067:57:0"},"src":"6053:72:0"},{"anonymous":false,"documentation":{"id":192,"nodeType":"StructuredDocumentation","src":"6133:151:0","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":200,"name":"Approval","nameLocation":"6296:8:0","nodeType":"EventDefinition","parameters":{"id":199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":194,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"6321:5:0","nodeType":"VariableDeclaration","scope":200,"src":"6305:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":193,"name":"address","nodeType":"ElementaryTypeName","src":"6305:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":196,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"6344:7:0","nodeType":"VariableDeclaration","scope":200,"src":"6328:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":195,"name":"address","nodeType":"ElementaryTypeName","src":"6328:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":198,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"6361:5:0","nodeType":"VariableDeclaration","scope":200,"src":"6353:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":197,"name":"uint256","nodeType":"ElementaryTypeName","src":"6353:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6304:63:0"},"src":"6290:78:0"}],"scope":1689,"src":"3702:2669:0","usedErrors":[]},{"id":202,"literals":["solidity","^","0.8",".17"],"nodeType":"PragmaDirective","src":"6543:24:0"},{"abstract":false,"baseContracts":[{"baseName":{"id":204,"name":"IERC20","nameLocations":["6721:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":201,"src":"6721:6:0"},"id":205,"nodeType":"InheritanceSpecifier","src":"6721:6:0"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":203,"nodeType":"StructuredDocumentation","src":"6571:120:0","text":" @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"},"fullyImplemented":false,"id":224,"linearizedBaseContracts":[224,201],"name":"IERC20Metadata","nameLocation":"6703:14:0","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":206,"nodeType":"StructuredDocumentation","src":"6735:56:0","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":211,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"6806:4:0","nodeType":"FunctionDefinition","parameters":{"id":207,"nodeType":"ParameterList","parameters":[],"src":"6810:2:0"},"returnParameters":{"id":210,"nodeType":"ParameterList","parameters":[{"constant":false,"id":209,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":211,"src":"6836:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":208,"name":"string","nodeType":"ElementaryTypeName","src":"6836:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6835:15:0"},"scope":224,"src":"6797:54:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":212,"nodeType":"StructuredDocumentation","src":"6859:58:0","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":217,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"6932:6:0","nodeType":"FunctionDefinition","parameters":{"id":213,"nodeType":"ParameterList","parameters":[],"src":"6938:2:0"},"returnParameters":{"id":216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":215,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":217,"src":"6964:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":214,"name":"string","nodeType":"ElementaryTypeName","src":"6964:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6963:15:0"},"scope":224,"src":"6923:56:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":218,"nodeType":"StructuredDocumentation","src":"6987:67:0","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":223,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"7069:8:0","nodeType":"FunctionDefinition","parameters":{"id":219,"nodeType":"ParameterList","parameters":[],"src":"7077:2:0"},"returnParameters":{"id":222,"nodeType":"ParameterList","parameters":[{"constant":false,"id":221,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":223,"src":"7103:5:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":220,"name":"uint8","nodeType":"ElementaryTypeName","src":"7103:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"7102:7:0"},"scope":224,"src":"7060:50:0","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1689,"src":"6693:420:0","usedErrors":[]},{"id":225,"literals":["solidity","^","0.8",".17"],"nodeType":"PragmaDirective","src":"7245:24:0"},{"abstract":false,"baseContracts":[{"baseName":{"id":227,"name":"Context","nameLocations":["8493:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":21,"src":"8493:7:0"},"id":228,"nodeType":"InheritanceSpecifier","src":"8493:7:0"},{"baseName":{"id":229,"name":"IERC20","nameLocations":["8502:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":201,"src":"8502:6:0"},"id":230,"nodeType":"InheritanceSpecifier","src":"8502:6:0"},{"baseName":{"id":231,"name":"IERC20Metadata","nameLocations":["8510:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":224,"src":"8510:14:0"},"id":232,"nodeType":"InheritanceSpecifier","src":"8510:14:0"}],"canonicalName":"ERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":226,"nodeType":"StructuredDocumentation","src":"7277:1196:0","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."},"fullyImplemented":true,"id":766,"linearizedBaseContracts":[766,224,201,21],"name":"ERC20","nameLocation":"8484:5:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":236,"mutability":"mutable","name":"_balances","nameLocation":"8568:9:0","nodeType":"VariableDeclaration","scope":766,"src":"8532:45:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":235,"keyType":{"id":233,"name":"address","nodeType":"ElementaryTypeName","src":"8540:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"8532:27:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":234,"name":"uint256","nodeType":"ElementaryTypeName","src":"8551:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":242,"mutability":"mutable","name":"_allowances","nameLocation":"8642:11:0","nodeType":"VariableDeclaration","scope":766,"src":"8586:67:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":241,"keyType":{"id":237,"name":"address","nodeType":"ElementaryTypeName","src":"8594:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"8586:47:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueType":{"id":240,"keyType":{"id":238,"name":"address","nodeType":"ElementaryTypeName","src":"8613:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"8605:27:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":239,"name":"uint256","nodeType":"ElementaryTypeName","src":"8624:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":244,"mutability":"mutable","name":"_totalSupply","nameLocation":"8678:12:0","nodeType":"VariableDeclaration","scope":766,"src":"8662:28:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":243,"name":"uint256","nodeType":"ElementaryTypeName","src":"8662:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":246,"mutability":"mutable","name":"_name","nameLocation":"8714:5:0","nodeType":"VariableDeclaration","scope":766,"src":"8699:20:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":245,"name":"string","nodeType":"ElementaryTypeName","src":"8699:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":248,"mutability":"mutable","name":"_symbol","nameLocation":"8741:7:0","nodeType":"VariableDeclaration","scope":766,"src":"8726:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":247,"name":"string","nodeType":"ElementaryTypeName","src":"8726:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":264,"nodeType":"Block","src":"9125:60:0","statements":[{"expression":{"id":258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":256,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":246,"src":"9136:5:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":257,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":251,"src":"9144:5:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"9136:13:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":259,"nodeType":"ExpressionStatement","src":"9136:13:0"},{"expression":{"id":262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":260,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":248,"src":"9160:7:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":261,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":253,"src":"9170:7:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"9160:17:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":263,"nodeType":"ExpressionStatement","src":"9160:17:0"}]},"documentation":{"id":249,"nodeType":"StructuredDocumentation","src":"8757:306:0","text":" @dev Sets the values for {name} and {symbol}.\n The default value of {decimals} is 18. To select a different value for\n {decimals} you should overload it.\n All two of these values are immutable: they can only be set once during\n construction."},"id":265,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":254,"nodeType":"ParameterList","parameters":[{"constant":false,"id":251,"mutability":"mutable","name":"name_","nameLocation":"9095:5:0","nodeType":"VariableDeclaration","scope":265,"src":"9081:19:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":250,"name":"string","nodeType":"ElementaryTypeName","src":"9081:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":253,"mutability":"mutable","name":"symbol_","nameLocation":"9116:7:0","nodeType":"VariableDeclaration","scope":265,"src":"9102:21:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":252,"name":"string","nodeType":"ElementaryTypeName","src":"9102:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"9080:44:0"},"returnParameters":{"id":255,"nodeType":"ParameterList","parameters":[],"src":"9125:0:0"},"scope":766,"src":"9069:116:0","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[211],"body":{"id":274,"nodeType":"Block","src":"9324:31:0","statements":[{"expression":{"id":272,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":246,"src":"9342:5:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":271,"id":273,"nodeType":"Return","src":"9335:12:0"}]},"documentation":{"id":266,"nodeType":"StructuredDocumentation","src":"9193:56:0","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":275,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"9264:4:0","nodeType":"FunctionDefinition","overrides":{"id":268,"nodeType":"OverrideSpecifier","overrides":[],"src":"9291:8:0"},"parameters":{"id":267,"nodeType":"ParameterList","parameters":[],"src":"9268:2:0"},"returnParameters":{"id":271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":270,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":275,"src":"9309:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":269,"name":"string","nodeType":"ElementaryTypeName","src":"9309:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"9308:15:0"},"scope":766,"src":"9255:100:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[217],"body":{"id":284,"nodeType":"Block","src":"9545:33:0","statements":[{"expression":{"id":282,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":248,"src":"9563:7:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":281,"id":283,"nodeType":"Return","src":"9556:14:0"}]},"documentation":{"id":276,"nodeType":"StructuredDocumentation","src":"9363:105:0","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":285,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"9483:6:0","nodeType":"FunctionDefinition","overrides":{"id":278,"nodeType":"OverrideSpecifier","overrides":[],"src":"9512:8:0"},"parameters":{"id":277,"nodeType":"ParameterList","parameters":[],"src":"9489:2:0"},"returnParameters":{"id":281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":280,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":285,"src":"9530:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":279,"name":"string","nodeType":"ElementaryTypeName","src":"9530:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"9529:15:0"},"scope":766,"src":"9474:104:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[223],"body":{"id":294,"nodeType":"Block","src":"10282:28:0","statements":[{"expression":{"hexValue":"3138","id":292,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10300:2:0","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":291,"id":293,"nodeType":"Return","src":"10293:9:0"}]},"documentation":{"id":286,"nodeType":"StructuredDocumentation","src":"9586:625:0","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overridden;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":295,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"10226:8:0","nodeType":"FunctionDefinition","overrides":{"id":288,"nodeType":"OverrideSpecifier","overrides":[],"src":"10257:8:0"},"parameters":{"id":287,"nodeType":"ParameterList","parameters":[],"src":"10234:2:0"},"returnParameters":{"id":291,"nodeType":"ParameterList","parameters":[{"constant":false,"id":290,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":295,"src":"10275:5:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":289,"name":"uint8","nodeType":"ElementaryTypeName","src":"10275:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"10274:7:0"},"scope":766,"src":"10217:93:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[132],"body":{"id":304,"nodeType":"Block","src":"10445:38:0","statements":[{"expression":{"id":302,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":244,"src":"10463:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":301,"id":303,"nodeType":"Return","src":"10456:19:0"}]},"documentation":{"id":296,"nodeType":"StructuredDocumentation","src":"10318:51:0","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":305,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"10384:11:0","nodeType":"FunctionDefinition","overrides":{"id":298,"nodeType":"OverrideSpecifier","overrides":[],"src":"10418:8:0"},"parameters":{"id":297,"nodeType":"ParameterList","parameters":[],"src":"10395:2:0"},"returnParameters":{"id":301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":300,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":305,"src":"10436:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":299,"name":"uint256","nodeType":"ElementaryTypeName","src":"10436:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10435:9:0"},"scope":766,"src":"10375:108:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[140],"body":{"id":318,"nodeType":"Block","src":"10629:44:0","statements":[{"expression":{"baseExpression":{"id":314,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":236,"src":"10647:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":316,"indexExpression":{"id":315,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":308,"src":"10657:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10647:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":313,"id":317,"nodeType":"Return","src":"10640:25:0"}]},"documentation":{"id":306,"nodeType":"StructuredDocumentation","src":"10491:49:0","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":319,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"10555:9:0","nodeType":"FunctionDefinition","overrides":{"id":310,"nodeType":"OverrideSpecifier","overrides":[],"src":"10602:8:0"},"parameters":{"id":309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":308,"mutability":"mutable","name":"account","nameLocation":"10573:7:0","nodeType":"VariableDeclaration","scope":319,"src":"10565:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":307,"name":"address","nodeType":"ElementaryTypeName","src":"10565:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10564:17:0"},"returnParameters":{"id":313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":312,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":319,"src":"10620:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":311,"name":"uint256","nodeType":"ElementaryTypeName","src":"10620:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10619:9:0"},"scope":766,"src":"10546:127:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[150],"body":{"id":339,"nodeType":"Block","src":"10978:83:0","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":331,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11,"src":"10999:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":332,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10999:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":333,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":322,"src":"11013:9:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":334,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":324,"src":"11024:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":330,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":570,"src":"10989:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":335,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10989:42:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":336,"nodeType":"ExpressionStatement","src":"10989:42:0"},{"expression":{"hexValue":"74727565","id":337,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11049:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":329,"id":338,"nodeType":"Return","src":"11042:11:0"}]},"documentation":{"id":320,"nodeType":"StructuredDocumentation","src":"10681:199:0","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `recipient` cannot be the zero address.\n - the caller must have a balance of at least `amount`."},"functionSelector":"a9059cbb","id":340,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"10895:8:0","nodeType":"FunctionDefinition","overrides":{"id":326,"nodeType":"OverrideSpecifier","overrides":[],"src":"10954:8:0"},"parameters":{"id":325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":322,"mutability":"mutable","name":"recipient","nameLocation":"10912:9:0","nodeType":"VariableDeclaration","scope":340,"src":"10904:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":321,"name":"address","nodeType":"ElementaryTypeName","src":"10904:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":324,"mutability":"mutable","name":"amount","nameLocation":"10931:6:0","nodeType":"VariableDeclaration","scope":340,"src":"10923:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":323,"name":"uint256","nodeType":"ElementaryTypeName","src":"10923:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10903:35:0"},"returnParameters":{"id":329,"nodeType":"ParameterList","parameters":[{"constant":false,"id":328,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":340,"src":"10972:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":327,"name":"bool","nodeType":"ElementaryTypeName","src":"10972:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10971:6:0"},"scope":766,"src":"10886:175:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[160],"body":{"id":357,"nodeType":"Block","src":"11222:53:0","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":351,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":242,"src":"11240:11:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":353,"indexExpression":{"id":352,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":343,"src":"11252:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11240:18:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":355,"indexExpression":{"id":354,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":345,"src":"11259:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11240:27:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":350,"id":356,"nodeType":"Return","src":"11233:34:0"}]},"documentation":{"id":341,"nodeType":"StructuredDocumentation","src":"11069:49:0","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":358,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"11133:9:0","nodeType":"FunctionDefinition","overrides":{"id":347,"nodeType":"OverrideSpecifier","overrides":[],"src":"11195:8:0"},"parameters":{"id":346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":343,"mutability":"mutable","name":"owner","nameLocation":"11151:5:0","nodeType":"VariableDeclaration","scope":358,"src":"11143:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":342,"name":"address","nodeType":"ElementaryTypeName","src":"11143:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":345,"mutability":"mutable","name":"spender","nameLocation":"11166:7:0","nodeType":"VariableDeclaration","scope":358,"src":"11158:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":344,"name":"address","nodeType":"ElementaryTypeName","src":"11158:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"11142:32:0"},"returnParameters":{"id":350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":349,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":358,"src":"11213:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":348,"name":"uint256","nodeType":"ElementaryTypeName","src":"11213:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11212:9:0"},"scope":766,"src":"11124:151:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[170],"body":{"id":378,"nodeType":"Block","src":"11511:80:0","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":370,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11,"src":"11531:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":371,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11531:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":372,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":361,"src":"11545:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":373,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":363,"src":"11554:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":369,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":743,"src":"11522:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":374,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11522:39:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":375,"nodeType":"ExpressionStatement","src":"11522:39:0"},{"expression":{"hexValue":"74727565","id":376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11579:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":368,"id":377,"nodeType":"Return","src":"11572:11:0"}]},"documentation":{"id":359,"nodeType":"StructuredDocumentation","src":"11283:133:0","text":" @dev See {IERC20-approve}.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":379,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"11431:7:0","nodeType":"FunctionDefinition","overrides":{"id":365,"nodeType":"OverrideSpecifier","overrides":[],"src":"11487:8:0"},"parameters":{"id":364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":361,"mutability":"mutable","name":"spender","nameLocation":"11447:7:0","nodeType":"VariableDeclaration","scope":379,"src":"11439:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":360,"name":"address","nodeType":"ElementaryTypeName","src":"11439:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":363,"mutability":"mutable","name":"amount","nameLocation":"11464:6:0","nodeType":"VariableDeclaration","scope":379,"src":"11456:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":362,"name":"uint256","nodeType":"ElementaryTypeName","src":"11456:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11438:33:0"},"returnParameters":{"id":368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":367,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":379,"src":"11505:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":366,"name":"bool","nodeType":"ElementaryTypeName","src":"11505:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11504:6:0"},"scope":766,"src":"11422:169:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[182],"body":{"id":426,"nodeType":"Block","src":"12219:346:0","statements":[{"expression":{"arguments":[{"id":393,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":382,"src":"12240:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":394,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"12248:9:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":395,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":386,"src":"12259:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":392,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":570,"src":"12230:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":396,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12230:36:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":397,"nodeType":"ExpressionStatement","src":"12230:36:0"},{"assignments":[399],"declarations":[{"constant":false,"id":399,"mutability":"mutable","name":"currentAllowance","nameLocation":"12287:16:0","nodeType":"VariableDeclaration","scope":426,"src":"12279:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":398,"name":"uint256","nodeType":"ElementaryTypeName","src":"12279:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":406,"initialValue":{"baseExpression":{"baseExpression":{"id":400,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":242,"src":"12306:11:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":402,"indexExpression":{"id":401,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":382,"src":"12318:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12306:19:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":405,"indexExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":403,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11,"src":"12326:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":404,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12326:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12306:33:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12279:60:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":408,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":399,"src":"12358:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":409,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":386,"src":"12378:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12358:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365","id":411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12386:42:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330","typeString":"literal_string \"ERC20: transfer amount exceeds allowance\""},"value":"ERC20: transfer amount exceeds allowance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330","typeString":"literal_string \"ERC20: transfer amount exceeds allowance\""}],"id":407,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12350:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":412,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12350:79:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":413,"nodeType":"ExpressionStatement","src":"12350:79:0"},{"id":423,"nodeType":"UncheckedBlock","src":"12440:94:0","statements":[{"expression":{"arguments":[{"id":415,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":382,"src":"12474:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":416,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11,"src":"12482:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":417,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12482:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":418,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":399,"src":"12496:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":419,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":386,"src":"12515:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12496:25:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":414,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":743,"src":"12465:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":421,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12465:57:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":422,"nodeType":"ExpressionStatement","src":"12465:57:0"}]},{"expression":{"hexValue":"74727565","id":424,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12553:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":391,"id":425,"nodeType":"Return","src":"12546:11:0"}]},"documentation":{"id":380,"nodeType":"StructuredDocumentation","src":"11599:468:0","text":" @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n Requirements:\n - `sender` and `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`.\n - the caller must have allowance for ``sender``'s tokens of at least\n `amount`."},"functionSelector":"23b872dd","id":427,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"12082:12:0","nodeType":"FunctionDefinition","overrides":{"id":388,"nodeType":"OverrideSpecifier","overrides":[],"src":"12195:8:0"},"parameters":{"id":387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":382,"mutability":"mutable","name":"sender","nameLocation":"12113:6:0","nodeType":"VariableDeclaration","scope":427,"src":"12105:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":381,"name":"address","nodeType":"ElementaryTypeName","src":"12105:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":384,"mutability":"mutable","name":"recipient","nameLocation":"12138:9:0","nodeType":"VariableDeclaration","scope":427,"src":"12130:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":383,"name":"address","nodeType":"ElementaryTypeName","src":"12130:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":386,"mutability":"mutable","name":"amount","nameLocation":"12166:6:0","nodeType":"VariableDeclaration","scope":427,"src":"12158:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":385,"name":"uint256","nodeType":"ElementaryTypeName","src":"12158:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12094:85:0"},"returnParameters":{"id":391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":390,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":427,"src":"12213:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":389,"name":"bool","nodeType":"ElementaryTypeName","src":"12213:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"12212:6:0"},"scope":766,"src":"12073:492:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":453,"nodeType":"Block","src":"13068:121:0","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":438,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11,"src":"13088:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":439,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13088:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":440,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":430,"src":"13102:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"baseExpression":{"id":441,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":242,"src":"13111:11:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":444,"indexExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":442,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11,"src":"13123:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":443,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13123:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13111:25:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":446,"indexExpression":{"id":445,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":430,"src":"13137:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13111:34:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":447,"name":"addedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":432,"src":"13148:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13111:47:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":437,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":743,"src":"13079:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":449,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13079:80:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":450,"nodeType":"ExpressionStatement","src":"13079:80:0"},{"expression":{"hexValue":"74727565","id":451,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13177:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":436,"id":452,"nodeType":"Return","src":"13170:11:0"}]},"documentation":{"id":428,"nodeType":"StructuredDocumentation","src":"12573:395:0","text":" @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"39509351","id":454,"implemented":true,"kind":"function","modifiers":[],"name":"increaseAllowance","nameLocation":"12983:17:0","nodeType":"FunctionDefinition","parameters":{"id":433,"nodeType":"ParameterList","parameters":[{"constant":false,"id":430,"mutability":"mutable","name":"spender","nameLocation":"13009:7:0","nodeType":"VariableDeclaration","scope":454,"src":"13001:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":429,"name":"address","nodeType":"ElementaryTypeName","src":"13001:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":432,"mutability":"mutable","name":"addedValue","nameLocation":"13026:10:0","nodeType":"VariableDeclaration","scope":454,"src":"13018:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":431,"name":"uint256","nodeType":"ElementaryTypeName","src":"13018:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13000:37:0"},"returnParameters":{"id":436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":435,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":454,"src":"13062:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":434,"name":"bool","nodeType":"ElementaryTypeName","src":"13062:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"13061:6:0"},"scope":766,"src":"12974:215:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":492,"nodeType":"Block","src":"13791:314:0","statements":[{"assignments":[465],"declarations":[{"constant":false,"id":465,"mutability":"mutable","name":"currentAllowance","nameLocation":"13810:16:0","nodeType":"VariableDeclaration","scope":492,"src":"13802:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":464,"name":"uint256","nodeType":"ElementaryTypeName","src":"13802:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":472,"initialValue":{"baseExpression":{"baseExpression":{"id":466,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":242,"src":"13829:11:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":469,"indexExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":467,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11,"src":"13841:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":468,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13841:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13829:25:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":471,"indexExpression":{"id":470,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":457,"src":"13855:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13829:34:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13802:61:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":474,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":465,"src":"13882:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":475,"name":"subtractedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":459,"src":"13902:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13882:35:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f","id":477,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13919:39:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","typeString":"literal_string \"ERC20: decreased allowance below zero\""},"value":"ERC20: decreased allowance below zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","typeString":"literal_string \"ERC20: decreased allowance below zero\""}],"id":473,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13874:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":478,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13874:85:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":479,"nodeType":"ExpressionStatement","src":"13874:85:0"},{"id":489,"nodeType":"UncheckedBlock","src":"13970:104:0","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":481,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11,"src":"14004:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":482,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14004:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":483,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":457,"src":"14018:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":484,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":465,"src":"14027:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":485,"name":"subtractedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":459,"src":"14046:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14027:34:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":480,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":743,"src":"13995:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":487,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13995:67:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":488,"nodeType":"ExpressionStatement","src":"13995:67:0"}]},{"expression":{"hexValue":"74727565","id":490,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14093:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":463,"id":491,"nodeType":"Return","src":"14086:11:0"}]},"documentation":{"id":455,"nodeType":"StructuredDocumentation","src":"13197:489:0","text":" @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."},"functionSelector":"a457c2d7","id":493,"implemented":true,"kind":"function","modifiers":[],"name":"decreaseAllowance","nameLocation":"13701:17:0","nodeType":"FunctionDefinition","parameters":{"id":460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":457,"mutability":"mutable","name":"spender","nameLocation":"13727:7:0","nodeType":"VariableDeclaration","scope":493,"src":"13719:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":456,"name":"address","nodeType":"ElementaryTypeName","src":"13719:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":459,"mutability":"mutable","name":"subtractedValue","nameLocation":"13744:15:0","nodeType":"VariableDeclaration","scope":493,"src":"13736:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":458,"name":"uint256","nodeType":"ElementaryTypeName","src":"13736:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13718:42:0"},"returnParameters":{"id":463,"nodeType":"ParameterList","parameters":[{"constant":false,"id":462,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":493,"src":"13785:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":461,"name":"bool","nodeType":"ElementaryTypeName","src":"13785:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"13784:6:0"},"scope":766,"src":"13692:413:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":569,"nodeType":"Block","src":"14716:612:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":504,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":496,"src":"14735:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14753:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":506,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14745:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":505,"name":"address","nodeType":"ElementaryTypeName","src":"14745:7:0","typeDescriptions":{}}},"id":508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14745:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14735:20:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373","id":510,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14757:39:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","typeString":"literal_string \"ERC20: transfer from the zero address\""},"value":"ERC20: transfer from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","typeString":"literal_string \"ERC20: transfer from the zero address\""}],"id":503,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14727:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":511,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14727:70:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":512,"nodeType":"ExpressionStatement","src":"14727:70:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":514,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":498,"src":"14816:9:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14837:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":516,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14829:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":515,"name":"address","nodeType":"ElementaryTypeName","src":"14829:7:0","typeDescriptions":{}}},"id":518,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14829:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14816:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472657373","id":520,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14841:37:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","typeString":"literal_string \"ERC20: transfer to the zero address\""},"value":"ERC20: transfer to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","typeString":"literal_string \"ERC20: transfer to the zero address\""}],"id":513,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14808:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14808:71:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":522,"nodeType":"ExpressionStatement","src":"14808:71:0"},{"expression":{"arguments":[{"id":524,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":496,"src":"14913:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":525,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":498,"src":"14921:9:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":526,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":500,"src":"14932:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":523,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":754,"src":"14892:20:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":527,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14892:47:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":528,"nodeType":"ExpressionStatement","src":"14892:47:0"},{"assignments":[530],"declarations":[{"constant":false,"id":530,"mutability":"mutable","name":"senderBalance","nameLocation":"14960:13:0","nodeType":"VariableDeclaration","scope":569,"src":"14952:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":529,"name":"uint256","nodeType":"ElementaryTypeName","src":"14952:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":534,"initialValue":{"baseExpression":{"id":531,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":236,"src":"14976:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":533,"indexExpression":{"id":532,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":496,"src":"14986:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14976:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14952:41:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":536,"name":"senderBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":530,"src":"15012:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":537,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":500,"src":"15029:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15012:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365","id":539,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15037:40:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","typeString":"literal_string \"ERC20: transfer amount exceeds balance\""},"value":"ERC20: transfer amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","typeString":"literal_string \"ERC20: transfer amount exceeds balance\""}],"id":535,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"15004:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":540,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15004:74:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":541,"nodeType":"ExpressionStatement","src":"15004:74:0"},{"id":550,"nodeType":"UncheckedBlock","src":"15089:79:0","statements":[{"expression":{"id":548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":542,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":236,"src":"15114:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":544,"indexExpression":{"id":543,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":496,"src":"15124:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15114:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":545,"name":"senderBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":530,"src":"15134:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":546,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":500,"src":"15150:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15134:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15114:42:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":549,"nodeType":"ExpressionStatement","src":"15114:42:0"}]},{"expression":{"id":555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":551,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":236,"src":"15178:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":553,"indexExpression":{"id":552,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":498,"src":"15188:9:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15178:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":554,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":500,"src":"15202:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15178:30:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":556,"nodeType":"ExpressionStatement","src":"15178:30:0"},{"eventCall":{"arguments":[{"id":558,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":496,"src":"15235:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":559,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":498,"src":"15243:9:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":560,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":500,"src":"15254:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":557,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":191,"src":"15226:8:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":561,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15226:35:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":562,"nodeType":"EmitStatement","src":"15221:40:0"},{"expression":{"arguments":[{"id":564,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":496,"src":"15294:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":565,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":498,"src":"15302:9:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":566,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":500,"src":"15313:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":563,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":765,"src":"15274:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":567,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15274:46:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":568,"nodeType":"ExpressionStatement","src":"15274:46:0"}]},"documentation":{"id":494,"nodeType":"StructuredDocumentation","src":"14113:476:0","text":" @dev Moves `amount` of tokens from `sender` to `recipient`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `sender` cannot be the zero address.\n - `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`."},"id":570,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"14604:9:0","nodeType":"FunctionDefinition","parameters":{"id":501,"nodeType":"ParameterList","parameters":[{"constant":false,"id":496,"mutability":"mutable","name":"sender","nameLocation":"14632:6:0","nodeType":"VariableDeclaration","scope":570,"src":"14624:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":495,"name":"address","nodeType":"ElementaryTypeName","src":"14624:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":498,"mutability":"mutable","name":"recipient","nameLocation":"14657:9:0","nodeType":"VariableDeclaration","scope":570,"src":"14649:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":497,"name":"address","nodeType":"ElementaryTypeName","src":"14649:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":500,"mutability":"mutable","name":"amount","nameLocation":"14685:6:0","nodeType":"VariableDeclaration","scope":570,"src":"14677:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":499,"name":"uint256","nodeType":"ElementaryTypeName","src":"14677:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14613:85:0"},"returnParameters":{"id":502,"nodeType":"ParameterList","parameters":[],"src":"14716:0:0"},"scope":766,"src":"14595:733:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":625,"nodeType":"Block","src":"15680:334:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":579,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"15699:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":582,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15718:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":581,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15710:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":580,"name":"address","nodeType":"ElementaryTypeName","src":"15710:7:0","typeDescriptions":{}}},"id":583,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15710:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15699:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206d696e7420746f20746865207a65726f2061646472657373","id":585,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15722:33:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","typeString":"literal_string \"ERC20: mint to the zero address\""},"value":"ERC20: mint to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","typeString":"literal_string \"ERC20: mint to the zero address\""}],"id":578,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"15691:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":586,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15691:65:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":587,"nodeType":"ExpressionStatement","src":"15691:65:0"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":591,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15798:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":590,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15790:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":589,"name":"address","nodeType":"ElementaryTypeName","src":"15790:7:0","typeDescriptions":{}}},"id":592,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15790:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":593,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"15802:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":594,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":575,"src":"15811:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":588,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":754,"src":"15769:20:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":595,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15769:49:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":596,"nodeType":"ExpressionStatement","src":"15769:49:0"},{"expression":{"id":599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":597,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":244,"src":"15831:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":598,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":575,"src":"15847:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15831:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":600,"nodeType":"ExpressionStatement","src":"15831:22:0"},{"expression":{"id":605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":601,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":236,"src":"15864:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":603,"indexExpression":{"id":602,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"15874:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15864:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":604,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":575,"src":"15886:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15864:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":606,"nodeType":"ExpressionStatement","src":"15864:28:0"},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":610,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15925:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":609,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15917:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":608,"name":"address","nodeType":"ElementaryTypeName","src":"15917:7:0","typeDescriptions":{}}},"id":611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15917:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":612,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"15929:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":613,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":575,"src":"15938:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":607,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":191,"src":"15908:8:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":614,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15908:37:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":615,"nodeType":"EmitStatement","src":"15903:42:0"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":619,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15986:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":618,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15978:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":617,"name":"address","nodeType":"ElementaryTypeName","src":"15978:7:0","typeDescriptions":{}}},"id":620,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15978:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":621,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"15990:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":622,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":575,"src":"15999:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":616,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":765,"src":"15958:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":623,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15958:48:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":624,"nodeType":"ExpressionStatement","src":"15958:48:0"}]},"documentation":{"id":571,"nodeType":"StructuredDocumentation","src":"15336:273:0","text":"@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."},"id":626,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"15624:5:0","nodeType":"FunctionDefinition","parameters":{"id":576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":573,"mutability":"mutable","name":"account","nameLocation":"15638:7:0","nodeType":"VariableDeclaration","scope":626,"src":"15630:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":572,"name":"address","nodeType":"ElementaryTypeName","src":"15630:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":575,"mutability":"mutable","name":"amount","nameLocation":"15655:6:0","nodeType":"VariableDeclaration","scope":626,"src":"15647:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":574,"name":"uint256","nodeType":"ElementaryTypeName","src":"15647:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15629:33:0"},"returnParameters":{"id":577,"nodeType":"ParameterList","parameters":[],"src":"15680:0:0"},"scope":766,"src":"15615:399:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":697,"nodeType":"Block","src":"16412:526:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":635,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":629,"src":"16431:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16450:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":637,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16442:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":636,"name":"address","nodeType":"ElementaryTypeName","src":"16442:7:0","typeDescriptions":{}}},"id":639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16442:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"16431:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206275726e2066726f6d20746865207a65726f2061646472657373","id":641,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16454:35:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","typeString":"literal_string \"ERC20: burn from the zero address\""},"value":"ERC20: burn from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","typeString":"literal_string \"ERC20: burn from the zero address\""}],"id":634,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"16423:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":642,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16423:67:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":643,"nodeType":"ExpressionStatement","src":"16423:67:0"},{"expression":{"arguments":[{"id":645,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":629,"src":"16524:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":648,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16541:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":647,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16533:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":646,"name":"address","nodeType":"ElementaryTypeName","src":"16533:7:0","typeDescriptions":{}}},"id":649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16533:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":650,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"16545:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":644,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":754,"src":"16503:20:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":651,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16503:49:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":652,"nodeType":"ExpressionStatement","src":"16503:49:0"},{"assignments":[654],"declarations":[{"constant":false,"id":654,"mutability":"mutable","name":"accountBalance","nameLocation":"16573:14:0","nodeType":"VariableDeclaration","scope":697,"src":"16565:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":653,"name":"uint256","nodeType":"ElementaryTypeName","src":"16565:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":658,"initialValue":{"baseExpression":{"id":655,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":236,"src":"16590:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":657,"indexExpression":{"id":656,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":629,"src":"16600:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16590:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16565:43:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":660,"name":"accountBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":654,"src":"16627:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":661,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"16645:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16627:24:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365","id":663,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16653:36:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","typeString":"literal_string \"ERC20: burn amount exceeds balance\""},"value":"ERC20: burn amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","typeString":"literal_string \"ERC20: burn amount exceeds balance\""}],"id":659,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"16619:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":664,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16619:71:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":665,"nodeType":"ExpressionStatement","src":"16619:71:0"},{"id":674,"nodeType":"UncheckedBlock","src":"16701:81:0","statements":[{"expression":{"id":672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":666,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":236,"src":"16726:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":668,"indexExpression":{"id":667,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":629,"src":"16736:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"16726:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":669,"name":"accountBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":654,"src":"16747:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":670,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"16764:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16747:23:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16726:44:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":673,"nodeType":"ExpressionStatement","src":"16726:44:0"}]},{"expression":{"id":677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":675,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":244,"src":"16792:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":676,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"16808:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16792:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":678,"nodeType":"ExpressionStatement","src":"16792:22:0"},{"eventCall":{"arguments":[{"id":680,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":629,"src":"16841:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":683,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16858:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":682,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16850:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":681,"name":"address","nodeType":"ElementaryTypeName","src":"16850:7:0","typeDescriptions":{}}},"id":684,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16850:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":685,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"16862:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":679,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":191,"src":"16832:8:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":686,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16832:37:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":687,"nodeType":"EmitStatement","src":"16827:42:0"},{"expression":{"arguments":[{"id":689,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":629,"src":"16902:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16919:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":691,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16911:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":690,"name":"address","nodeType":"ElementaryTypeName","src":"16911:7:0","typeDescriptions":{}}},"id":693,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16911:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":694,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"16923:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":688,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":765,"src":"16882:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":695,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16882:48:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":696,"nodeType":"ExpressionStatement","src":"16882:48:0"}]},"documentation":{"id":627,"nodeType":"StructuredDocumentation","src":"16022:319:0","text":" @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."},"id":698,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"16356:5:0","nodeType":"FunctionDefinition","parameters":{"id":632,"nodeType":"ParameterList","parameters":[{"constant":false,"id":629,"mutability":"mutable","name":"account","nameLocation":"16370:7:0","nodeType":"VariableDeclaration","scope":698,"src":"16362:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":628,"name":"address","nodeType":"ElementaryTypeName","src":"16362:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":631,"mutability":"mutable","name":"amount","nameLocation":"16387:6:0","nodeType":"VariableDeclaration","scope":698,"src":"16379:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":630,"name":"uint256","nodeType":"ElementaryTypeName","src":"16379:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16361:33:0"},"returnParameters":{"id":633,"nodeType":"ParameterList","parameters":[],"src":"16412:0:0"},"scope":766,"src":"16347:591:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":742,"nodeType":"Block","src":"17493:263:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":709,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":701,"src":"17512:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":712,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17529:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":711,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17521:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":710,"name":"address","nodeType":"ElementaryTypeName","src":"17521:7:0","typeDescriptions":{}}},"id":713,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17521:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"17512:19:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373","id":715,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17533:38:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","typeString":"literal_string \"ERC20: approve from the zero address\""},"value":"ERC20: approve from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","typeString":"literal_string \"ERC20: approve from the zero address\""}],"id":708,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"17504:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":716,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17504:68:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":717,"nodeType":"ExpressionStatement","src":"17504:68:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":719,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":703,"src":"17591:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17610:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":721,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17602:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":720,"name":"address","nodeType":"ElementaryTypeName","src":"17602:7:0","typeDescriptions":{}}},"id":723,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17602:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"17591:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f2061646472657373","id":725,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17614:36:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","typeString":"literal_string \"ERC20: approve to the zero address\""},"value":"ERC20: approve to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","typeString":"literal_string \"ERC20: approve to the zero address\""}],"id":718,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"17583:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":726,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17583:68:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":727,"nodeType":"ExpressionStatement","src":"17583:68:0"},{"expression":{"id":734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":728,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":242,"src":"17664:11:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":731,"indexExpression":{"id":729,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":701,"src":"17676:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17664:18:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":732,"indexExpression":{"id":730,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":703,"src":"17683:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17664:27:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":733,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":705,"src":"17694:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17664:36:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":735,"nodeType":"ExpressionStatement","src":"17664:36:0"},{"eventCall":{"arguments":[{"id":737,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":701,"src":"17725:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":738,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":703,"src":"17732:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":739,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":705,"src":"17741:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":736,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":200,"src":"17716:8:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":740,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17716:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":741,"nodeType":"EmitStatement","src":"17711:37:0"}]},"documentation":{"id":699,"nodeType":"StructuredDocumentation","src":"16946:424:0","text":" @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."},"id":743,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"17385:8:0","nodeType":"FunctionDefinition","parameters":{"id":706,"nodeType":"ParameterList","parameters":[{"constant":false,"id":701,"mutability":"mutable","name":"owner","nameLocation":"17412:5:0","nodeType":"VariableDeclaration","scope":743,"src":"17404:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":700,"name":"address","nodeType":"ElementaryTypeName","src":"17404:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":703,"mutability":"mutable","name":"spender","nameLocation":"17436:7:0","nodeType":"VariableDeclaration","scope":743,"src":"17428:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":702,"name":"address","nodeType":"ElementaryTypeName","src":"17428:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":705,"mutability":"mutable","name":"amount","nameLocation":"17462:6:0","nodeType":"VariableDeclaration","scope":743,"src":"17454:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":704,"name":"uint256","nodeType":"ElementaryTypeName","src":"17454:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17393:82:0"},"returnParameters":{"id":707,"nodeType":"ParameterList","parameters":[],"src":"17493:0:0"},"scope":766,"src":"17376:380:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":753,"nodeType":"Block","src":"18479:2:0","statements":[]},"documentation":{"id":744,"nodeType":"StructuredDocumentation","src":"17764:586:0","text":" @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":754,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"18365:20:0","nodeType":"FunctionDefinition","parameters":{"id":751,"nodeType":"ParameterList","parameters":[{"constant":false,"id":746,"mutability":"mutable","name":"from","nameLocation":"18404:4:0","nodeType":"VariableDeclaration","scope":754,"src":"18396:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":745,"name":"address","nodeType":"ElementaryTypeName","src":"18396:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":748,"mutability":"mutable","name":"to","nameLocation":"18427:2:0","nodeType":"VariableDeclaration","scope":754,"src":"18419:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":747,"name":"address","nodeType":"ElementaryTypeName","src":"18419:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":750,"mutability":"mutable","name":"amount","nameLocation":"18448:6:0","nodeType":"VariableDeclaration","scope":754,"src":"18440:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":749,"name":"uint256","nodeType":"ElementaryTypeName","src":"18440:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18385:76:0"},"returnParameters":{"id":752,"nodeType":"ParameterList","parameters":[],"src":"18479:0:0"},"scope":766,"src":"18356:125:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":764,"nodeType":"Block","src":"19207:2:0","statements":[]},"documentation":{"id":755,"nodeType":"StructuredDocumentation","src":"18489:590:0","text":" @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":765,"implemented":true,"kind":"function","modifiers":[],"name":"_afterTokenTransfer","nameLocation":"19094:19:0","nodeType":"FunctionDefinition","parameters":{"id":762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":757,"mutability":"mutable","name":"from","nameLocation":"19132:4:0","nodeType":"VariableDeclaration","scope":765,"src":"19124:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":756,"name":"address","nodeType":"ElementaryTypeName","src":"19124:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":759,"mutability":"mutable","name":"to","nameLocation":"19155:2:0","nodeType":"VariableDeclaration","scope":765,"src":"19147:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":758,"name":"address","nodeType":"ElementaryTypeName","src":"19147:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":761,"mutability":"mutable","name":"amount","nameLocation":"19176:6:0","nodeType":"VariableDeclaration","scope":765,"src":"19168:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":760,"name":"uint256","nodeType":"ElementaryTypeName","src":"19168:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19113:76:0"},"returnParameters":{"id":763,"nodeType":"ParameterList","parameters":[],"src":"19207:0:0"},"scope":766,"src":"19085:124:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1689,"src":"8475:10737:0","usedErrors":[]},{"abstract":false,"baseContracts":[],"canonicalName":"MerkleProof","contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":1265,"linearizedBaseContracts":[1265],"name":"MerkleProof","nameLocation":"19226:11:0","nodeType":"ContractDefinition","nodes":[{"body":{"id":786,"nodeType":"Block","src":"19710:59:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":780,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":770,"src":"19741:5:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},{"id":781,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":774,"src":"19748:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":779,"name":"processProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":848,"src":"19728:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32[] memory,bytes32) pure returns (bytes32)"}},"id":782,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19728:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":783,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":772,"src":"19757:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"19728:33:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":778,"id":785,"nodeType":"Return","src":"19721:40:0"}]},"documentation":{"id":767,"nodeType":"StructuredDocumentation","src":"19245:328:0","text":" @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\n defined by `root`. For this, a `proof` must be provided, containing\n sibling hashes on the branch from the leaf to the root of the tree. Each\n pair of leaves and each pair of pre-images are assumed to be sorted."},"id":787,"implemented":true,"kind":"function","modifiers":[],"name":"verify","nameLocation":"19588:6:0","nodeType":"FunctionDefinition","parameters":{"id":775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":770,"mutability":"mutable","name":"proof","nameLocation":"19622:5:0","nodeType":"VariableDeclaration","scope":787,"src":"19605:22:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":768,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19605:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":769,"nodeType":"ArrayTypeName","src":"19605:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":772,"mutability":"mutable","name":"root","nameLocation":"19646:4:0","nodeType":"VariableDeclaration","scope":787,"src":"19638:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":771,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19638:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":774,"mutability":"mutable","name":"leaf","nameLocation":"19669:4:0","nodeType":"VariableDeclaration","scope":787,"src":"19661:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":773,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19661:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"19594:86:0"},"returnParameters":{"id":778,"nodeType":"ParameterList","parameters":[{"constant":false,"id":777,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":787,"src":"19704:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":776,"name":"bool","nodeType":"ElementaryTypeName","src":"19704:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"19703:6:0"},"scope":1265,"src":"19579:190:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":807,"nodeType":"Block","src":"20018:67:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":801,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":791,"src":"20057:5:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},{"id":802,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":795,"src":"20064:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":800,"name":"processProofCalldata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":888,"src":"20036:20:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_calldata_ptr_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32[] calldata,bytes32) pure returns (bytes32)"}},"id":803,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20036:33:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":804,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":793,"src":"20073:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"20036:41:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":799,"id":806,"nodeType":"Return","src":"20029:48:0"}]},"documentation":{"id":788,"nodeType":"StructuredDocumentation","src":"19777:94:0","text":" @dev Calldata version of {verify}\n _Available since v4.7._"},"id":808,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCalldata","nameLocation":"19886:14:0","nodeType":"FunctionDefinition","parameters":{"id":796,"nodeType":"ParameterList","parameters":[{"constant":false,"id":791,"mutability":"mutable","name":"proof","nameLocation":"19930:5:0","nodeType":"VariableDeclaration","scope":808,"src":"19911:24:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":789,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19911:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":790,"nodeType":"ArrayTypeName","src":"19911:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":793,"mutability":"mutable","name":"root","nameLocation":"19954:4:0","nodeType":"VariableDeclaration","scope":808,"src":"19946:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":792,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19946:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":795,"mutability":"mutable","name":"leaf","nameLocation":"19977:4:0","nodeType":"VariableDeclaration","scope":808,"src":"19969:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":794,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19969:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"19900:88:0"},"returnParameters":{"id":799,"nodeType":"ParameterList","parameters":[{"constant":false,"id":798,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":808,"src":"20012:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":797,"name":"bool","nodeType":"ElementaryTypeName","src":"20012:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"20011:6:0"},"scope":1265,"src":"19877:208:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":847,"nodeType":"Block","src":"20538:204:0","statements":[{"assignments":[820],"declarations":[{"constant":false,"id":820,"mutability":"mutable","name":"computedHash","nameLocation":"20557:12:0","nodeType":"VariableDeclaration","scope":847,"src":"20549:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":819,"name":"bytes32","nodeType":"ElementaryTypeName","src":"20549:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":822,"initialValue":{"id":821,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":814,"src":"20572:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"20549:27:0"},{"body":{"id":843,"nodeType":"Block","src":"20630:75:0","statements":[{"expression":{"id":841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":834,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":820,"src":"20645:12:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":836,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":820,"src":"20670:12:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"baseExpression":{"id":837,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":812,"src":"20684:5:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":839,"indexExpression":{"id":838,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":824,"src":"20690:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20684:8:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":835,"name":"_hashPair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1253,"src":"20660:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":840,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20660:33:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"20645:48:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":842,"nodeType":"ExpressionStatement","src":"20645:48:0"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":827,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":824,"src":"20607:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":828,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":812,"src":"20611:5:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20617:6:0","memberName":"length","nodeType":"MemberAccess","src":"20611:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20607:16:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":844,"initializationExpression":{"assignments":[824],"declarations":[{"constant":false,"id":824,"mutability":"mutable","name":"i","nameLocation":"20600:1:0","nodeType":"VariableDeclaration","scope":844,"src":"20592:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":823,"name":"uint256","nodeType":"ElementaryTypeName","src":"20592:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":826,"initialValue":{"hexValue":"30","id":825,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20604:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"20592:13:0"},"loopExpression":{"expression":{"id":832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"20625:3:0","subExpression":{"id":831,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":824,"src":"20625:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":833,"nodeType":"ExpressionStatement","src":"20625:3:0"},"nodeType":"ForStatement","src":"20587:118:0"},{"expression":{"id":845,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":820,"src":"20722:12:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":818,"id":846,"nodeType":"Return","src":"20715:19:0"}]},"documentation":{"id":809,"nodeType":"StructuredDocumentation","src":"20093:347:0","text":" @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\n from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\n hash matches the root of the tree. When processing the proof, the pairs\n of leafs & pre-images are assumed to be sorted.\n _Available since v4.4._"},"id":848,"implemented":true,"kind":"function","modifiers":[],"name":"processProof","nameLocation":"20455:12:0","nodeType":"FunctionDefinition","parameters":{"id":815,"nodeType":"ParameterList","parameters":[{"constant":false,"id":812,"mutability":"mutable","name":"proof","nameLocation":"20485:5:0","nodeType":"VariableDeclaration","scope":848,"src":"20468:22:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":810,"name":"bytes32","nodeType":"ElementaryTypeName","src":"20468:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":811,"nodeType":"ArrayTypeName","src":"20468:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":814,"mutability":"mutable","name":"leaf","nameLocation":"20500:4:0","nodeType":"VariableDeclaration","scope":848,"src":"20492:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":813,"name":"bytes32","nodeType":"ElementaryTypeName","src":"20492:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"20467:38:0"},"returnParameters":{"id":818,"nodeType":"ParameterList","parameters":[{"constant":false,"id":817,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":848,"src":"20529:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":816,"name":"bytes32","nodeType":"ElementaryTypeName","src":"20529:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"20528:9:0"},"scope":1265,"src":"20446:296:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":887,"nodeType":"Block","src":"20958:204:0","statements":[{"assignments":[860],"declarations":[{"constant":false,"id":860,"mutability":"mutable","name":"computedHash","nameLocation":"20977:12:0","nodeType":"VariableDeclaration","scope":887,"src":"20969:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":859,"name":"bytes32","nodeType":"ElementaryTypeName","src":"20969:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":862,"initialValue":{"id":861,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":854,"src":"20992:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"20969:27:0"},{"body":{"id":883,"nodeType":"Block","src":"21050:75:0","statements":[{"expression":{"id":881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":874,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":860,"src":"21065:12:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":876,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":860,"src":"21090:12:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"baseExpression":{"id":877,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":852,"src":"21104:5:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":879,"indexExpression":{"id":878,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":864,"src":"21110:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"21104:8:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":875,"name":"_hashPair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1253,"src":"21080:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":880,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21080:33:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"21065:48:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":882,"nodeType":"ExpressionStatement","src":"21065:48:0"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":867,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":864,"src":"21027:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":868,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":852,"src":"21031:5:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"21037:6:0","memberName":"length","nodeType":"MemberAccess","src":"21031:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21027:16:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":884,"initializationExpression":{"assignments":[864],"declarations":[{"constant":false,"id":864,"mutability":"mutable","name":"i","nameLocation":"21020:1:0","nodeType":"VariableDeclaration","scope":884,"src":"21012:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":863,"name":"uint256","nodeType":"ElementaryTypeName","src":"21012:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":866,"initialValue":{"hexValue":"30","id":865,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21024:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"21012:13:0"},"loopExpression":{"expression":{"id":872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"21045:3:0","subExpression":{"id":871,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":864,"src":"21045:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":873,"nodeType":"ExpressionStatement","src":"21045:3:0"},"nodeType":"ForStatement","src":"21007:118:0"},{"expression":{"id":885,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":860,"src":"21142:12:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":858,"id":886,"nodeType":"Return","src":"21135:19:0"}]},"documentation":{"id":849,"nodeType":"StructuredDocumentation","src":"20750:100:0","text":" @dev Calldata version of {processProof}\n _Available since v4.7._"},"id":888,"implemented":true,"kind":"function","modifiers":[],"name":"processProofCalldata","nameLocation":"20865:20:0","nodeType":"FunctionDefinition","parameters":{"id":855,"nodeType":"ParameterList","parameters":[{"constant":false,"id":852,"mutability":"mutable","name":"proof","nameLocation":"20905:5:0","nodeType":"VariableDeclaration","scope":888,"src":"20886:24:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":850,"name":"bytes32","nodeType":"ElementaryTypeName","src":"20886:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":851,"nodeType":"ArrayTypeName","src":"20886:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":854,"mutability":"mutable","name":"leaf","nameLocation":"20920:4:0","nodeType":"VariableDeclaration","scope":888,"src":"20912:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":853,"name":"bytes32","nodeType":"ElementaryTypeName","src":"20912:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"20885:40:0"},"returnParameters":{"id":858,"nodeType":"ParameterList","parameters":[{"constant":false,"id":857,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":888,"src":"20949:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":856,"name":"bytes32","nodeType":"ElementaryTypeName","src":"20949:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"20948:9:0"},"scope":1265,"src":"20856:306:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":913,"nodeType":"Block","src":"21603:78:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":906,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":892,"src":"21639:5:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},{"id":907,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":895,"src":"21646:10:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},{"id":908,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":900,"src":"21658:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"},{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"},{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}],"id":905,"name":"processMultiProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1085,"src":"21621:17:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_array$_t_bool_$dyn_memory_ptr_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes32[] memory,bool[] memory,bytes32[] memory) pure returns (bytes32)"}},"id":909,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21621:44:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":910,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":897,"src":"21669:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"21621:52:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":904,"id":912,"nodeType":"Return","src":"21614:59:0"}]},"documentation":{"id":889,"nodeType":"StructuredDocumentation","src":"21170:240:0","text":" @dev Returns true if the `leaves` can be proved to be a part of a Merkle tree defined by\n `root`, according to `proof` and `proofFlags` as described in {processMultiProof}.\n _Available since v4.7._"},"id":914,"implemented":true,"kind":"function","modifiers":[],"name":"multiProofVerify","nameLocation":"21425:16:0","nodeType":"FunctionDefinition","parameters":{"id":901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":892,"mutability":"mutable","name":"proof","nameLocation":"21469:5:0","nodeType":"VariableDeclaration","scope":914,"src":"21452:22:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":890,"name":"bytes32","nodeType":"ElementaryTypeName","src":"21452:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":891,"nodeType":"ArrayTypeName","src":"21452:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":895,"mutability":"mutable","name":"proofFlags","nameLocation":"21499:10:0","nodeType":"VariableDeclaration","scope":914,"src":"21485:24:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":893,"name":"bool","nodeType":"ElementaryTypeName","src":"21485:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":894,"nodeType":"ArrayTypeName","src":"21485:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":897,"mutability":"mutable","name":"root","nameLocation":"21528:4:0","nodeType":"VariableDeclaration","scope":914,"src":"21520:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":896,"name":"bytes32","nodeType":"ElementaryTypeName","src":"21520:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":900,"mutability":"mutable","name":"leaves","nameLocation":"21560:6:0","nodeType":"VariableDeclaration","scope":914,"src":"21543:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":898,"name":"bytes32","nodeType":"ElementaryTypeName","src":"21543:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":899,"nodeType":"ArrayTypeName","src":"21543:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"21441:132:0"},"returnParameters":{"id":904,"nodeType":"ParameterList","parameters":[{"constant":false,"id":903,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":914,"src":"21597:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":902,"name":"bool","nodeType":"ElementaryTypeName","src":"21597:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"21596:6:0"},"scope":1265,"src":"21416:265:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":939,"nodeType":"Block","src":"21998:86:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":932,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":918,"src":"22042:5:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},{"id":933,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":921,"src":"22049:10:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"}},{"id":934,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":926,"src":"22061:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"},{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"},{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}],"id":931,"name":"processMultiProofCalldata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1230,"src":"22016:25:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_calldata_ptr_$_t_array$_t_bool_$dyn_calldata_ptr_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes32[] calldata,bool[] calldata,bytes32[] memory) pure returns (bytes32)"}},"id":935,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22016:52:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":936,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":923,"src":"22072:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"22016:60:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":930,"id":938,"nodeType":"Return","src":"22009:67:0"}]},"documentation":{"id":915,"nodeType":"StructuredDocumentation","src":"21689:104:0","text":" @dev Calldata version of {multiProofVerify}\n _Available since v4.7._"},"id":940,"implemented":true,"kind":"function","modifiers":[],"name":"multiProofVerifyCalldata","nameLocation":"21808:24:0","nodeType":"FunctionDefinition","parameters":{"id":927,"nodeType":"ParameterList","parameters":[{"constant":false,"id":918,"mutability":"mutable","name":"proof","nameLocation":"21862:5:0","nodeType":"VariableDeclaration","scope":940,"src":"21843:24:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":916,"name":"bytes32","nodeType":"ElementaryTypeName","src":"21843:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":917,"nodeType":"ArrayTypeName","src":"21843:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":921,"mutability":"mutable","name":"proofFlags","nameLocation":"21894:10:0","nodeType":"VariableDeclaration","scope":940,"src":"21878:26:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":919,"name":"bool","nodeType":"ElementaryTypeName","src":"21878:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":920,"nodeType":"ArrayTypeName","src":"21878:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":923,"mutability":"mutable","name":"root","nameLocation":"21923:4:0","nodeType":"VariableDeclaration","scope":940,"src":"21915:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":922,"name":"bytes32","nodeType":"ElementaryTypeName","src":"21915:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":926,"mutability":"mutable","name":"leaves","nameLocation":"21955:6:0","nodeType":"VariableDeclaration","scope":940,"src":"21938:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":924,"name":"bytes32","nodeType":"ElementaryTypeName","src":"21938:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":925,"nodeType":"ArrayTypeName","src":"21938:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"21832:136:0"},"returnParameters":{"id":930,"nodeType":"ParameterList","parameters":[{"constant":false,"id":929,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":940,"src":"21992:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":928,"name":"bool","nodeType":"ElementaryTypeName","src":"21992:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"21991:6:0"},"scope":1265,"src":"21799:285:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1084,"nodeType":"Block","src":"22545:1895:0","statements":[{"assignments":[956],"declarations":[{"constant":false,"id":956,"mutability":"mutable","name":"leavesLen","nameLocation":"22941:9:0","nodeType":"VariableDeclaration","scope":1084,"src":"22933:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":955,"name":"uint256","nodeType":"ElementaryTypeName","src":"22933:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":959,"initialValue":{"expression":{"id":957,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":950,"src":"22953:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"22960:6:0","memberName":"length","nodeType":"MemberAccess","src":"22953:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"22933:33:0"},{"assignments":[961],"declarations":[{"constant":false,"id":961,"mutability":"mutable","name":"totalHashes","nameLocation":"22985:11:0","nodeType":"VariableDeclaration","scope":1084,"src":"22977:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":960,"name":"uint256","nodeType":"ElementaryTypeName","src":"22977:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":964,"initialValue":{"expression":{"id":962,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":947,"src":"22999:10:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23010:6:0","memberName":"length","nodeType":"MemberAccess","src":"22999:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"22977:39:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":966,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":956,"src":"23071:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":967,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":944,"src":"23083:5:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23089:6:0","memberName":"length","nodeType":"MemberAccess","src":"23083:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23071:24:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":970,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23098:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"23071:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":972,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":961,"src":"23103:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23071:43:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d65726b6c6550726f6f663a20696e76616c6964206d756c746970726f6f66","id":974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"23116:33:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_1ffedb6c6cbea997e7c1340fc6ef8db6298ec2fb1f2ffb34b77ce45e725b2049","typeString":"literal_string \"MerkleProof: invalid multiproof\""},"value":"MerkleProof: invalid multiproof"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1ffedb6c6cbea997e7c1340fc6ef8db6298ec2fb1f2ffb34b77ce45e725b2049","typeString":"literal_string \"MerkleProof: invalid multiproof\""}],"id":965,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"23063:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":975,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23063:87:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":976,"nodeType":"ExpressionStatement","src":"23063:87:0"},{"assignments":[981],"declarations":[{"constant":false,"id":981,"mutability":"mutable","name":"hashes","nameLocation":"23416:6:0","nodeType":"VariableDeclaration","scope":1084,"src":"23399:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":979,"name":"bytes32","nodeType":"ElementaryTypeName","src":"23399:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":980,"nodeType":"ArrayTypeName","src":"23399:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":987,"initialValue":{"arguments":[{"id":985,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":961,"src":"23439:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":984,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"23425:13:0","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes32[] memory)"},"typeName":{"baseType":{"id":982,"name":"bytes32","nodeType":"ElementaryTypeName","src":"23429:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":983,"nodeType":"ArrayTypeName","src":"23429:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}}},"id":986,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23425:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"23399:52:0"},{"assignments":[989],"declarations":[{"constant":false,"id":989,"mutability":"mutable","name":"leafPos","nameLocation":"23470:7:0","nodeType":"VariableDeclaration","scope":1084,"src":"23462:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":988,"name":"uint256","nodeType":"ElementaryTypeName","src":"23462:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":991,"initialValue":{"hexValue":"30","id":990,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23480:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"23462:19:0"},{"assignments":[993],"declarations":[{"constant":false,"id":993,"mutability":"mutable","name":"hashPos","nameLocation":"23500:7:0","nodeType":"VariableDeclaration","scope":1084,"src":"23492:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":992,"name":"uint256","nodeType":"ElementaryTypeName","src":"23492:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":995,"initialValue":{"hexValue":"30","id":994,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23510:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"23492:19:0"},{"assignments":[997],"declarations":[{"constant":false,"id":997,"mutability":"mutable","name":"proofPos","nameLocation":"23530:8:0","nodeType":"VariableDeclaration","scope":1084,"src":"23522:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":996,"name":"uint256","nodeType":"ElementaryTypeName","src":"23522:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":999,"initialValue":{"hexValue":"30","id":998,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23541:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"23522:20:0"},{"body":{"id":1057,"nodeType":"Block","src":"23965:262:0","statements":[{"assignments":[1011],"declarations":[{"constant":false,"id":1011,"mutability":"mutable","name":"a","nameLocation":"23988:1:0","nodeType":"VariableDeclaration","scope":1057,"src":"23980:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1010,"name":"bytes32","nodeType":"ElementaryTypeName","src":"23980:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1024,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1012,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":989,"src":"23992:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1013,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":956,"src":"24002:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23992:19:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":1019,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":981,"src":"24034:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1022,"indexExpression":{"id":1021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"24041:9:0","subExpression":{"id":1020,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":993,"src":"24041:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"24034:17:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"23992:59:0","trueExpression":{"baseExpression":{"id":1015,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":950,"src":"24014:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1018,"indexExpression":{"id":1017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"24021:9:0","subExpression":{"id":1016,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":989,"src":"24021:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"24014:17:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"23980:71:0"},{"assignments":[1026],"declarations":[{"constant":false,"id":1026,"mutability":"mutable","name":"b","nameLocation":"24074:1:0","nodeType":"VariableDeclaration","scope":1057,"src":"24066:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1025,"name":"bytes32","nodeType":"ElementaryTypeName","src":"24066:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1047,"initialValue":{"condition":{"baseExpression":{"id":1027,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":947,"src":"24078:10:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":1029,"indexExpression":{"id":1028,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1001,"src":"24089:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"24078:13:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":1042,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":944,"src":"24156:5:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1045,"indexExpression":{"id":1044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"24162:10:0","subExpression":{"id":1043,"name":"proofPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":997,"src":"24162:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"24156:17:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"24078:95:0","trueExpression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1030,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":989,"src":"24094:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1031,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":956,"src":"24104:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24094:19:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":1037,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":981,"src":"24136:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1040,"indexExpression":{"id":1039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"24143:9:0","subExpression":{"id":1038,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":993,"src":"24143:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"24136:17:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"24094:59:0","trueExpression":{"baseExpression":{"id":1033,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":950,"src":"24116:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1036,"indexExpression":{"id":1035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"24123:9:0","subExpression":{"id":1034,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":989,"src":"24123:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"24116:17:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"24066:107:0"},{"expression":{"id":1055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1048,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":981,"src":"24188:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1050,"indexExpression":{"id":1049,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1001,"src":"24195:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"24188:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1052,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1011,"src":"24210:1:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1053,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1026,"src":"24213:1:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1051,"name":"_hashPair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1253,"src":"24200:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":1054,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24200:15:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"24188:27:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1056,"nodeType":"ExpressionStatement","src":"24188:27:0"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1004,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1001,"src":"23943:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1005,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":961,"src":"23947:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23943:15:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1058,"initializationExpression":{"assignments":[1001],"declarations":[{"constant":false,"id":1001,"mutability":"mutable","name":"i","nameLocation":"23936:1:0","nodeType":"VariableDeclaration","scope":1058,"src":"23928:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1000,"name":"uint256","nodeType":"ElementaryTypeName","src":"23928:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1003,"initialValue":{"hexValue":"30","id":1002,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23940:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"23928:13:0"},"loopExpression":{"expression":{"id":1008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"23960:3:0","subExpression":{"id":1007,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1001,"src":"23960:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1009,"nodeType":"ExpressionStatement","src":"23960:3:0"},"nodeType":"ForStatement","src":"23923:304:0"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1059,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":961,"src":"24243:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1060,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24257:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"24243:15:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1069,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":956,"src":"24327:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1070,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24339:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"24327:13:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1081,"nodeType":"Block","src":"24391:42:0","statements":[{"expression":{"baseExpression":{"id":1077,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":944,"src":"24413:5:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1079,"indexExpression":{"hexValue":"30","id":1078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24419:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"24413:8:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":954,"id":1080,"nodeType":"Return","src":"24406:15:0"}]},"id":1082,"nodeType":"IfStatement","src":"24323:110:0","trueBody":{"id":1076,"nodeType":"Block","src":"24342:43:0","statements":[{"expression":{"baseExpression":{"id":1072,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":950,"src":"24364:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1074,"indexExpression":{"hexValue":"30","id":1073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24371:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"24364:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":954,"id":1075,"nodeType":"Return","src":"24357:16:0"}]}},"id":1083,"nodeType":"IfStatement","src":"24239:194:0","trueBody":{"id":1068,"nodeType":"Block","src":"24260:57:0","statements":[{"expression":{"baseExpression":{"id":1062,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":981,"src":"24282:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1066,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1063,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":961,"src":"24289:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1064,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24303:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24289:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"24282:23:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":954,"id":1067,"nodeType":"Return","src":"24275:30:0"}]}}]},"documentation":{"id":941,"nodeType":"StructuredDocumentation","src":"22092:268:0","text":" @dev Returns the root of a tree reconstructed from `leaves` and the sibling nodes in `proof`,\n consuming from one or the other at each step according to the instructions given by\n `proofFlags`.\n _Available since v4.7._"},"id":1085,"implemented":true,"kind":"function","modifiers":[],"name":"processMultiProof","nameLocation":"22375:17:0","nodeType":"FunctionDefinition","parameters":{"id":951,"nodeType":"ParameterList","parameters":[{"constant":false,"id":944,"mutability":"mutable","name":"proof","nameLocation":"22420:5:0","nodeType":"VariableDeclaration","scope":1085,"src":"22403:22:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":942,"name":"bytes32","nodeType":"ElementaryTypeName","src":"22403:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":943,"nodeType":"ArrayTypeName","src":"22403:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":947,"mutability":"mutable","name":"proofFlags","nameLocation":"22450:10:0","nodeType":"VariableDeclaration","scope":1085,"src":"22436:24:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":945,"name":"bool","nodeType":"ElementaryTypeName","src":"22436:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":946,"nodeType":"ArrayTypeName","src":"22436:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":950,"mutability":"mutable","name":"leaves","nameLocation":"22488:6:0","nodeType":"VariableDeclaration","scope":1085,"src":"22471:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":948,"name":"bytes32","nodeType":"ElementaryTypeName","src":"22471:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":949,"nodeType":"ArrayTypeName","src":"22471:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"22392:109:0"},"returnParameters":{"id":954,"nodeType":"ParameterList","parameters":[{"constant":false,"id":953,"mutability":"mutable","name":"merkleRoot","nameLocation":"22533:10:0","nodeType":"VariableDeclaration","scope":1085,"src":"22525:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":952,"name":"bytes32","nodeType":"ElementaryTypeName","src":"22525:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"22524:20:0"},"scope":1265,"src":"22366:2074:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1229,"nodeType":"Block","src":"24750:1895:0","statements":[{"assignments":[1101],"declarations":[{"constant":false,"id":1101,"mutability":"mutable","name":"leavesLen","nameLocation":"25146:9:0","nodeType":"VariableDeclaration","scope":1229,"src":"25138:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1100,"name":"uint256","nodeType":"ElementaryTypeName","src":"25138:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1104,"initialValue":{"expression":{"id":1102,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1095,"src":"25158:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25165:6:0","memberName":"length","nodeType":"MemberAccess","src":"25158:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25138:33:0"},{"assignments":[1106],"declarations":[{"constant":false,"id":1106,"mutability":"mutable","name":"totalHashes","nameLocation":"25190:11:0","nodeType":"VariableDeclaration","scope":1229,"src":"25182:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1105,"name":"uint256","nodeType":"ElementaryTypeName","src":"25182:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1109,"initialValue":{"expression":{"id":1107,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1092,"src":"25204:10:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"}},"id":1108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25215:6:0","memberName":"length","nodeType":"MemberAccess","src":"25204:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25182:39:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1111,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1101,"src":"25276:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":1112,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1089,"src":"25288:5:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":1113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25294:6:0","memberName":"length","nodeType":"MemberAccess","src":"25288:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25276:24:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25303:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25276:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1117,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1106,"src":"25308:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25276:43:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d65726b6c6550726f6f663a20696e76616c6964206d756c746970726f6f66","id":1119,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"25321:33:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_1ffedb6c6cbea997e7c1340fc6ef8db6298ec2fb1f2ffb34b77ce45e725b2049","typeString":"literal_string \"MerkleProof: invalid multiproof\""},"value":"MerkleProof: invalid multiproof"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1ffedb6c6cbea997e7c1340fc6ef8db6298ec2fb1f2ffb34b77ce45e725b2049","typeString":"literal_string \"MerkleProof: invalid multiproof\""}],"id":1110,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"25268:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1120,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25268:87:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1121,"nodeType":"ExpressionStatement","src":"25268:87:0"},{"assignments":[1126],"declarations":[{"constant":false,"id":1126,"mutability":"mutable","name":"hashes","nameLocation":"25621:6:0","nodeType":"VariableDeclaration","scope":1229,"src":"25604:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1124,"name":"bytes32","nodeType":"ElementaryTypeName","src":"25604:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1125,"nodeType":"ArrayTypeName","src":"25604:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":1132,"initialValue":{"arguments":[{"id":1130,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1106,"src":"25644:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1129,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"25630:13:0","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes32[] memory)"},"typeName":{"baseType":{"id":1127,"name":"bytes32","nodeType":"ElementaryTypeName","src":"25634:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1128,"nodeType":"ArrayTypeName","src":"25634:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}}},"id":1131,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25630:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"25604:52:0"},{"assignments":[1134],"declarations":[{"constant":false,"id":1134,"mutability":"mutable","name":"leafPos","nameLocation":"25675:7:0","nodeType":"VariableDeclaration","scope":1229,"src":"25667:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1133,"name":"uint256","nodeType":"ElementaryTypeName","src":"25667:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1136,"initialValue":{"hexValue":"30","id":1135,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25685:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"25667:19:0"},{"assignments":[1138],"declarations":[{"constant":false,"id":1138,"mutability":"mutable","name":"hashPos","nameLocation":"25705:7:0","nodeType":"VariableDeclaration","scope":1229,"src":"25697:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1137,"name":"uint256","nodeType":"ElementaryTypeName","src":"25697:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1140,"initialValue":{"hexValue":"30","id":1139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25715:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"25697:19:0"},{"assignments":[1142],"declarations":[{"constant":false,"id":1142,"mutability":"mutable","name":"proofPos","nameLocation":"25735:8:0","nodeType":"VariableDeclaration","scope":1229,"src":"25727:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1141,"name":"uint256","nodeType":"ElementaryTypeName","src":"25727:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1144,"initialValue":{"hexValue":"30","id":1143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25746:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"25727:20:0"},{"body":{"id":1202,"nodeType":"Block","src":"26170:262:0","statements":[{"assignments":[1156],"declarations":[{"constant":false,"id":1156,"mutability":"mutable","name":"a","nameLocation":"26193:1:0","nodeType":"VariableDeclaration","scope":1202,"src":"26185:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1155,"name":"bytes32","nodeType":"ElementaryTypeName","src":"26185:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1169,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1157,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1134,"src":"26197:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1158,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1101,"src":"26207:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26197:19:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":1164,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1126,"src":"26239:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1167,"indexExpression":{"id":1166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"26246:9:0","subExpression":{"id":1165,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1138,"src":"26246:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"26239:17:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"26197:59:0","trueExpression":{"baseExpression":{"id":1160,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1095,"src":"26219:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1163,"indexExpression":{"id":1162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"26226:9:0","subExpression":{"id":1161,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1134,"src":"26226:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"26219:17:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"26185:71:0"},{"assignments":[1171],"declarations":[{"constant":false,"id":1171,"mutability":"mutable","name":"b","nameLocation":"26279:1:0","nodeType":"VariableDeclaration","scope":1202,"src":"26271:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1170,"name":"bytes32","nodeType":"ElementaryTypeName","src":"26271:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1192,"initialValue":{"condition":{"baseExpression":{"id":1172,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1092,"src":"26283:10:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"}},"id":1174,"indexExpression":{"id":1173,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1146,"src":"26294:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"26283:13:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":1187,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1089,"src":"26361:5:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":1190,"indexExpression":{"id":1189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"26367:10:0","subExpression":{"id":1188,"name":"proofPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1142,"src":"26367:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"26361:17:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"26283:95:0","trueExpression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1175,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1134,"src":"26299:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1176,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1101,"src":"26309:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26299:19:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":1182,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1126,"src":"26341:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1185,"indexExpression":{"id":1184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"26348:9:0","subExpression":{"id":1183,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1138,"src":"26348:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"26341:17:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"26299:59:0","trueExpression":{"baseExpression":{"id":1178,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1095,"src":"26321:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1181,"indexExpression":{"id":1180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"26328:9:0","subExpression":{"id":1179,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1134,"src":"26328:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"26321:17:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"26271:107:0"},{"expression":{"id":1200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1193,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1126,"src":"26393:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1195,"indexExpression":{"id":1194,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1146,"src":"26400:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"26393:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1197,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1156,"src":"26415:1:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1198,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1171,"src":"26418:1:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1196,"name":"_hashPair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1253,"src":"26405:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":1199,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26405:15:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"26393:27:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1201,"nodeType":"ExpressionStatement","src":"26393:27:0"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1149,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1146,"src":"26148:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1150,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1106,"src":"26152:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26148:15:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1203,"initializationExpression":{"assignments":[1146],"declarations":[{"constant":false,"id":1146,"mutability":"mutable","name":"i","nameLocation":"26141:1:0","nodeType":"VariableDeclaration","scope":1203,"src":"26133:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1145,"name":"uint256","nodeType":"ElementaryTypeName","src":"26133:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1148,"initialValue":{"hexValue":"30","id":1147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26145:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"26133:13:0"},"loopExpression":{"expression":{"id":1153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"26165:3:0","subExpression":{"id":1152,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1146,"src":"26165:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1154,"nodeType":"ExpressionStatement","src":"26165:3:0"},"nodeType":"ForStatement","src":"26128:304:0"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1204,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1106,"src":"26448:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1205,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26462:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"26448:15:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1214,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1101,"src":"26532:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1215,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26544:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"26532:13:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1226,"nodeType":"Block","src":"26596:42:0","statements":[{"expression":{"baseExpression":{"id":1222,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1089,"src":"26618:5:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":1224,"indexExpression":{"hexValue":"30","id":1223,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26624:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"26618:8:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1099,"id":1225,"nodeType":"Return","src":"26611:15:0"}]},"id":1227,"nodeType":"IfStatement","src":"26528:110:0","trueBody":{"id":1221,"nodeType":"Block","src":"26547:43:0","statements":[{"expression":{"baseExpression":{"id":1217,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1095,"src":"26569:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1219,"indexExpression":{"hexValue":"30","id":1218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26576:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"26569:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1099,"id":1220,"nodeType":"Return","src":"26562:16:0"}]}},"id":1228,"nodeType":"IfStatement","src":"26444:194:0","trueBody":{"id":1213,"nodeType":"Block","src":"26465:57:0","statements":[{"expression":{"baseExpression":{"id":1207,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1126,"src":"26487:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1211,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1208,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1106,"src":"26494:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1209,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26508:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"26494:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"26487:23:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1099,"id":1212,"nodeType":"Return","src":"26480:30:0"}]}}]},"documentation":{"id":1086,"nodeType":"StructuredDocumentation","src":"24448:105:0","text":" @dev Calldata version of {processMultiProof}\n _Available since v4.7._"},"id":1230,"implemented":true,"kind":"function","modifiers":[],"name":"processMultiProofCalldata","nameLocation":"24568:25:0","nodeType":"FunctionDefinition","parameters":{"id":1096,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1089,"mutability":"mutable","name":"proof","nameLocation":"24623:5:0","nodeType":"VariableDeclaration","scope":1230,"src":"24604:24:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1087,"name":"bytes32","nodeType":"ElementaryTypeName","src":"24604:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1088,"nodeType":"ArrayTypeName","src":"24604:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":1092,"mutability":"mutable","name":"proofFlags","nameLocation":"24655:10:0","nodeType":"VariableDeclaration","scope":1230,"src":"24639:26:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":1090,"name":"bool","nodeType":"ElementaryTypeName","src":"24639:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1091,"nodeType":"ArrayTypeName","src":"24639:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":1095,"mutability":"mutable","name":"leaves","nameLocation":"24693:6:0","nodeType":"VariableDeclaration","scope":1230,"src":"24676:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1093,"name":"bytes32","nodeType":"ElementaryTypeName","src":"24676:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1094,"nodeType":"ArrayTypeName","src":"24676:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"24593:113:0"},"returnParameters":{"id":1099,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1098,"mutability":"mutable","name":"merkleRoot","nameLocation":"24738:10:0","nodeType":"VariableDeclaration","scope":1230,"src":"24730:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1097,"name":"bytes32","nodeType":"ElementaryTypeName","src":"24730:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"24729:20:0"},"scope":1265,"src":"24559:2086:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1252,"nodeType":"Block","src":"26725:77:0","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1239,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1232,"src":"26743:1:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1240,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1234,"src":"26747:1:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"26743:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":1247,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1234,"src":"26789:1:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1248,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1232,"src":"26792:1:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1246,"name":"_efficientHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1264,"src":"26774:14:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":1249,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26774:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"26743:51:0","trueExpression":{"arguments":[{"id":1243,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1232,"src":"26766:1:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1244,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1234,"src":"26769:1:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1242,"name":"_efficientHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1264,"src":"26751:14:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":1245,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26751:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1238,"id":1251,"nodeType":"Return","src":"26736:58:0"}]},"id":1253,"implemented":true,"kind":"function","modifiers":[],"name":"_hashPair","nameLocation":"26662:9:0","nodeType":"FunctionDefinition","parameters":{"id":1235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1232,"mutability":"mutable","name":"a","nameLocation":"26680:1:0","nodeType":"VariableDeclaration","scope":1253,"src":"26672:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1231,"name":"bytes32","nodeType":"ElementaryTypeName","src":"26672:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1234,"mutability":"mutable","name":"b","nameLocation":"26691:1:0","nodeType":"VariableDeclaration","scope":1253,"src":"26683:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1233,"name":"bytes32","nodeType":"ElementaryTypeName","src":"26683:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"26671:22:0"},"returnParameters":{"id":1238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1237,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1253,"src":"26716:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1236,"name":"bytes32","nodeType":"ElementaryTypeName","src":"26716:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"26715:9:0"},"scope":1265,"src":"26653:149:0","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1263,"nodeType":"Block","src":"26893:185:0","statements":[{"AST":{"nodeType":"YulBlock","src":"26957:114:0","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"26979:4:0","type":"","value":"0x00"},{"name":"a","nodeType":"YulIdentifier","src":"26985:1:0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26972:6:0"},"nodeType":"YulFunctionCall","src":"26972:15:0"},"nodeType":"YulExpressionStatement","src":"26972:15:0"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27008:4:0","type":"","value":"0x20"},{"name":"b","nodeType":"YulIdentifier","src":"27014:1:0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27001:6:0"},"nodeType":"YulFunctionCall","src":"27001:15:0"},"nodeType":"YulExpressionStatement","src":"27001:15:0"},{"nodeType":"YulAssignment","src":"27030:30:0","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27049:4:0","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"27055:4:0","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"27039:9:0"},"nodeType":"YulFunctionCall","src":"27039:21:0"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"27030:5:0"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":1255,"isOffset":false,"isSlot":false,"src":"26985:1:0","valueSize":1},{"declaration":1257,"isOffset":false,"isSlot":false,"src":"27014:1:0","valueSize":1},{"declaration":1260,"isOffset":false,"isSlot":false,"src":"27030:5:0","valueSize":1}],"id":1262,"nodeType":"InlineAssembly","src":"26948:123:0"}]},"id":1264,"implemented":true,"kind":"function","modifiers":[],"name":"_efficientHash","nameLocation":"26819:14:0","nodeType":"FunctionDefinition","parameters":{"id":1258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1255,"mutability":"mutable","name":"a","nameLocation":"26842:1:0","nodeType":"VariableDeclaration","scope":1264,"src":"26834:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1254,"name":"bytes32","nodeType":"ElementaryTypeName","src":"26834:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1257,"mutability":"mutable","name":"b","nameLocation":"26853:1:0","nodeType":"VariableDeclaration","scope":1264,"src":"26845:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1256,"name":"bytes32","nodeType":"ElementaryTypeName","src":"26845:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"26833:22:0"},"returnParameters":{"id":1261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1260,"mutability":"mutable","name":"value","nameLocation":"26886:5:0","nodeType":"VariableDeclaration","scope":1264,"src":"26878:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1259,"name":"bytes32","nodeType":"ElementaryTypeName","src":"26878:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"26877:15:0"},"scope":1265,"src":"26810:268:0","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":1689,"src":"19218:7863:0","usedErrors":[]},{"id":1266,"literals":["solidity","^","0.8",".17"],"nodeType":"PragmaDirective","src":"27095:24:0"},{"abstract":false,"baseContracts":[{"baseName":{"id":1267,"name":"Ownable","nameLocations":["27142:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":124,"src":"27142:7:0"},"id":1268,"nodeType":"InheritanceSpecifier","src":"27142:7:0"},{"baseName":{"id":1269,"name":"ERC20","nameLocations":["27151:5:0"],"nodeType":"IdentifierPath","referencedDeclaration":766,"src":"27151:5:0"},"id":1270,"nodeType":"InheritanceSpecifier","src":"27151:5:0"}],"canonicalName":"GOAT","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":1688,"linearizedBaseContracts":[1688,766,224,201,124,21],"name":"GOAT","nameLocation":"27134:4:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"93a60467","id":1278,"mutability":"mutable","name":"amountAirdrop","nameLocation":"27179:13:0","nodeType":"VariableDeclaration","scope":1688,"src":"27164:54:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1271,"name":"uint256","nodeType":"ElementaryTypeName","src":"27164:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"38303030303030303030","id":1272,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27193:10:0","typeDescriptions":{"typeIdentifier":"t_rational_8000000000_by_1","typeString":"int_const 8000000000"},"value":"8000000000"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1273,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27204:2:0","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1274,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":295,"src":"27208:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint8_$","typeString":"function () view returns (uint8)"}},"id":1275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27208:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"27204:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27193:25:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"95c21971","id":1286,"mutability":"mutable","name":"amountPresale","nameLocation":"27240:13:0","nodeType":"VariableDeclaration","scope":1688,"src":"27225:55:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1279,"name":"uint256","nodeType":"ElementaryTypeName","src":"27225:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3230303030303030303030","id":1280,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27254:11:0","typeDescriptions":{"typeIdentifier":"t_rational_20000000000_by_1","typeString":"int_const 20000000000"},"value":"20000000000"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1281,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27266:2:0","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1282,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":295,"src":"27270:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint8_$","typeString":"function () view returns (uint8)"}},"id":1283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27270:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"27266:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27254:26:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"872ddfa1","id":1294,"mutability":"mutable","name":"amountSale","nameLocation":"27302:10:0","nodeType":"VariableDeclaration","scope":1688,"src":"27287:52:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1287,"name":"uint256","nodeType":"ElementaryTypeName","src":"27287:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130303030303030303030","id":1288,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27313:11:0","typeDescriptions":{"typeIdentifier":"t_rational_10000000000_by_1","typeString":"int_const 10000000000"},"value":"10000000000"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27325:2:0","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1290,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":295,"src":"27329:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint8_$","typeString":"function () view returns (uint8)"}},"id":1291,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27329:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"27325:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27313:26:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"9147dd1b","id":1297,"mutability":"mutable","name":"pricePresale","nameLocation":"27361:12:0","nodeType":"VariableDeclaration","scope":1688,"src":"27346:35:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1295,"name":"uint256","nodeType":"ElementaryTypeName","src":"27346:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32353030303030","id":1296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27374:7:0","typeDescriptions":{"typeIdentifier":"t_rational_2500000_by_1","typeString":"int_const 2500000"},"value":"2500000"},"visibility":"public"},{"constant":false,"functionSelector":"81a7927e","id":1300,"mutability":"mutable","name":"priceSale","nameLocation":"27421:9:0","nodeType":"VariableDeclaration","scope":1688,"src":"27406:32:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1298,"name":"uint256","nodeType":"ElementaryTypeName","src":"27406:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"37353030303030","id":1299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27431:7:0","typeDescriptions":{"typeIdentifier":"t_rational_7500000_by_1","typeString":"int_const 7500000"},"value":"7500000"},"visibility":"public"},{"constant":false,"functionSelector":"2eb4a7ab","id":1302,"mutability":"mutable","name":"merkleRoot","nameLocation":"27481:10:0","nodeType":"VariableDeclaration","scope":1688,"src":"27466:25:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1301,"name":"bytes32","nodeType":"ElementaryTypeName","src":"27466:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":false,"functionSelector":"9451e9ce","id":1305,"mutability":"mutable","name":"percentRefRewards","nameLocation":"27512:17:0","nodeType":"VariableDeclaration","scope":1688,"src":"27498:33:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1303,"name":"uint32","nodeType":"ElementaryTypeName","src":"27498:6:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"value":{"hexValue":"35","id":1304,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27530:1:0","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"visibility":"public"},{"constant":false,"functionSelector":"9843eae3","id":1308,"mutability":"mutable","name":"airdropActive","nameLocation":"27550:13:0","nodeType":"VariableDeclaration","scope":1688,"src":"27538:30:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1306,"name":"bool","nodeType":"ElementaryTypeName","src":"27538:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":{"hexValue":"74727565","id":1307,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"27564:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"visibility":"public"},{"constant":false,"id":1316,"mutability":"mutable","name":"_totalSupply","nameLocation":"27583:12:0","nodeType":"VariableDeclaration","scope":1688,"src":"27575:51:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1309,"name":"uint256","nodeType":"ElementaryTypeName","src":"27575:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"343030303030303030303030303030","id":1310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27596:15:0","typeDescriptions":{"typeIdentifier":"t_rational_400000000000000_by_1","typeString":"int_const 400000000000000"},"value":"400000000000000"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1311,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27612:2:0","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1312,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":295,"src":"27616:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint8_$","typeString":"function () view returns (uint8)"}},"id":1313,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27616:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"27612:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27596:30:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"functionSelector":"c884ef83","id":1320,"mutability":"mutable","name":"claimed","nameLocation":"27668:7:0","nodeType":"VariableDeclaration","scope":1688,"src":"27633:42:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":1319,"keyType":{"id":1317,"name":"address","nodeType":"ElementaryTypeName","src":"27641:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"27633:27:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":1318,"name":"uint256","nodeType":"ElementaryTypeName","src":"27652:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"body":{"id":1347,"nodeType":"Block","src":"27720:221:0","statements":[{"expression":{"arguments":[{"hexValue":"307845613232364138444265393532344536393231623936393839313141326461454162394438356441","id":1328,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27740:42:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xEa226A8DBe9524E6921b9698911A2daEAb9D85dA"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"313230303030303030303030303030","id":1329,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27784:15:0","typeDescriptions":{"typeIdentifier":"t_rational_120000000000000_by_1","typeString":"int_const 120000000000000"},"value":"120000000000000"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1330,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27800:2:0","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1331,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":295,"src":"27804:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint8_$","typeString":"function () view returns (uint8)"}},"id":1332,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27804:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"27800:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27784:30:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1327,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":626,"src":"27734:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1335,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27734:81:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1336,"nodeType":"ExpressionStatement","src":"27734:81:0"},{"expression":{"arguments":[{"hexValue":"307845613232364138444265393532344536393231623936393839313141326461454162394438356441","id":1338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27847:42:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xEa226A8DBe9524E6921b9698911A2daEAb9D85dA"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3430303030303030303030303030","id":1339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27892:14:0","typeDescriptions":{"typeIdentifier":"t_rational_40000000000000_by_1","typeString":"int_const 40000000000000"},"value":"40000000000000"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1340,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27907:2:0","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1341,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":295,"src":"27911:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint8_$","typeString":"function () view returns (uint8)"}},"id":1342,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27911:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"27907:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27892:29:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1337,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":626,"src":"27841:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1345,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27841:81:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1346,"nodeType":"ExpressionStatement","src":"27841:81:0"}]},"id":1348,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"474f4154","id":1323,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"27704:6:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_37c469dadd9df9fb454182ffced72eec76a99c56ccde61f27666b040e87df709","typeString":"literal_string \"GOAT\""},"value":"GOAT"},{"hexValue":"474f4154","id":1324,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"27712:6:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_37c469dadd9df9fb454182ffced72eec76a99c56ccde61f27666b040e87df709","typeString":"literal_string \"GOAT\""},"value":"GOAT"}],"id":1325,"kind":"baseConstructorSpecifier","modifierName":{"id":1322,"name":"ERC20","nameLocations":["27698:5:0"],"nodeType":"IdentifierPath","referencedDeclaration":766,"src":"27698:5:0"},"nodeType":"ModifierInvocation","src":"27698:21:0"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1321,"nodeType":"ParameterList","parameters":[],"src":"27695:2:0"},"returnParameters":{"id":1326,"nodeType":"ParameterList","parameters":[],"src":"27720:0:0"},"scope":1688,"src":"27684:257:0","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1359,"nodeType":"Block","src":"28015:46:0","statements":[{"expression":{"id":1357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1355,"name":"merkleRoot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1302,"src":"28026:10:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1356,"name":"_newMerkleRoot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1350,"src":"28039:14:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"28026:27:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1358,"nodeType":"ExpressionStatement","src":"28026:27:0"}]},"functionSelector":"7cb64759","id":1360,"implemented":true,"kind":"function","modifiers":[{"id":1353,"kind":"modifierInvocation","modifierName":{"id":1352,"name":"onlyOwner","nameLocations":["28005:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":66,"src":"28005:9:0"},"nodeType":"ModifierInvocation","src":"28005:9:0"}],"name":"setMerkleRoot","nameLocation":"27958:13:0","nodeType":"FunctionDefinition","parameters":{"id":1351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1350,"mutability":"mutable","name":"_newMerkleRoot","nameLocation":"27980:14:0","nodeType":"VariableDeclaration","scope":1360,"src":"27972:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1349,"name":"bytes32","nodeType":"ElementaryTypeName","src":"27972:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"27971:24:0"},"returnParameters":{"id":1354,"nodeType":"ParameterList","parameters":[],"src":"28015:0:0"},"scope":1688,"src":"27949:112:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1371,"nodeType":"Block","src":"28130:45:0","statements":[{"expression":{"id":1369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1367,"name":"airdropActive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1308,"src":"28141:13:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1368,"name":"_setActive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1362,"src":"28157:10:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"28141:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1370,"nodeType":"ExpressionStatement","src":"28141:26:0"}]},"functionSelector":"841718a6","id":1372,"implemented":true,"kind":"function","modifiers":[{"id":1365,"kind":"modifierInvocation","modifierName":{"id":1364,"name":"onlyOwner","nameLocations":["28120:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":66,"src":"28120:9:0"},"nodeType":"ModifierInvocation","src":"28120:9:0"}],"name":"setSaleActive","nameLocation":"28080:13:0","nodeType":"FunctionDefinition","parameters":{"id":1363,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1362,"mutability":"mutable","name":"_setActive","nameLocation":"28099:10:0","nodeType":"VariableDeclaration","scope":1372,"src":"28094:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1361,"name":"bool","nodeType":"ElementaryTypeName","src":"28094:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"28093:17:0"},"returnParameters":{"id":1366,"nodeType":"ParameterList","parameters":[],"src":"28130:0:0"},"scope":1688,"src":"28071:104:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1395,"nodeType":"Block","src":"28299:125:0","statements":[{"expression":{"id":1385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1383,"name":"amountAirdrop","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1278,"src":"28310:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1384,"name":"_amountAirdrop","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1374,"src":"28326:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28310:30:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1386,"nodeType":"ExpressionStatement","src":"28310:30:0"},{"expression":{"id":1389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1387,"name":"amountPresale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1286,"src":"28351:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1388,"name":"_amountPresale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1376,"src":"28367:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28351:30:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1390,"nodeType":"ExpressionStatement","src":"28351:30:0"},{"expression":{"id":1393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1391,"name":"amountSale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1294,"src":"28392:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1392,"name":"_amountSale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1378,"src":"28405:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28392:24:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1394,"nodeType":"ExpressionStatement","src":"28392:24:0"}]},"functionSelector":"c5274fd1","id":1396,"implemented":true,"kind":"function","modifiers":[{"id":1381,"kind":"modifierInvocation","modifierName":{"id":1380,"name":"onlyOwner","nameLocations":["28289:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":66,"src":"28289:9:0"},"nodeType":"ModifierInvocation","src":"28289:9:0"}],"name":"setAirdropSettings","nameLocation":"28192:18:0","nodeType":"FunctionDefinition","parameters":{"id":1379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1374,"mutability":"mutable","name":"_amountAirdrop","nameLocation":"28219:14:0","nodeType":"VariableDeclaration","scope":1396,"src":"28211:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1373,"name":"uint256","nodeType":"ElementaryTypeName","src":"28211:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1376,"mutability":"mutable","name":"_amountPresale","nameLocation":"28243:14:0","nodeType":"VariableDeclaration","scope":1396,"src":"28235:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1375,"name":"uint256","nodeType":"ElementaryTypeName","src":"28235:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1378,"mutability":"mutable","name":"_amountSale","nameLocation":"28267:11:0","nodeType":"VariableDeclaration","scope":1396,"src":"28259:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1377,"name":"uint256","nodeType":"ElementaryTypeName","src":"28259:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"28210:69:0"},"returnParameters":{"id":1382,"nodeType":"ParameterList","parameters":[],"src":"28299:0:0"},"scope":1688,"src":"28183:241:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1419,"nodeType":"Block","src":"28547:129:0","statements":[{"expression":{"id":1409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1407,"name":"percentRefRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1305,"src":"28558:17:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1408,"name":"_percentRefRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1402,"src":"28578:18:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"28558:38:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":1410,"nodeType":"ExpressionStatement","src":"28558:38:0"},{"expression":{"id":1413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1411,"name":"pricePresale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1297,"src":"28607:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1412,"name":"_pricePresale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1398,"src":"28622:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28607:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1414,"nodeType":"ExpressionStatement","src":"28607:28:0"},{"expression":{"id":1417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1415,"name":"priceSale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1300,"src":"28646:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1416,"name":"_priceSale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1400,"src":"28658:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28646:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1418,"nodeType":"ExpressionStatement","src":"28646:22:0"}]},"functionSelector":"2f1dbcb2","id":1420,"implemented":true,"kind":"function","modifiers":[{"id":1405,"kind":"modifierInvocation","modifierName":{"id":1404,"name":"onlyOwner","nameLocations":["28537:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":66,"src":"28537:9:0"},"nodeType":"ModifierInvocation","src":"28537:9:0"}],"name":"setPriceSettings","nameLocation":"28441:16:0","nodeType":"FunctionDefinition","parameters":{"id":1403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1398,"mutability":"mutable","name":"_pricePresale","nameLocation":"28466:13:0","nodeType":"VariableDeclaration","scope":1420,"src":"28458:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1397,"name":"uint256","nodeType":"ElementaryTypeName","src":"28458:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1400,"mutability":"mutable","name":"_priceSale","nameLocation":"28489:10:0","nodeType":"VariableDeclaration","scope":1420,"src":"28481:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1399,"name":"uint256","nodeType":"ElementaryTypeName","src":"28481:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1402,"mutability":"mutable","name":"_percentRefRewards","nameLocation":"28508:18:0","nodeType":"VariableDeclaration","scope":1420,"src":"28501:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1401,"name":"uint32","nodeType":"ElementaryTypeName","src":"28501:6:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"28457:70:0"},"returnParameters":{"id":1406,"nodeType":"ParameterList","parameters":[],"src":"28547:0:0"},"scope":1688,"src":"28432:244:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1601,"nodeType":"Block","src":"28811:1199:0","statements":[{"assignments":[1431],"declarations":[{"constant":false,"id":1431,"mutability":"mutable","name":"amount","nameLocation":"28833:6:0","nodeType":"VariableDeclaration","scope":1601,"src":"28825:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1430,"name":"uint256","nodeType":"ElementaryTypeName","src":"28825:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1438,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1432,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1424,"src":"28841:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28849:2:0","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1434,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":295,"src":"28853:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint8_$","typeString":"function () view returns (uint8)"}},"id":1435,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28853:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"28849:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28841:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"28825:38:0"},{"expression":{"arguments":[{"id":1440,"name":"airdropActive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1308,"src":"28882:13:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7420726561647920796574","id":1441,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"28897:15:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_3dbca0b3e890d235550bc8b68e28d376f882a1c7832bb77639bcca9e757d9875","typeString":"literal_string \"Not ready yet\""},"value":"Not ready yet"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3dbca0b3e890d235550bc8b68e28d376f882a1c7832bb77639bcca9e757d9875","typeString":"literal_string \"Not ready yet\""}],"id":1439,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"28874:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28874:39:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1443,"nodeType":"ExpressionStatement","src":"28874:39:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1445,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1431,"src":"28932:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1446,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"28939:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":1447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28939:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28932:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1449,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1316,"src":"28953:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28932:33:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"534f4c44204f555421","id":1451,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"28966:11:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_92c82212a327a71bf02d414be41d57d5573e6a8413493d350cdb10d7b19410c0","typeString":"literal_string \"SOLD OUT!\""},"value":"SOLD OUT!"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_92c82212a327a71bf02d414be41d57d5573e6a8413493d350cdb10d7b19410c0","typeString":"literal_string \"SOLD OUT!\""}],"id":1444,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"28924:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1452,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28924:54:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1453,"nodeType":"ExpressionStatement","src":"28924:54:0"},{"assignments":[1455],"declarations":[{"constant":false,"id":1455,"mutability":"mutable","name":"leaf","nameLocation":"28997:4:0","nodeType":"VariableDeclaration","scope":1601,"src":"28989:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1454,"name":"bytes32","nodeType":"ElementaryTypeName","src":"28989:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1463,"initialValue":{"arguments":[{"arguments":[{"expression":{"id":1459,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"29031:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"29035:6:0","memberName":"sender","nodeType":"MemberAccess","src":"29031:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1457,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"29014:3:0","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1458,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"29018:12:0","memberName":"encodePacked","nodeType":"MemberAccess","src":"29014:16:0","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1461,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29014:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1456,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"29004:9:0","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1462,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29004:39:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"28989:54:0"},{"expression":{"arguments":[{"arguments":[{"id":1467,"name":"_merkleProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1427,"src":"29081:12:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},{"id":1468,"name":"merkleRoot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1302,"src":"29095:10:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1469,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1455,"src":"29107:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1465,"name":"MerkleProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1265,"src":"29062:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MerkleProof_$1265_$","typeString":"type(library MerkleProof)"}},"id":1466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"29074:6:0","memberName":"verify","nodeType":"MemberAccess","referencedDeclaration":787,"src":"29062:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32[] memory,bytes32,bytes32) pure returns (bool)"}},"id":1470,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29062:50:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642070726f6f6621","id":1471,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"29113:16:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_1a818cf75307faee9a3ef602a87667f7282b727b93fbb83d884d8bab3a41dc16","typeString":"literal_string \"Invalid proof!\""},"value":"Invalid proof!"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1a818cf75307faee9a3ef602a87667f7282b727b93fbb83d884d8bab3a41dc16","typeString":"literal_string \"Invalid proof!\""}],"id":1464,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"29054:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1472,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29054:76:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1473,"nodeType":"ExpressionStatement","src":"29054:76:0"},{"assignments":[1475],"declarations":[{"constant":false,"id":1475,"mutability":"mutable","name":"req_val","nameLocation":"29158:7:0","nodeType":"VariableDeclaration","scope":1601,"src":"29150:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1474,"name":"uint256","nodeType":"ElementaryTypeName","src":"29150:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1477,"initialValue":{"hexValue":"30","id":1476,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29166:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"29150:17:0"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1478,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1431,"src":"29182:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"baseExpression":{"id":1479,"name":"claimed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1320,"src":"29189:7:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1482,"indexExpression":{"expression":{"id":1480,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"29197:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"29201:6:0","memberName":"sender","nodeType":"MemberAccess","src":"29197:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"29189:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"29182:26:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":1484,"name":"amountAirdrop","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1278,"src":"29210:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"29182:41:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1491,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1431,"src":"29276:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"baseExpression":{"id":1492,"name":"claimed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1320,"src":"29283:7:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1495,"indexExpression":{"expression":{"id":1493,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"29291:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"29295:6:0","memberName":"sender","nodeType":"MemberAccess","src":"29291:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"29283:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"29276:26:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1497,"name":"amountAirdrop","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1278,"src":"29304:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1498,"name":"amountPresale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1286,"src":"29318:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"29304:27:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1500,"name":"amountSale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1294,"src":"29332:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"29304:38:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"29276:66:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1544,"nodeType":"Block","src":"29583:38:0","statements":[{"expression":{"arguments":[{"hexValue":"4572726f72","id":1541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"29601:7:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_e342daa49723ff3485f4ff5f755a17b8bc9c3c33bbd312ceee37c94eebfe45c1","typeString":"literal_string \"Error\""},"value":"Error"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_e342daa49723ff3485f4ff5f755a17b8bc9c3c33bbd312ceee37c94eebfe45c1","typeString":"literal_string \"Error\""}],"id":1540,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"29594:6:0","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1542,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29594:15:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1543,"nodeType":"ExpressionStatement","src":"29594:15:0"}]},"id":1545,"nodeType":"IfStatement","src":"29272:349:0","trueBody":{"id":1539,"nodeType":"Block","src":"29344:233:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":1503,"name":"claimed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1320,"src":"29363:7:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1506,"indexExpression":{"expression":{"id":1504,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"29371:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"29375:6:0","memberName":"sender","nodeType":"MemberAccess","src":"29371:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"29363:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"31","id":1507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29383:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"29363:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1537,"nodeType":"Block","src":"29487:79:0","statements":[{"expression":{"id":1535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1525,"name":"req_val","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1475,"src":"29506:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1526,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1431,"src":"29514:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1527,"name":"pricePresale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1297,"src":"29521:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"29514:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29535:2:0","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1530,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":295,"src":"29539:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint8_$","typeString":"function () view returns (uint8)"}},"id":1531,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29539:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"29535:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1533,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"29534:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"29514:36:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"29506:44:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1536,"nodeType":"ExpressionStatement","src":"29506:44:0"}]},"id":1538,"nodeType":"IfStatement","src":"29359:207:0","trueBody":{"id":1524,"nodeType":"Block","src":"29386:95:0","statements":[{"expression":{"id":1522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1509,"name":"req_val","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1475,"src":"29405:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1510,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1431,"src":"29414:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1511,"name":"amountAirdrop","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1278,"src":"29421:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"29414:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1513,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"29413:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1514,"name":"pricePresale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1297,"src":"29436:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"29413:35:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1516,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29450:2:0","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1517,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":295,"src":"29454:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint8_$","typeString":"function () view returns (uint8)"}},"id":1518,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29454:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"29450:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1520,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"29449:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"29413:52:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"29405:60:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1523,"nodeType":"ExpressionStatement","src":"29405:60:0"}]}}]}},"id":1546,"nodeType":"IfStatement","src":"29178:443:0","trueBody":{"id":1490,"nodeType":"Block","src":"29225:41:0","statements":[{"expression":{"id":1488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1486,"name":"req_val","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1475,"src":"29240:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":1487,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29248:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"29240:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1489,"nodeType":"ExpressionStatement","src":"29240:9:0"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1548,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"29639:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"29643:5:0","memberName":"value","nodeType":"MemberAccess","src":"29639:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1550,"name":"req_val","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1475,"src":"29652:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"29639:20:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e742066756e647321","id":1552,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"29661:21:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_f996caab982251e084504d5fd2ef64388ceaab43bf427eb5c8324e92803cd686","typeString":"literal_string \"Insufficient funds!\""},"value":"Insufficient funds!"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f996caab982251e084504d5fd2ef64388ceaab43bf427eb5c8324e92803cd686","typeString":"literal_string \"Insufficient funds!\""}],"id":1547,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"29631:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1553,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29631:52:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1554,"nodeType":"ExpressionStatement","src":"29631:52:0"},{"assignments":[1556,null],"declarations":[{"constant":false,"id":1556,"mutability":"mutable","name":"success","nameLocation":"29700:7:0","nodeType":"VariableDeclaration","scope":1601,"src":"29695:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1555,"name":"bool","nodeType":"ElementaryTypeName","src":"29695:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":1568,"initialValue":{"arguments":[{"hexValue":"","id":1566,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"29751:2:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1559,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":52,"src":"29720:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1560,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29720:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1558,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29712:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":1557,"name":"address","nodeType":"ElementaryTypeName","src":"29712:8:0","stateMutability":"payable","typeDescriptions":{}}},"id":1561,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29712:16:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":1562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"29729:4:0","memberName":"call","nodeType":"MemberAccess","src":"29712:21:0","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"expression":{"id":1563,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"29740:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"29744:5:0","memberName":"value","nodeType":"MemberAccess","src":"29740:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"29712:38:0","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1567,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29712:42:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"29694:60:0"},{"expression":{"id":1579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1569,"name":"claimed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1320,"src":"29765:7:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1572,"indexExpression":{"expression":{"id":1570,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"29773:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"29777:6:0","memberName":"sender","nodeType":"MemberAccess","src":"29773:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"29765:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":1573,"name":"claimed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1320,"src":"29785:7:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1576,"indexExpression":{"expression":{"id":1574,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"29793:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"29797:6:0","memberName":"sender","nodeType":"MemberAccess","src":"29793:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"29785:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1577,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1431,"src":"29805:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"29785:26:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"29765:46:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1580,"nodeType":"ExpressionStatement","src":"29765:46:0"},{"expression":{"arguments":[{"expression":{"id":1582,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"29828:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"29832:6:0","memberName":"sender","nodeType":"MemberAccess","src":"29828:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1584,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1431,"src":"29840:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1581,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":626,"src":"29822:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1585,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29822:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1586,"nodeType":"ExpressionStatement","src":"29822:25:0"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1587,"name":"ref_address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1422,"src":"29872:11:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"307830303030303030303030303030303030303030303030303030303030303030303030303030303030","id":1588,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29886:42:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x0000000000000000000000000000000000000000"},"src":"29872:56:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1600,"nodeType":"IfStatement","src":"29868:135:0","trueBody":{"id":1599,"nodeType":"Block","src":"29930:73:0","statements":[{"expression":{"arguments":[{"id":1591,"name":"ref_address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1422,"src":"29947:11:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1592,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1431,"src":"29960:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1593,"name":"percentRefRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1305,"src":"29967:17:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"29960:24:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"313030","id":1595,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29985:3:0","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"29960:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1590,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":626,"src":"29941:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1597,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29941:48:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1598,"nodeType":"ExpressionStatement","src":"29941:48:0"}]}}]},"functionSelector":"641ce140","id":1602,"implemented":true,"kind":"function","modifiers":[],"name":"mint","nameLocation":"28697:4:0","nodeType":"FunctionDefinition","parameters":{"id":1428,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1422,"mutability":"mutable","name":"ref_address","nameLocation":"28710:11:0","nodeType":"VariableDeclaration","scope":1602,"src":"28702:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1421,"name":"address","nodeType":"ElementaryTypeName","src":"28702:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1424,"mutability":"mutable","name":"_amount","nameLocation":"28731:7:0","nodeType":"VariableDeclaration","scope":1602,"src":"28723:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1423,"name":"uint256","nodeType":"ElementaryTypeName","src":"28723:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1427,"mutability":"mutable","name":"_merkleProof","nameLocation":"28759:12:0","nodeType":"VariableDeclaration","scope":1602,"src":"28740:31:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1425,"name":"bytes32","nodeType":"ElementaryTypeName","src":"28740:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1426,"nodeType":"ArrayTypeName","src":"28740:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"28701:71:0"},"returnParameters":{"id":1429,"nodeType":"ParameterList","parameters":[],"src":"28811:0:0"},"scope":1688,"src":"28688:1322:0","stateMutability":"payable","virtual":false,"visibility":"public"},{"body":{"id":1649,"nodeType":"Block","src":"30111:260:0","statements":[{"assignments":[1613],"declarations":[{"constant":false,"id":1613,"mutability":"mutable","name":"leaf","nameLocation":"30130:4:0","nodeType":"VariableDeclaration","scope":1649,"src":"30122:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1612,"name":"bytes32","nodeType":"ElementaryTypeName","src":"30122:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1620,"initialValue":{"arguments":[{"arguments":[{"id":1617,"name":"_caller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1607,"src":"30164:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1615,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"30147:3:0","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1616,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"30151:12:0","memberName":"encodePacked","nodeType":"MemberAccess","src":"30147:16:0","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1618,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30147:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1614,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"30137:9:0","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1619,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30137:36:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"30122:51:0"},{"condition":{"arguments":[{"id":1623,"name":"_merkles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1605,"src":"30207:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},{"id":1624,"name":"merkleRoot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1302,"src":"30217:10:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1625,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1613,"src":"30229:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1621,"name":"MerkleProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1265,"src":"30188:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MerkleProof_$1265_$","typeString":"type(library MerkleProof)"}},"id":1622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30200:6:0","memberName":"verify","nodeType":"MemberAccess","referencedDeclaration":787,"src":"30188:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32[] memory,bytes32,bytes32) pure returns (bool)"}},"id":1626,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30188:46:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1647,"nodeType":"Block","src":"30351:13:0","statements":[{"expression":{"hexValue":"30","id":1645,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30360:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1611,"id":1646,"nodeType":"Return","src":"30353:8:0"}]},"id":1648,"nodeType":"IfStatement","src":"30184:180:0","trueBody":{"id":1644,"nodeType":"Block","src":"30236:109:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1627,"name":"amountAirdrop","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1278,"src":"30259:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1628,"name":"amountPresale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1286,"src":"30273:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30259:27:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1630,"name":"amountSale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1294,"src":"30287:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30259:38:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"baseExpression":{"id":1632,"name":"claimed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1320,"src":"30298:7:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1634,"indexExpression":{"id":1633,"name":"_caller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1607,"src":"30306:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"30298:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30259:55:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1636,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"30258:57:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1637,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30317:2:0","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1638,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":295,"src":"30321:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint8_$","typeString":"function () view returns (uint8)"}},"id":1639,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30321:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"30317:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1641,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"30316:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30258:74:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1611,"id":1643,"nodeType":"Return","src":"30251:81:0"}]}}]},"functionSelector":"909587b8","id":1650,"implemented":true,"kind":"function","modifiers":[],"name":"canClaim","nameLocation":"30027:8:0","nodeType":"FunctionDefinition","parameters":{"id":1608,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1605,"mutability":"mutable","name":"_merkles","nameLocation":"30055:8:0","nodeType":"VariableDeclaration","scope":1650,"src":"30036:27:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1603,"name":"bytes32","nodeType":"ElementaryTypeName","src":"30036:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1604,"nodeType":"ArrayTypeName","src":"30036:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":1607,"mutability":"mutable","name":"_caller","nameLocation":"30073:7:0","nodeType":"VariableDeclaration","scope":1650,"src":"30065:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1606,"name":"address","nodeType":"ElementaryTypeName","src":"30065:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"30035:46:0"},"returnParameters":{"id":1611,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1610,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1650,"src":"30102:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1609,"name":"uint256","nodeType":"ElementaryTypeName","src":"30102:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30101:9:0"},"scope":1688,"src":"30018:353:0","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":1674,"nodeType":"Block","src":"30450:109:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1660,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1652,"src":"30469:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1661,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"30477:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":1662,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30477:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30469:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1664,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1316,"src":"30491:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30469:34:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"534f4c44204f555421","id":1666,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"30504:11:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_92c82212a327a71bf02d414be41d57d5573e6a8413493d350cdb10d7b19410c0","typeString":"literal_string \"SOLD OUT!\""},"value":"SOLD OUT!"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_92c82212a327a71bf02d414be41d57d5573e6a8413493d350cdb10d7b19410c0","typeString":"literal_string \"SOLD OUT!\""}],"id":1659,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"30461:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1667,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30461:55:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1668,"nodeType":"ExpressionStatement","src":"30461:55:0"},{"expression":{"arguments":[{"id":1670,"name":"_address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1654,"src":"30533:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1671,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1652,"src":"30543:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1669,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":626,"src":"30527:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1672,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30527:24:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1673,"nodeType":"ExpressionStatement","src":"30527:24:0"}]},"functionSelector":"7f2ac2bc","id":1675,"implemented":true,"kind":"function","modifiers":[{"id":1657,"kind":"modifierInvocation","modifierName":{"id":1656,"name":"onlyOwner","nameLocations":["30440:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":66,"src":"30440:9:0"},"nodeType":"ModifierInvocation","src":"30440:9:0"}],"name":"regTeam","nameLocation":"30388:7:0","nodeType":"FunctionDefinition","parameters":{"id":1655,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1652,"mutability":"mutable","name":"_amount","nameLocation":"30404:7:0","nodeType":"VariableDeclaration","scope":1675,"src":"30396:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1651,"name":"uint256","nodeType":"ElementaryTypeName","src":"30396:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1654,"mutability":"mutable","name":"_address","nameLocation":"30421:8:0","nodeType":"VariableDeclaration","scope":1675,"src":"30413:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1653,"name":"address","nodeType":"ElementaryTypeName","src":"30413:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"30395:35:0"},"returnParameters":{"id":1658,"nodeType":"ParameterList","parameters":[],"src":"30450:0:0"},"scope":1688,"src":"30379:180:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1686,"nodeType":"Block","src":"30605:43:0","statements":[{"expression":{"arguments":[{"expression":{"id":1681,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"30622:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30626:6:0","memberName":"sender","nodeType":"MemberAccess","src":"30622:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1683,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1677,"src":"30634:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1680,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":698,"src":"30616:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1684,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30616:24:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1685,"nodeType":"ExpressionStatement","src":"30616:24:0"}]},"functionSelector":"42966c68","id":1687,"implemented":true,"kind":"function","modifiers":[],"name":"burn","nameLocation":"30576:4:0","nodeType":"FunctionDefinition","parameters":{"id":1678,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1677,"mutability":"mutable","name":"value","nameLocation":"30589:5:0","nodeType":"VariableDeclaration","scope":1687,"src":"30581:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1676,"name":"uint256","nodeType":"ElementaryTypeName","src":"30581:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30580:15:0"},"returnParameters":{"id":1679,"nodeType":"ParameterList","parameters":[],"src":"30605:0:0"},"scope":1688,"src":"30567:81:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1689,"src":"27125:3526:0","usedErrors":[]}],"src":"151:30500:0"}}},"contracts":{"contracts/GOAT.sol":{"Context":{"abi":[],"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/GOAT.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/GOAT.sol\":{\"keccak256\":\"0xd212a7218dda9314beb1acee64dd43de276c8fc3c1954e3289729c29335ab28a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2a1fbde35e381df058b97549629b2c48e5ebdae547854ccfad9dce6a1582ae82\",\"dweb:/ipfs/QmNSKUhA7AbpTA4iFvYhfqiMeTMquDt3yXwEuV8rBvBtLz\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{}},"irOptimized":""},"ERC20":{"abi":[{"inputs":[{"internalType":"string","name":"name_","type":"string"},{"internalType":"string","name":"symbol_","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/GOAT.sol\":\"ERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/GOAT.sol\":{\"keccak256\":\"0xd212a7218dda9314beb1acee64dd43de276c8fc3c1954e3289729c29335ab28a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2a1fbde35e381df058b97549629b2c48e5ebdae547854ccfad9dce6a1582ae82\",\"dweb:/ipfs/QmNSKUhA7AbpTA4iFvYhfqiMeTMquDt3yXwEuV8rBvBtLz\"]}},\"version\":1}","zk_version":"1.3.9"},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"GOAT.sol:ERC20\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tnop\tstack+=[8]\n\tptr.add\tr1, r0, stack[@ptr_calldata]\n\tshr.s\t96, r1, r1\n\tand\t@CPI0_0[0], r1, stack[@calldatasize]\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB0_1\n\tadd\tstack[@calldatasize], r0, r1\n\tsub.s!\t4, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tld\tr1, r1\n\tshr.s\t224, r1, r1\n\tsub.s!\t@CPI0_5[0], r1, r2\n\tjump.le\t@.BB0_69\n\tsub.s!\t@CPI0_6[0], r1, r2\n\tjump.gt\t@.BB0_79\n\tsub.s!\t@CPI0_10[0], r1, r2\n\tjump.eq\t@.BB0_124\n\tsub.s!\t@CPI0_11[0], r1, r2\n\tjump.eq\t@.BB0_131\n\tsub.s!\t@CPI0_12[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub.s!\t0, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t4, r0, r5\n\tsload\tr5, r4\n\tand!\t1, r4, r6\n\tshr.s\t1, r4, r1\n\tand\t127, r1, r2\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t31, r1, r2\n\tadd\t0, r0, r2\n\tadd.gt\t1, r0, r2\n\txor\tr4, r2, r2\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_31\n\tld.1\t64, r2\n\tst.1.inc\tr2, r1, r3\n\tsub.s!\t0, r6, r6\n\tjump.ne\t@.BB0_142\n\tsub.s\t256, r0, r5\n\tand\tr4, r5, r4\n\tst.1\tr3, r4\n\tsub.s!\t0, r1, r1\n\tadd\t32, r0, r4\n\tadd.eq\t0, r0, r4\n\tjump\t@.BB0_139\n.BB0_1:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r2\n\tadd\t31, r2, r1\n\tsub.s\t32, r0, r10\n\tand\tr1, r10, r4\n\tld.1\t64, r1\n\tadd\tr4, r1, r3\n\tsub!\tr3, r4, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tsub.s!\t@CPI0_1[0], r3, r5\n\tjump.gt\t@.BB0_5\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB0_5\n\tst.1\t64, r3\n\tand\t31, r2, r3\n\tptr.add\tstack[@ptr_calldata], r0, r4\n\tshr.s!\t5, r2, r5\n\tjump.eq\t@.BB0_163\n\tadd\tr0, r0, r6\n.BB0_8:\n\tshl.s\t5, r6, r7\n\tadd\tr1, r7, r8\n\tptr.add\tr4, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_8\n.BB0_163:\n\tsub.s!\t0, r3, r6\n\tjump.eq\t@.BB0_10\n\tshl.s\t5, r5, r5\n\tptr.add\tr4, r5, r4\n\tadd\tr1, r5, r5\n\tshl.s\t3, r3, r3\n\tld.1\tr5, r6\n\tshl\tr6, r3, r6\n\tshr\tr6, r3, r6\n\tld\tr4, r4\n\tsub\t256, r3, r3\n\tshr\tr4, r3, r4\n\tshl\tr4, r3, r3\n\tor\tr3, r6, r3\n\tst.1\tr5, r3\n.BB0_10:\n\tadd\t@CPI0_2[0], r0, r3\n\tsub.s!\t64, r2, r4\n\tadd\t0, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t@CPI0_2[0], r2, r5\n\tsub.s!\t0, r5, r6\n\tadd.le\t0, r0, r3\n\tsub.s!\t@CPI0_2[0], r5, r5\n\tadd.ne\tr4, r0, r3\n\tsub.s!\t0, r3, r3\n\tjump.ne\t@.BB0_2\n\tld.1.inc\tr1, r4, r3\n\tsub.s!\t@CPI0_1[0], r4, r5\n\tjump.gt\t@.BB0_2\n\tadd\tr1, r2, r2\n\tadd\tr4, r1, r4\n\tadd\t31, r4, r5\n\tadd\t@CPI0_2[0], r0, r6\n\tsub!\tr5, r2, r7\n\tadd\t0, r0, r7\n\tadd.ge\tr6, r0, r7\n\tand\t@CPI0_2[0], r5, r5\n\tand\t@CPI0_2[0], r2, r8\n\tsub!\tr5, r8, r9\n\tadd.ge\t0, r0, r6\n\txor\tr5, r8, r5\n\tsub.s!\t@CPI0_2[0], r5, r5\n\tadd\tr7, r0, r5\n\tadd.eq\tr6, r0, r5\n\tsub.s!\t0, r5, r5\n\tjump.ne\t@.BB0_2\n\tld.1\tr4, r5\n\tsub.s!\t@CPI0_1[0], r5, r6\n\tjump.gt\t@.BB0_5\n\tadd\t63, r5, r6\n\tand\tr6, r10, r6\n\tld.1\t64, r11\n\tadd\tr11, r6, r6\n\tsub!\tr6, r11, r7\n\tadd\t0, r0, r7\n\tadd.lt\t1, r0, r7\n\tsub.s!\t@CPI0_1[0], r6, r8\n\tjump.gt\t@.BB0_5\n\tand!\t1, r7, r7\n\tjump.ne\t@.BB0_5\n\tst.1\t64, r6\n\tst.1.inc\tr11, r5, r12\n\tadd\t32, r5, r6\n\tadd\tr6, r4, r7\n\tsub!\tr7, r2, r7\n\tjump.gt\t@.BB0_2\n\tsub.s!\t0, r5, r7\n\tjump.eq\t@.BB0_20\n\tadd\tr0, r0, r7\n.BB0_19:\n\tadd\t32, r7, r7\n\tadd\tr7, r11, r8\n\tadd\tr7, r4, r9\n\tld.1\tr9, r9\n\tst.1\tr8, r9\n\tsub!\tr7, r5, r8\n\tjump.lt\t@.BB0_19\n.BB0_20:\n\tadd\tr11, r6, r4\n\tst.1\tr4, r0\n\tld.1\tr3, r3\n\tsub.s!\t@CPI0_1[0], r3, r4\n\tjump.gt\t@.BB0_2\n\tadd\tr3, r1, r1\n\tadd\t31, r1, r3\n\tadd\t@CPI0_2[0], r0, r4\n\tsub!\tr3, r2, r5\n\tadd\t0, r0, r5\n\tadd.ge\tr4, r0, r5\n\tand\t@CPI0_2[0], r3, r3\n\tand\t@CPI0_2[0], r2, r6\n\tsub!\tr3, r6, r7\n\tadd.ge\t0, r0, r4\n\txor\tr3, r6, r3\n\tsub.s!\t@CPI0_2[0], r3, r3\n\tadd\tr5, r0, r3\n\tadd.eq\tr4, r0, r3\n\tsub.s!\t0, r3, r3\n\tjump.ne\t@.BB0_2\n\tld.1\tr1, r3\n\tsub.s!\t@CPI0_1[0], r3, r4\n\tjump.gt\t@.BB0_5\n\tadd\t63, r3, r4\n\tand\tr4, r10, r4\n\tld.1\t64, r7\n\tadd\tr7, r4, r4\n\tsub!\tr4, r7, r5\n\tadd\t0, r0, r5\n\tadd.lt\t1, r0, r5\n\tsub.s!\t@CPI0_1[0], r4, r6\n\tjump.gt\t@.BB0_5\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB0_5\n\tst.1\t64, r4\n\tst.1.inc\tr7, r3, r4\n\tadd\tr4, r0, stack-[7]\n\tadd\t32, r3, r4\n\tadd\tr4, r1, r5\n\tsub!\tr5, r2, r2\n\tjump.gt\t@.BB0_2\n\tadd\tr12, r0, stack-[4]\n\tadd\tr11, r0, stack-[8]\n\tadd\tr10, r0, stack-[5]\n\tsub.s!\t0, r3, r2\n\tjump.eq\t@.BB0_29\n\tadd\tr0, r0, r2\n.BB0_28:\n\tadd\t32, r2, r2\n\tadd\tr2, r7, r5\n\tadd\tr2, r1, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tsub!\tr2, r3, r5\n\tjump.lt\t@.BB0_28\n.BB0_29:\n\tadd\tr7, r4, r1\n\tst.1\tr1, r0\n\tadd\tstack-[8], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[6]\n\tsub.s!\t@CPI0_1[0], r1, r1\n\tjump.gt\t@.BB0_5\n\tadd\tr7, r0, stack-[1]\n\tadd\t3, r0, r1\n\tadd\tr1, r0, stack-[3]\n\tsload\tr1, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r1\n\tand\t127, r1, r3\n\tadd.eq\tr3, r0, r1\n\tadd\tr1, r0, stack-[2]\n\tsub.s!\t31, r1, r1\n\tadd\t0, r0, r1\n\tadd.gt\t1, r0, r1\n\tand\t1, r1, r1\n\tsub!\tr2, r1, r1\n\tjump.ne\t@.BB0_31\n\tadd\tstack-[2], r0, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_36\n\tadd\tstack-[3], r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_3[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[6], r0, r3\n\tadd\t31, r3, r2\n\tshr.s\t5, r2, r2\n\tsub.s!\t32, r3, r3\n\tadd.lt\t0, r0, r2\n\tld\tr1, r3\n\tadd\tstack-[2], r0, r1\n\tadd\t31, r1, r1\n\tshr.s\t5, r1, r1\n\tadd\tr3, r1, r1\n\tadd\tr3, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.ge\t@.BB0_36\n.BB0_37:\n\tsstore\tr2, r0\n\tadd\t1, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB0_37\n.BB0_36:\n\tadd\tstack-[6], r0, r1\n\tsub.s!\t31, r1, r1\n\tjump.le\t@.BB0_46\n\tadd\tstack-[3], r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_3[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tadd\tstack-[5], r0, r2\n\tadd\tstack-[8], r0, r6\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[6], r0, r3\n\tand!\tr3, r2, r3\n\tadd\t32, r0, r2\n\tld\tr1, r1\n\tjump.eq\t@.BB0_43\n\tadd\t32, r0, r2\n\tadd\tr0, r0, r4\n.BB0_42:\n\tadd\tr2, r6, r5\n\tld.1\tr5, r5\n\tsstore\tr1, r5\n\tadd\t32, r2, r2\n\tadd\t1, r1, r1\n\tadd\t32, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB0_42\n.BB0_43:\n\tadd\tstack-[6], r0, r4\n\tsub!\tr3, r4, r3\n\tjump.ge\t@.BB0_45\n\tadd\tstack-[6], r0, r3\n\tshl.s\t3, r3, r3\n\tand\t248, r3, r3\n\tsub.s\t1, r0, r4\n\tshr\tr4, r3, r3\n\txor\tr3, r4, r3\n\tadd\tstack-[8], r0, r4\n\tadd\tr2, r4, r2\n\tld.1\tr2, r2\n\tand\tr2, r3, r2\n\tsstore\tr1, r2\n.BB0_45:\n\tadd\t1, r0, r1\n\tadd\tstack-[6], r0, r2\n\tshl.s\t1, r2, r2\n\tjump\t@.BB0_38\n.BB0_69:\n\tsub.s!\t@CPI0_13[0], r1, r2\n\tjump.le\t@.BB0_70\n\tsub.s!\t@CPI0_14[0], r1, r2\n\tjump.eq\t@.BB0_97\n\tsub.s!\t@CPI0_15[0], r1, r2\n\tjump.eq\t@.BB0_100\n\tsub.s!\t@CPI0_16[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub.s!\t0, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tld.1\t64, r1\n\tadd\t18, r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_20[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_79:\n\tsub.s!\t@CPI0_7[0], r1, r2\n\tjump.eq\t@.BB0_146\n\tsub.s!\t@CPI0_8[0], r1, r2\n\tjump.eq\t@.BB0_154\n\tsub.s!\t@CPI0_9[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub.s!\t64, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tptr.add\tstack[@ptr_calldata], r0, r2\n\tptr.add.s\t4, r2, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_19[0], r1, r3\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r2, r2\n\tld\tr2, r3\n\tsub.s!\t@CPI0_19[0], r3, r2\n\tjump.gt\t@.BB0_2\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tst.1\t32, r1\n\tadd\t64, r0, r2\n\tadd\tr2, r0, stack-[8]\n\tadd\tr0, r0, r1\n\tadd\tr3, r0, stack-[7]\n\tnear_call\tr0, @__keccak256, @DEFAULT_UNWIND\n\tadd\tstack-[7], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\tr0, r0, r1\n\tadd\tstack-[8], r0, r2\n\tnear_call\tr0, @__keccak256, @DEFAULT_UNWIND\n\tsload\tr1, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_20[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_70:\n\tsub.s!\t@CPI0_17[0], r1, r2\n\tjump.eq\t@.BB0_82\n\tsub.s!\t@CPI0_18[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub.s!\t64, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_19[0], r2, r3\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r1, r1\n\tld\tr1, r3\n\tcontext.caller\tr1\n\tnear_call\tr0, @fun_approve, @DEFAULT_UNWIND\n\tadd\t1, r0, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_20[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_124:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub.s!\t64, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t4, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[8]\n\tsub.s!\t@CPI0_19[0], r1, r1\n\tjump.gt\t@.BB0_2\n\tcontext.caller\tr1\n\tadd\tr1, r0, stack-[6]\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tadd\tr1, r0, stack-[7]\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_21[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[8], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_21[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tadd\t36, r0, r2\n\tptr.add\tstack[@ptr_calldata], r2, r2\n\tld\tr2, r2\n\tadd\tr2, r1, r3\n\tsub!\tr3, r2, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tand!\t1, r1, r1\n\tjump.eq\t@.BB0_130\n.BB0_114:\n\tadd\t@CPI0_30[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_31[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_131:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub.s!\t32, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t4, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_19[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t64, r0, r2\n\tadd\tr0, r0, r1\n\tnear_call\tr0, @__keccak256, @DEFAULT_UNWIND\n\tsload\tr1, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_20[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_97:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub.s!\t0, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t2, r0, r1\n\tsload\tr1, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_20[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_100:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub.s!\t96, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r4\n\tsub.s!\t@CPI0_19[0], r4, r2\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r1, r2\n\tld\tr2, r5\n\tsub.s!\t@CPI0_19[0], r5, r2\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t68, r1, r1\n\tld\tr1, r2\n\tsub.s!\t0, r4, r1\n\tjump.ne\t@.BB0_106\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI0_36[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI0_37[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t37, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_24[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_25[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_146:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub.s!\t64, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[8]\n\tsub.s!\t@CPI0_19[0], r2, r2\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r1, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[7]\n\tcontext.caller\tr1\n\tadd\tr1, r0, stack-[5]\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tadd\tr1, r0, stack-[6]\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_21[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[8], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_21[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tadd\tstack-[7], r0, r3\n\tsub!\tr1, r3, r2\n\tjump.ge\t@.BB0_153\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI0_22[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI0_23[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t37, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_24[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_25[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_154:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub.s!\t64, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_19[0], r2, r3\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r1, r1\n\tld\tr1, r3\n\tcontext.caller\tr1\n\tnear_call\tr0, @fun_transfer, @DEFAULT_UNWIND\n\tadd\t1, r0, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_20[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_82:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub.s!\t0, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB0_84\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_84:\n\tadd\t3, r0, r3\n\tsload\tr3, r2\n\tand!\t1, r2, r4\n\tshr.s\t1, r2, r1\n\tand\t127, r1, r5\n\tadd\tr1, r0, r6\n\tadd.eq\tr5, r0, r6\n\tsub.s!\t31, r6, r5\n\tadd\t0, r0, r5\n\tadd.gt\t1, r0, r5\n\txor\tr2, r5, r5\n\tand!\t1, r5, r5\n\tjump.eq\t@.BB0_85\n.BB0_31:\n\tadd\t@CPI0_30[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_31[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_85:\n\tst.1\t128, r6\n\tsub.s!\t0, r4, r4\n\tjump.ne\t@.BB0_88\n\tsub.s\t256, r0, r3\n\tand\tr2, r3, r2\n\tst.1\t160, r2\n\tsub.s!\t0, r6, r1\n\tadd\t192, r0, r1\n\tadd.eq\t160, r0, r1\n\tjump\t@.BB0_86\n.BB0_142:\n\tst.1\t0, r5\n\tsub.s!\t0, r1, r4\n\tadd\tr0, r0, r4\n\tjump.eq\t@.BB0_139\n\tadd\t@CPI0_26[0], r0, r5\n\tadd\tr0, r0, r4\n.BB0_144:\n\tadd\tr3, r4, r6\n\tsload\tr5, r7\n\tst.1\tr6, r7\n\tadd\t1, r5, r5\n\tadd\t32, r4, r4\n\tsub!\tr4, r1, r6\n\tjump.lt\t@.BB0_144\n.BB0_139:\n\tadd\t63, r4, r1\n\tsub.s\t32, r0, r3\n\tand\tr1, r3, r3\n\tadd\tr3, r2, r1\n\tsub!\tr1, r3, r3\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tsub.s!\t@CPI0_1[0], r1, r3\n\tjump.gt\t@.BB0_5\n\tand!\t1, r4, r3\n\tjump.ne\t@.BB0_5\n\tst.1\t64, r1\n\tadd\tr1, r0, stack-[8]\n\tnear_call\tr0, @abi_encode_string, @DEFAULT_UNWIND\n\tadd\tstack-[8], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_88:\n\tst.1\t0, r3\n\tadd\t160, r0, r1\n\tsub.s!\t0, r6, r2\n\tjump.eq\t@.BB0_92\n\tadd\t@CPI0_38[0], r0, r2\n\tadd\tr0, r0, r4\n.BB0_90:\n\tadd\tr4, r0, r3\n\tsload\tr2, r4\n\tadd\t160, r3, r5\n\tst.1\tr5, r4\n\tadd\t1, r2, r2\n\tadd\t32, r3, r4\n\tsub!\tr4, r6, r5\n\tjump.lt\t@.BB0_90\n\tadd\t192, r3, r1\n.BB0_86:\n\tadd\t31, r1, r1\n\tsub.s\t32, r0, r2\n\tand\tr1, r2, r1\n\tadd\t@CPI0_39[0], r1, r2\n\tsub.s!\t@CPI0_40[0], r2, r2\n\tjump.ge\t@.BB0_92\n.BB0_5:\n\tadd\t@CPI0_30[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_31[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_92:\n\tadd\tr1, r0, stack-[8]\n\tst.1\t64, r1\n\tadd\t128, r0, r2\n\tnear_call\tr0, @abi_encode_string, @DEFAULT_UNWIND\n\tadd\tstack-[8], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_106:\n\tsub.s!\t0, r5, r1\n\tjump.ne\t@.BB0_108\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI0_34[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI0_35[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t35, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_24[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_25[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_130:\n\tadd\tstack-[6], r0, r1\n\tadd\tstack-[8], r0, r2\n\tnear_call\tr0, @fun_approve, @DEFAULT_UNWIND\n\tld.1\t64, r1\n\tadd\tstack-[7], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_20[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_153:\n\tsub\tr1, r3, r3\n\tadd\tstack-[5], r0, r1\n\tadd\tstack-[8], r0, r2\n\tnear_call\tr0, @fun_approve, @DEFAULT_UNWIND\n\tld.1\t64, r1\n\tadd\tstack-[6], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_20[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_108:\n\tadd\tr2, r0, stack-[7]\n\tst.1\t0, r4\n\tst.1\t32, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_21[0], r1, r1\n\tadd\t32784, r0, r2\n\tadd\tr4, r0, stack-[8]\n\tadd\tr5, r0, stack-[6]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[8], r0, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tstack-[7], r0, r1\n\tadd\tr2, r0, stack-[5]\n\tsub!\tr2, r1, r1\n\tjump.ge\t@.BB0_111\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI0_32[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI0_33[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t38, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_24[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_25[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_111:\n\tst.1\t0, r3\n\tst.1\t32, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_21[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tadd\tstack-[6], r0, r3\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[7], r0, r2\n\tadd\tstack-[5], r0, r4\n\tsub\tr4, r2, r2\n\tld\tr1, r1\n\tsstore\tr1, r2\n\tst.1\t0, r3\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_21[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r3\n\tadd\tstack-[7], r0, r2\n\tadd\tr3, r2, r2\n\tsub!\tr2, r3, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB0_114\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tadd\tstack-[7], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_27[0], r0, r4\n\tadd\tstack-[8], r0, r5\n\tadd\tstack-[6], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[8], r0, r3\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tst.1\t0, r3\n\tadd\t1, r0, r1\n\tadd\tr1, r0, stack-[6]\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_21[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tcontext.caller\tr2\n\tadd\tr2, r0, stack-[5]\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_21[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tadd\tstack-[7], r0, r2\n\tsub!\tr1, r2, r2\n\tjump.ge\t@.BB0_120\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI0_28[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI0_29[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t40, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_24[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_25[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_46:\n\tadd\tstack-[6], r0, r1\n\tsub.s!\t0, r1, r1\n\tadd\tr0, r0, r1\n\tjump.eq\t@.BB0_48\n\tadd\tstack-[4], r0, r1\n\tld.1\tr1, r1\n.BB0_48:\n\tadd\tstack-[6], r0, r4\n\tshl.s\t3, r4, r2\n\tsub.s\t1, r0, r3\n\tshr\tr3, r2, r2\n\txor\tr2, r3, r2\n\tand\tr1, r2, r2\n\tshl.s\t1, r4, r1\n.BB0_38:\n\tor\tr2, r1, r1\n\tadd\tstack-[3], r0, r2\n\tsstore\tr2, r1\n\tadd\tstack-[1], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[8]\n\tsub.s!\t@CPI0_1[0], r1, r1\n\tjump.gt\t@.BB0_5\n\tadd\t4, r0, r1\n\tadd\tr1, r0, stack-[6]\n\tsload\tr1, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r2\n\tand\t127, r2, r3\n\tadd.eq\tr3, r0, r2\n\tadd\tr2, r0, stack-[4]\n\tsub.s!\t31, r2, r2\n\tadd\t0, r0, r2\n\tadd.gt\t1, r0, r2\n\txor\tr1, r2, r1\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_31\n\tadd\tstack-[4], r0, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_54\n\tadd\tstack-[6], r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_3[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[8], r0, r3\n\tadd\t31, r3, r2\n\tshr.s\t5, r2, r2\n\tsub.s!\t32, r3, r3\n\tadd.lt\t0, r0, r2\n\tld\tr1, r3\n\tadd\tstack-[4], r0, r1\n\tadd\t31, r1, r1\n\tshr.s\t5, r1, r1\n\tadd\tr3, r1, r1\n\tadd\tr3, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.ge\t@.BB0_54\n.BB0_55:\n\tsstore\tr2, r0\n\tadd\t1, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB0_55\n.BB0_54:\n\tadd\tstack-[8], r0, r1\n\tsub.s!\t31, r1, r1\n\tjump.le\t@.BB0_64\n\tadd\tstack-[6], r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_3[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tadd\tstack-[5], r0, r2\n\tadd\tstack-[1], r0, r6\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[8], r0, r3\n\tand!\tr3, r2, r3\n\tadd\t32, r0, r2\n\tld\tr1, r1\n\tjump.eq\t@.BB0_61\n\tadd\t32, r0, r2\n\tadd\tr0, r0, r4\n.BB0_60:\n\tadd\tr2, r6, r5\n\tld.1\tr5, r5\n\tsstore\tr1, r5\n\tadd\t32, r2, r2\n\tadd\t1, r1, r1\n\tadd\t32, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB0_60\n.BB0_61:\n\tadd\tstack-[8], r0, r4\n\tsub!\tr3, r4, r3\n\tjump.ge\t@.BB0_63\n\tadd\tstack-[8], r0, r3\n\tshl.s\t3, r3, r3\n\tand\t248, r3, r3\n\tsub.s\t1, r0, r4\n\tshr\tr4, r3, r3\n\txor\tr3, r4, r3\n\tadd\tstack-[1], r0, r4\n\tadd\tr2, r4, r2\n\tld.1\tr2, r2\n\tand\tr2, r3, r2\n\tsstore\tr1, r2\n.BB0_63:\n\tadd\t1, r0, r1\n\tadd\tstack-[8], r0, r2\n\tshl.s\t1, r2, r2\n\tjump\t@.BB0_56\n.BB0_64:\n\tadd\tstack-[8], r0, r1\n\tsub.s!\t0, r1, r1\n\tadd\tr0, r0, r1\n\tjump.eq\t@.BB0_66\n\tadd\tstack-[7], r0, r1\n\tld.1\tr1, r1\n.BB0_66:\n\tadd\tstack-[8], r0, r4\n\tshl.s\t3, r4, r2\n\tsub.s\t1, r0, r3\n\tshr\tr3, r2, r2\n\txor\tr2, r3, r2\n\tand\tr1, r2, r2\n\tshl.s\t1, r4, r1\n.BB0_56:\n\tor\tr2, r1, r1\n\tadd\tstack-[6], r0, r2\n\tsstore\tr2, r1\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_4[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_120:\n\tadd\tstack-[7], r0, r2\n\tsub\tr1, r2, r3\n\tadd\tstack-[8], r0, r1\n\tadd\tstack-[5], r0, r2\n\tnear_call\tr0, @fun_approve, @DEFAULT_UNWIND\n\tld.1\t64, r1\n\tadd\tstack-[6], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_20[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.func_end0:\n\n__keccak256:\n.func_begin1:\n\tadd\t@CPI1_0[0], r0, r3\n\tsub.s!\t@CPI1_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tsub.s!\t@CPI1_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI1_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_2\n\tld\tr1, r1\n\tret\n.BB1_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end1:\n\nabi_encode_string:\n.func_begin2:\n\tadd\t32, r0, r3\n\tst.1.inc\tr1, r3, r4\n\tld.1\tr2, r3\n\tst.1\tr4, r3\n\tadd\t64, r1, r1\n\tsub.s!\t0, r3, r4\n\tjump.eq\t@.BB2_3\n\tadd\tr0, r0, r4\n.BB2_2:\n\tadd\tr1, r4, r5\n\tadd\t32, r4, r4\n\tadd\tr4, r2, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB2_2\n.BB2_3:\n\tadd\tr1, r3, r2\n\tst.1\tr2, r0\n\tadd\t31, r3, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r2\n\tadd\tr1, r2, r1\n\tret\n.func_end2:\n\nfun_transfer:\n.func_begin3:\n\tnop\tstack+=[4]\n\tand!\t@CPI3_0[0], r1, r1\n\tjump.eq\t@.BB3_1\n\tadd\tr3, r0, stack-[4]\n\tand!\t@CPI3_0[0], r2, r2\n\tadd\tr2, r0, stack-[2]\n\tjump.eq\t@.BB3_3\n\tadd\tr1, r0, stack-[3]\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI3_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI3_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_5\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tstack-[4], r0, r1\n\tadd\tr2, r0, stack-[1]\n\tsub!\tr2, r1, r1\n\tjump.lt\t@.BB3_7\n\tadd\tstack-[3], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI3_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI3_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_5\n\tadd\tstack-[4], r0, r2\n\tadd\tstack-[1], r0, r3\n\tsub\tr3, r2, r2\n\tld\tr1, r1\n\tsstore\tr1, r2\n\tadd\tstack-[2], r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI3_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI3_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_5\n\tld\tr1, r1\n\tsload\tr1, r3\n\tadd\tstack-[4], r0, r4\n\tadd\tr3, r4, r2\n\tsub!\tr2, r3, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB3_11\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r4\n\tadd\t@CPI3_1[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI3_1[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI3_1[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI3_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI3_4[0], r0, r4\n\tadd\tstack-[3], r0, r5\n\tadd\tstack-[2], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB3_5\n\tret\n.BB3_5:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB3_1:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI3_13[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI3_14[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t37, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI3_9[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI3_1[0], r0, r2\n\tsub.s!\t@CPI3_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI3_10[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB3_3:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI3_11[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI3_12[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t35, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI3_9[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI3_1[0], r0, r2\n\tsub.s!\t@CPI3_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI3_10[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB3_7:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI3_7[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI3_8[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t38, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI3_9[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI3_1[0], r0, r2\n\tsub.s!\t@CPI3_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI3_10[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB3_11:\n\tadd\t@CPI3_5[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI3_6[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end3:\n\nfun_approve:\n.func_begin4:\n\tnop\tstack+=[3]\n\tand!\t@CPI4_0[0], r1, r1\n\tjump.eq\t@.BB4_1\n\tadd\tr3, r0, stack-[2]\n\tand!\t@CPI4_0[0], r2, r2\n\tadd\tr2, r0, stack-[3]\n\tjump.eq\t@.BB4_3\n\tadd\tr1, r0, stack-[1]\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI4_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI4_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI4_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tadd\tstack-[3], r0, r4\n\tjump.eq\t@.BB4_5\n\tld\tr1, r1\n\tst.1\t0, r4\n\tst.1\t32, r1\n\tadd\t@CPI4_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI4_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI4_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[3], r0, r6\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB4_5\n\tld\tr1, r1\n\tadd\tstack-[2], r0, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r2\n\tadd\t@CPI4_1[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI4_1[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI4_1[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI4_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI4_4[0], r0, r4\n\tadd\tstack-[1], r0, r5\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB4_5\n\tret\n.BB4_5:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB4_1:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI4_9[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI4_10[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t36, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI4_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI4_1[0], r0, r2\n\tsub.s!\t@CPI4_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI4_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB4_3:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI4_5[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI4_6[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t34, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI4_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI4_1[0], r0, r2\n\tsub.s!\t@CPI4_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI4_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end4:\n\n__farcall:\n.func_begin5:\n.tmp0:\n\tfar_call\tr1, r2, @.BB5_2\n.tmp1:\n\tadd\t1, r0, r2\n\tret\n.BB5_2:\n.tmp2:\n\tadd\tr0, r0, r2\n\tret\n.func_end5:\n\n__staticcall:\n.func_begin6:\n.tmp3:\n\tfar_call.static\tr1, r2, @.BB6_2\n.tmp4:\n\tadd\t1, r0, r2\n\tret\n.BB6_2:\n.tmp5:\n\tadd\tr0, r0, r2\n\tret\n.func_end6:\n\n\t.data\n\t.p2align\t5\ncalldatasize:\n\t.cell 0\n\n\t.p2align\t5\nptr_calldata:\n.cell\t0\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\nCPI1_0:\nCPI3_1:\nCPI4_1:\n\t.cell 4294967295\nCPI0_1:\n\t.cell 18446744073709551615\nCPI0_2:\n\t.cell -57896044618658097711785492504343953926634992332820282019728792003956564819968\nCPI0_3:\nCPI3_3:\nCPI4_3:\n\t.cell 904625697166532776746648320380374280103671757735618107014721178055227736064\nCPI0_4:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\nCPI0_5:\n\t.cell 961581904\nCPI0_6:\n\t.cell 2757214934\nCPI0_7:\n\t.cell 2757214935\nCPI0_8:\n\t.cell 2835717307\nCPI0_9:\n\t.cell 3714247998\nCPI0_10:\n\t.cell 961581905\nCPI0_11:\n\t.cell 1889567281\nCPI0_12:\n\t.cell 2514000705\nCPI0_13:\n\t.cell 404098524\nCPI0_14:\n\t.cell 404098525\nCPI0_15:\n\t.cell 599290589\nCPI0_16:\n\t.cell 826074471\nCPI0_17:\n\t.cell 117300739\nCPI0_18:\n\t.cell 157198259\nCPI0_19:\nCPI3_0:\nCPI4_0:\n\t.cell 1461501637330902918203684832716283019655932542975\nCPI0_20:\n\t.cell 2535301200456458802993406410752\nCPI0_21:\nCPI3_2:\nCPI4_2:\n\t.cell 904625697166532776746648320380374280103671760270919307471179981048634146816\nCPI0_22:\n\t.cell 14690266658072097593480850647027335513285713462661904985951319567533531463680\nCPI0_23:\n\t.cell 31354931781638678506476475496475743842680577777870365728514456330491174612855\nCPI0_24:\nCPI3_9:\nCPI4_7:\n\t.cell 3963877391197344453575983046348115674221700746820753546331534351508065746944\nCPI0_25:\nCPI3_10:\nCPI4_8:\n\t.cell 10458117451882892562347801444352\nCPI0_26:\n\t.cell -53278079350709166316280423202849322519190186591071851114874353210178472783461\nCPI0_27:\nCPI3_4:\n\t.cell -15402802100530019096323380498944738953123845089667699673314898783681816316945\nCPI0_28:\n\t.cell 49041376442327685983450583443845300569967147870487584211451521639864848089088\nCPI0_29:\n\t.cell 31354931781638678607228669297131712859100820671745083778533502622993977909345\nCPI0_30:\nCPI3_5:\n\t.cell 35408467139433450592217433187231851964531694900788300625387963629091585785856\nCPI0_31:\nCPI3_6:\n\t.cell 2852213850513516153367582212096\nCPI0_32:\nCPI3_7:\n\t.cell 44065838241030143116324720188876985940908656145555552347773292252211112312832\nCPI0_33:\nCPI3_8:\n\t.cell 31354931781638678607228669297131712859100820671745083778533502622993977909346\nCPI0_34:\nCPI3_11:\n\t.cell 45887578820189300338443374388718498632482616163288499555830078344056365121536\nCPI0_35:\nCPI3_12:\n\t.cell 31354931781638678607228669297131712859126084785867252355217498662940140921970\nCPI0_36:\nCPI3_13:\n\t.cell 45433405612597180762055095701412804886438245671210399661410036396145969725440\nCPI0_37:\nCPI3_14:\n\t.cell 31354931781638678607228669297131712859107492772550336241160036866987736981860\nCPI0_38:\n\t.cell -27889059366240281169193357100633332908378892778709981755071813198463099602853\nCPI0_39:\n\t.cell -18446744073709551616\nCPI0_40:\n\t.cell -18446744073709551488\nCPI1_1:\n\t.cell 904625697166532776746648320380374280103671755200316906558262375061821325312\nCPI4_4:\n\t.cell -52305948261162578668367882225327028569797882979485679342215860919519743330011\nCPI4_5:\n\t.cell 52219164999525148860834357634456956735281286572158918307284071279203377479680\nCPI4_6:\n\t.cell 31354931781638678487916134672869638488806705378895508030211234510262059168357\nCPI4_9:\n\t.cell 51742913093258732729005998692887265601192425265805909375210916622055285719040\nCPI4_10:\n\t.cell 31354931781638678487916134672869638484047149969764982831501014746446650500196\n","bytecode":{"object":"0002000000000002000800000000000200010000000103550000006001100270000001880010019d0000008001000039000000400010043f0000000101200190000000410000c13d0000000001000031000000040110008c000003080000413d0000000101000367000000000101043b000000e0011002700000018d0210009c0000014a0000a13d0000018e0210009c0000016c0000213d000001920210009c000001ca0000613d000001930210009c000002100000613d000001940110009c000003080000c13d0000000001000416000000000110004c000003080000c13d000000040100008a00000000011000310000018a02000041000000000310004c000000000300001900000000030240190000018a01100197000000000410004c000000000200a0190000018a0110009c00000000010300190000000001026019000000000110004c000003080000c13d0000000405000039000000000405041a000000010640019000000001014002700000007f0210018f00000000010260190000001f0210008c00000000020000190000000102002039000000000224013f0000000102200190000003170000c13d000000400200043d0000000003120436000000000660004c000003270000c13d000001000500008a000000000454016f0000000000430435000000000110004c00000020040000390000000004006019000003340000013d0000000001000416000000000110004c000003080000c13d00000000020000310000001f01200039000000200a00008a0000000004a1016f000000400100043d0000000003140019000000000443004b00000000040000190000000104004039000001890530009c000003620000213d0000000104400190000003620000c13d000000400030043f0000001f0320018f000000010400036700000005052002720000005f0000613d000000000600001900000005076002100000000008710019000000000774034f000000000707043b00000000007804350000000106600039000000000756004b000000570000413d000000000630004c0000006e0000613d0000000505500210000000000454034f00000000055100190000000303300210000000000605043300000000063601cf000000000636022f000000000404043b0000010003300089000000000434022f00000000033401cf000000000363019f00000000003504350000018a03000041000000400420008c000000000400001900000000040340190000018a05200197000000000650004c000000000300a0190000018a0550009c000000000304c019000000000330004c000003080000c13d0000000034010434000001890540009c000003080000213d000000000221001900000000041400190000001f054000390000018a06000041000000000725004b000000000700001900000000070680190000018a055001970000018a08200197000000000985004b0000000006008019000000000585013f0000018a0550009c00000000050700190000000005066019000000000550004c000003080000c13d0000000005040433000001890650009c000003620000213d0000003f065000390000000006a6016f000000400b00043d00000000066b00190000000007b6004b00000000070000190000000107004039000001890860009c000003620000213d0000000107700190000003620000c13d000000400060043f000000000c5b043600000020065000390000000007460019000000000727004b000003080000213d000000000750004c000000ab0000613d000000000700001900000020077000390000000008b70019000000000947001900000000090904330000000000980435000000000857004b000000a40000413d00000000046b001900000000000404350000000003030433000001890430009c000003080000213d00000000011300190000001f031000390000018a04000041000000000523004b000000000500001900000000050480190000018a033001970000018a06200197000000000763004b0000000004008019000000000363013f0000018a0330009c00000000030500190000000003046019000000000330004c000003080000c13d0000000003010433000001890430009c000003620000213d0000003f043000390000000004a4016f000000400700043d0000000004470019000000000574004b00000000050000190000000105004039000001890640009c000003620000213d0000000105500190000003620000c13d000000400040043f0000000004370436000700000004001d00000020043000390000000005140019000000000225004b000003080000213d00040000000c001d00080000000b001d00050000000a001d000000000230004c000000e20000613d000000000200001900000020022000390000000005720019000000000612001900000000060604330000000000650435000000000532004b000000db0000413d0000000001470019000000000001043500000008010000290000000001010433000600000001001d000001890110009c000003620000213d000100000007001d0000000301000039000300000001001d000000000101041a000000010210019000000001011002700000007f0310018f0000000001036019000200000001001d0000001f0110008c00000000010000190000000101002039000000010110018f000000000112004b000003170000c13d0000000201000029000000200110008c000001180000413d0000000301000029000000000010043500000188010000410000000002000414000001880320009c0000000001024019000000c0011002100000018b011001c70000801002000039061906140000040f0000000102200190000003080000613d00000006030000290000001f023000390000000502200270000000200330008c0000000002004019000000000301043b00000002010000290000001f01100039000000050110027000000000011300190000000002230019000000000312004b000001180000813d000000000002041b0000000102200039000000000312004b000001140000413d00000006010000290000001f0110008c000004460000a13d0000000301000029000000000010043500000188010000410000000002000414000001880320009c0000000001024019000000c0011002100000018b011001c70000801002000039061906140000040f000000010220019000000005020000290000000806000029000003080000613d000000060300002900000000032301700000002002000039000000000101043b000001380000613d0000002002000039000000000400001900000000056200190000000005050433000000000051041b000000200220003900000001011000390000002004400039000000000534004b000001300000413d0000000604000029000000000343004b000001460000813d00000006030000290000000303300210000000f80330018f000000010400008a000000000334022f000000000343013f000000080400002900000000024200190000000002020433000000000232016f000000000021041b000000010100003900000006020000290000000102200210000004530000013d000001950210009c000001a30000a13d000001960210009c000002340000613d000001970210009c0000024f0000613d000001980110009c000003080000c13d0000000001000416000000000110004c000003080000c13d000000040100008a00000000011000310000018a02000041000000000310004c000000000300001900000000030240190000018a01100197000000000410004c000000000200a0190000018a0110009c00000000010300190000000001026019000000000110004c000003080000c13d000000400100043d000000120200003900000000002104350000018802000041000001880310009c000000000102801900000040011002100000019c011001c70000061a0001042e0000018f0210009c000002820000613d000001900210009c000002d40000613d000001910110009c000003080000c13d0000000001000416000000000110004c000003080000c13d000000040100008a00000000011000310000018a02000041000000400310008c000000000300001900000000030240190000018a01100197000000000410004c000000000200a0190000018a0110009c00000000010300190000000001026019000000000110004c000003080000c13d00000001020003670000000401200370000000000101043b0000019b0310009c000003080000213d0000002402200370000000000302043b0000019b0230009c000003080000213d00000000001004350000000101000039000000200010043f0000004002000039000800000002001d0000000001000019000700000003001d061904de0000040f00000007020000290000000000200435000000200010043f00000000010000190000000802000029061904de0000040f000000000101041a000000400200043d00000000001204350000018801000041000001880320009c000000000102401900000040011002100000019c011001c70000061a0001042e000001990210009c000002f70000613d0000019a0110009c000003080000c13d0000000001000416000000000110004c000003080000c13d000000040100008a00000000011000310000018a02000041000000400310008c000000000300001900000000030240190000018a01100197000000000410004c000000000200a0190000018a0110009c00000000010300190000000001026019000000000110004c000003080000c13d00000001010003670000000402100370000000000202043b0000019b0320009c000003080000213d0000002401100370000000000301043b0000000001000411061905a80000040f0000000101000039000000400200043d00000000001204350000018801000041000001880320009c000000000102401900000040011002100000019c011001c70000061a0001042e0000000001000416000000000110004c000003080000c13d000000040100008a00000000011000310000018a02000041000000400310008c000000000300001900000000030240190000018a01100197000000000410004c000000000200a0190000018a0110009c00000000010300190000000001026019000000000110004c000003080000c13d00000004010000390000000101100367000000000101043b000800000001001d0000019b0110009c000003080000213d0000000001000411000600000001001d00000000001004350000000101000039000700000001001d000000200010043f00000188010000410000000002000414000001880320009c0000000001024019000000c0011002100000019d011001c70000801002000039061906140000040f0000000102200190000003080000613d000000000101043b00000008020000290000000000200435000000200010043f00000188010000410000000002000414000001880320009c0000000001024019000000c0011002100000019d011001c70000801002000039061906140000040f0000000102200190000003080000613d000000000101043b000000000101041a00000024020000390000000102200367000000000202043b0000000003120019000000000123004b0000000001000019000000010100403900000001011001900000038e0000613d000001a60100004100000000001004350000001101000039000000040010043f000001a7010000410000061b000104300000000001000416000000000110004c000003080000c13d000000040100008a00000000011000310000018a02000041000000200310008c000000000300001900000000030240190000018a01100197000000000410004c000000000200a0190000018a0110009c00000000010300190000000001026019000000000110004c000003080000c13d00000004010000390000000101100367000000000101043b0000019b0210009c000003080000213d0000000000100435000000200000043f00000040020000390000000001000019061904de0000040f000000000101041a000000400200043d00000000001204350000018801000041000001880320009c000000000102401900000040011002100000019c011001c70000061a0001042e0000000001000416000000000110004c000003080000c13d000000040100008a00000000011000310000018a02000041000000000310004c000000000300001900000000030240190000018a01100197000000000410004c000000000200a0190000018a0110009c00000000010300190000000001026019000000000110004c000003080000c13d0000000201000039000000000101041a000000400200043d00000000001204350000018801000041000001880320009c000000000102401900000040011002100000019c011001c70000061a0001042e0000000001000416000000000110004c000003080000c13d000000040100008a00000000011000310000018a02000041000000600310008c000000000300001900000000030240190000018a01100197000000000410004c000000000200a0190000018a0110009c00000000010300190000000001026019000000000110004c000003080000c13d00000001010003670000000402100370000000000402043b0000019b0240009c000003080000213d0000002402100370000000000502043b0000019b0250009c000003080000213d0000004401100370000000000201043b000000000140004c000003770000c13d000000400100043d0000006402100039000001ac0300004100000000003204350000004402100039000001ad030000410000000000320435000000240210003900000025030000390000000000320435000001a00200004100000000002104350000000402100039000000200300003900000000003204350000018802000041000001880310009c00000000010280190000004001100210000001a1011001c70000061b000104300000000001000416000000000110004c000003080000c13d000000040100008a00000000011000310000018a02000041000000400310008c000000000300001900000000030240190000018a01100197000000000410004c000000000200a0190000018a0110009c00000000010300190000000001026019000000000110004c000003080000c13d00000001010003670000000402100370000000000202043b000800000002001d0000019b0220009c000003080000213d0000002401100370000000000101043b000700000001001d0000000001000411000500000001001d00000000001004350000000101000039000600000001001d000000200010043f00000188010000410000000002000414000001880320009c0000000001024019000000c0011002100000019d011001c70000801002000039061906140000040f0000000102200190000003080000613d000000000101043b00000008020000290000000000200435000000200010043f00000188010000410000000002000414000001880320009c0000000001024019000000c0011002100000019d011001c70000801002000039061906140000040f0000000102200190000003080000613d000000000101043b000000000101041a0000000703000029000000000231004b0000039a0000813d000000400100043d00000064021000390000019e03000041000000000032043500000044021000390000019f030000410000000000320435000000240210003900000025030000390000000000320435000001a00200004100000000002104350000000402100039000000200300003900000000003204350000018802000041000001880310009c00000000010280190000004001100210000001a1011001c70000061b000104300000000001000416000000000110004c000003080000c13d000000040100008a00000000011000310000018a02000041000000400310008c000000000300001900000000030240190000018a01100197000000000410004c000000000200a0190000018a0110009c00000000010300190000000001026019000000000110004c000003080000c13d00000001010003670000000402100370000000000202043b0000019b0320009c000003080000213d0000002401100370000000000301043b00000000010004110619050a0000040f0000000101000039000000400200043d00000000001204350000018801000041000001880320009c000000000102401900000040011002100000019c011001c70000061a0001042e0000000001000416000000000110004c000003080000c13d000000040100008a00000000011000310000018a02000041000000000310004c000000000300001900000000030240190000018a01100197000000000410004c000000000200a0190000018a0110009c00000000010300190000000001026019000000000110004c0000030a0000613d00000000010000190000061b000104300000000303000039000000000203041a000000010420019000000001012002700000007f0510018f000000000601001900000000060560190000001f0560008c00000000050000190000000105002039000000000552013f00000001055001900000031d0000613d000001a60100004100000000001004350000002201000039000000040010043f000001a7010000410000061b00010430000000800060043f000000000440004c0000034d0000c13d000001000300008a000000000232016f000000a00020043f000000000160004c000000c001000039000000a0010060390000035c0000013d0000000000500435000000000410004c0000000004000019000003340000613d000001a20500004100000000040000190000000006430019000000000705041a000000000076043500000001055000390000002004400039000000000614004b0000032d0000413d0000003f01400039000000200300008a000000000331016f0000000001230019000000000331004b00000000040000190000000104004039000001890310009c000003620000213d0000000103400190000003620000c13d000000400010043f000800000001001d061904f40000040f000000080400002900000000014100490000018802000041000001880310009c0000000001028019000001880340009c000000000204401900000040022002100000006001100210000000000121019f0000061a0001042e0000000000300435000000a001000039000000000260004c000003680000613d000001ae0200004100000000040000190000000003040019000000000402041a000000a005300039000000000045043500000001022000390000002004300039000000000564004b000003530000413d000000c0013000390000001f01100039000000200200008a000000000121016f000001af02100041000001b00220009c000003680000813d000001a60100004100000000001004350000004101000039000000040010043f000001a7010000410000061b00010430000800000001001d000000400010043f0000008002000039061904f40000040f000000080400002900000000014100490000018802000041000001880310009c0000000001028019000001880340009c000000000204401900000040022002100000006001100210000000000121019f0000061a0001042e000000000150004c000003a70000c13d000000400100043d0000006402100039000001aa0300004100000000003204350000004402100039000001ab030000410000000000320435000000240210003900000023030000390000000000320435000001a00200004100000000002104350000000402100039000000200300003900000000003204350000018802000041000001880310009c00000000010280190000004001100210000001a1011001c70000061b0001043000000006010000290000000802000029061905a80000040f000000400100043d000000070200002900000000002104350000018802000041000001880310009c000000000102801900000040011002100000019c011001c70000061a0001042e000000000331004900000005010000290000000802000029061905a80000040f000000400100043d000000060200002900000000002104350000018802000041000001880310009c000000000102801900000040011002100000019c011001c70000061a0001042e000700000002001d0000000000400435000000200000043f00000188010000410000000002000414000001880320009c0000000001024019000000c0011002100000019d011001c70000801002000039000800000004001d000600000005001d061906140000040f00000008030000290000000102200190000003080000613d000000000101043b000000000201041a0000000701000029000500000002001d000000000112004b000003d20000813d000000400100043d0000006402100039000001a80300004100000000003204350000004402100039000001a9030000410000000000320435000000240210003900000026030000390000000000320435000001a00200004100000000002104350000000402100039000000200300003900000000003204350000018802000041000001880310009c00000000010280190000004001100210000001a1011001c70000061b000104300000000000300435000000200000043f00000188010000410000000002000414000001880320009c0000000001024019000000c0011002100000019d011001c70000801002000039061906140000040f00000001022001900000000603000029000003080000613d000000070200002900000005040000290000000002240049000000000101043b000000000021041b000000000030043500000188010000410000000002000414000001880320009c0000000001024019000000c0011002100000019d011001c70000801002000039061906140000040f0000000102200190000003080000613d000000000101043b000000000301041a00000007020000290000000002230019000000000332004b0000000003000019000000010300403900000001033001900000020a0000c13d000000000021041b000000400100043d0000000702000029000000000021043500000188020000410000000003000414000001880430009c0000000003028019000001880410009c00000000010280190000004001100210000000c002300210000000000112019f0000018b011001c70000800d020000390000000303000039000001a304000041000000080500002900000006060000290619060f0000040f00000008030000290000000101200190000003080000613d00000000003004350000000101000039000600000001001d000000200010043f00000188010000410000000002000414000001880320009c0000000001024019000000c0011002100000019d011001c70000801002000039061906140000040f0000000102200190000003080000613d000000000101043b0000000002000411000500000002001d0000000000200435000000200010043f00000188010000410000000002000414000001880320009c0000000001024019000000c0011002100000019d011001c70000801002000039061906140000040f0000000102200190000003080000613d000000000101043b000000000101041a0000000702000029000000000221004b000004d00000813d000000400100043d0000006402100039000001a40300004100000000003204350000004402100039000001a5030000410000000000320435000000240210003900000028030000390000000000320435000001a00200004100000000002104350000000402100039000000200300003900000000003204350000018802000041000001880310009c00000000010280190000004001100210000001a1011001c70000061b000104300000000601000029000000000110004c00000000010000190000044c0000613d0000000401000029000000000101043300000006040000290000000302400210000000010300008a000000000223022f000000000232013f000000000221016f0000000101400210000000000112019f0000000302000029000000000012041b00000001010000290000000001010433000800000001001d000001890110009c000003620000213d0000000401000039000600000001001d000000000101041a000000010210019000000001021002700000007f0320018f0000000002036019000400000002001d0000001f0220008c00000000020000190000000102002039000000000121013f0000000101100190000003170000c13d0000000401000029000000200110008c000004890000413d0000000601000029000000000010043500000188010000410000000002000414000001880320009c0000000001024019000000c0011002100000018b011001c70000801002000039061906140000040f0000000102200190000003080000613d00000008030000290000001f023000390000000502200270000000200330008c0000000002004019000000000301043b00000004010000290000001f01100039000000050110027000000000011300190000000002230019000000000312004b000004890000813d000000000002041b0000000102200039000000000312004b000004850000413d00000008010000290000001f0110008c000004bb0000a13d0000000601000029000000000010043500000188010000410000000002000414000001880320009c0000000001024019000000c0011002100000018b011001c70000801002000039061906140000040f000000010220019000000005020000290000000106000029000003080000613d000000080300002900000000032301700000002002000039000000000101043b000004a90000613d0000002002000039000000000400001900000000056200190000000005050433000000000051041b000000200220003900000001011000390000002004400039000000000534004b000004a10000413d0000000804000029000000000343004b000004b70000813d00000008030000290000000303300210000000f80330018f000000010400008a000000000334022f000000000343013f000000010400002900000000024200190000000002020433000000000232016f000000000021041b000000010100003900000008020000290000000102200210000004c80000013d0000000801000029000000000110004c0000000001000019000004c10000613d0000000701000029000000000101043300000008040000290000000302400210000000010300008a000000000223022f000000000232013f000000000221016f0000000101400210000000000112019f0000000602000029000000000012041b0000002001000039000001000010044300000120000004430000018c010000410000061a0001042e0000000702000029000000000321004900000008010000290000000502000029061905a80000040f000000400100043d000000060200002900000000002104350000018802000041000001880310009c000000000102801900000040011002100000019c011001c70000061a0001042e0000018803000041000001880410009c00000000010380190000004001100210000001880420009c00000000020380190000006002200210000000000112019f0000000002000414000001880420009c0000000002038019000000c002200210000000000112019f000001b1011001c70000801002000039061906140000040f0000000102200190000004f20000613d000000000101043b000000000001042d00000000010000190000061b0001043000000020030000390000000004310436000000000302043300000000003404350000004001100039000000000430004c000005030000613d000000000400001900000000054100190000002004400039000000000624001900000000060604330000000000650435000000000534004b000004fc0000413d000000000231001900000000000204350000001f02300039000000200300008a000000000232016f0000000001210019000000000001042d00040000000000020000019b01100198000005630000613d000400000003001d0000019b02200198000200000002001d000005780000613d000300000001001d0000000000100435000000200000043f00000188010000410000000002000414000001880320009c0000000001024019000000c0011002100000019d011001c70000801002000039061906140000040f0000000102200190000005610000613d000000000101043b000000000201041a0000000401000029000100000002001d000000000112004b0000058d0000413d00000003010000290000000000100435000000200000043f00000188010000410000000002000414000001880320009c0000000001024019000000c0011002100000019d011001c70000801002000039061906140000040f0000000102200190000005610000613d000000040200002900000001030000290000000002230049000000000101043b000000000021041b0000000201000029000000000010043500000188010000410000000002000414000001880320009c0000000001024019000000c0011002100000019d011001c70000801002000039061906140000040f0000000102200190000005610000613d000000000101043b000000000301041a00000004040000290000000002430019000000000332004b000000000300001900000001030040390000000103300190000005a20000c13d000000000021041b000000400100043d000000000041043500000188020000410000000003000414000001880430009c0000000003028019000001880410009c00000000010280190000004001100210000000c002300210000000000112019f0000018b011001c70000800d020000390000000303000039000001a304000041000000030500002900000002060000290619060f0000040f0000000101200190000005610000613d000000000001042d00000000010000190000061b00010430000000400100043d0000006402100039000001ac0300004100000000003204350000004402100039000001ad030000410000000000320435000000240210003900000025030000390000000000320435000001a00200004100000000002104350000000402100039000000200300003900000000003204350000018802000041000001880310009c00000000010280190000004001100210000001a1011001c70000061b00010430000000400100043d0000006402100039000001aa0300004100000000003204350000004402100039000001ab030000410000000000320435000000240210003900000023030000390000000000320435000001a00200004100000000002104350000000402100039000000200300003900000000003204350000018802000041000001880310009c00000000010280190000004001100210000001a1011001c70000061b00010430000000400100043d0000006402100039000001a80300004100000000003204350000004402100039000001a9030000410000000000320435000000240210003900000026030000390000000000320435000001a00200004100000000002104350000000402100039000000200300003900000000003204350000018802000041000001880310009c00000000010280190000004001100210000001a1011001c70000061b00010430000001a60100004100000000001004350000001101000039000000040010043f000001a7010000410000061b0001043000030000000000020000019b01100198000005e50000613d000200000003001d0000019b02200198000300000002001d000005fa0000613d000100000001001d00000000001004350000000101000039000000200010043f00000188010000410000000002000414000001880320009c0000000001024019000000c0011002100000019d011001c70000801002000039061906140000040f00000001022001900000000304000029000005e30000613d000000000101043b0000000000400435000000200010043f00000188010000410000000002000414000001880320009c0000000001024019000000c0011002100000019d011001c70000801002000039061906140000040f00000003060000290000000102200190000005e30000613d000000000101043b0000000202000029000000000021041b000000400100043d000000000021043500000188020000410000000003000414000001880430009c0000000003028019000001880410009c00000000010280190000004001100210000000c002300210000000000112019f0000018b011001c70000800d020000390000000303000039000001b20400004100000001050000290619060f0000040f0000000101200190000005e30000613d000000000001042d00000000010000190000061b00010430000000400100043d0000006402100039000001b50300004100000000003204350000004402100039000001b6030000410000000000320435000000240210003900000024030000390000000000320435000001a00200004100000000002104350000000402100039000000200300003900000000003204350000018802000041000001880310009c00000000010280190000004001100210000001a1011001c70000061b00010430000000400100043d0000006402100039000001b30300004100000000003204350000004402100039000001b4030000410000000000320435000000240210003900000022030000390000000000320435000001a00200004100000000002104350000000402100039000000200300003900000000003204350000018802000041000001880310009c00000000010280190000004001100210000001a1011001c70000061b0001043000000612002104210000000102000039000000000001042d0000000002000019000000000001042d00000617002104230000000102000039000000000001042d0000000002000019000000000001042d00000619000004320000061a0001042e0000061b00010430000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffff000000000000000000000000000000000000000000000000ffffffffffffffff800000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000200000000000000000000000000000000200000000000000000000000000000040000001000000000000000000000000000000000000000000000000000000000000000000000000003950935000000000000000000000000000000000000000000000000000000000a457c2d600000000000000000000000000000000000000000000000000000000a457c2d700000000000000000000000000000000000000000000000000000000a9059cbb00000000000000000000000000000000000000000000000000000000dd62ed3e00000000000000000000000000000000000000000000000000000000395093510000000000000000000000000000000000000000000000000000000070a082310000000000000000000000000000000000000000000000000000000095d89b410000000000000000000000000000000000000000000000000000000018160ddc0000000000000000000000000000000000000000000000000000000018160ddd0000000000000000000000000000000000000000000000000000000023b872dd00000000000000000000000000000000000000000000000000000000313ce5670000000000000000000000000000000000000000000000000000000006fdde0300000000000000000000000000000000000000000000000000000000095ea7b3000000000000000000000000ffffffffffffffffffffffffffffffffffffffff00000000000000000000000000000000000000200000000000000000000000000200000000000000000000000000000000000040000000000000000000000000207a65726f00000000000000000000000000000000000000000000000000000045524332303a2064656372656173656420616c6c6f77616e63652062656c6f7708c379a00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000840000000000000000000000008a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19bddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6c6c6f77616e636500000000000000000000000000000000000000000000000045524332303a207472616e7366657220616d6f756e74206578636565647320614e487b71000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000024000000000000000000000000616c616e6365000000000000000000000000000000000000000000000000000045524332303a207472616e7366657220616d6f756e7420657863656564732062657373000000000000000000000000000000000000000000000000000000000045524332303a207472616e7366657220746f20746865207a65726f2061646472647265737300000000000000000000000000000000000000000000000000000045524332303a207472616e736665722066726f6d20746865207a65726f206164c2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85bffffffffffffffffffffffffffffffffffffffffffffffff0000000000000000ffffffffffffffffffffffffffffffffffffffffffffffff000000000000008002000000000000000000000000000000000000000000000000000000000000008c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925737300000000000000000000000000000000000000000000000000000000000045524332303a20617070726f766520746f20746865207a65726f206164647265726573730000000000000000000000000000000000000000000000000000000045524332303a20617070726f76652066726f6d20746865207a65726f206164640000000000000000000000000000000000000000000000000000000000000000392c3f927ec4c69984b5ee59f7a342ee4278ee898d1f04d3e06c729efb434e06"},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"irOptimized":"/// @use-src 0:\"contracts/GOAT.sol\"\nobject \"ERC20_766\" {\n    code {\n        {\n            /// @src 0:8475:19212  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n            mstore(64, memoryguard(0x80))\n            if callvalue() { revert(0, 0) }\n            let programSize := datasize(\"ERC20_766\")\n            let argSize := sub(codesize(), programSize)\n            let memoryDataOffset := allocate_memory(argSize)\n            codecopy(memoryDataOffset, programSize, argSize)\n            let _1 := add(memoryDataOffset, argSize)\n            if slt(sub(_1, memoryDataOffset), 64)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 0:8475:19212  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n            let offset := mload(memoryDataOffset)\n            let _2 := sub(shl(64, 1), 1)\n            if gt(offset, _2)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 0:8475:19212  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n            let value0 := abi_decode_string_fromMemory(add(memoryDataOffset, offset), _1)\n            let _3 := 32\n            let offset_1 := mload(add(memoryDataOffset, _3))\n            if gt(offset_1, _2)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 0:8475:19212  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n            let value1 := abi_decode_string_fromMemory(add(memoryDataOffset, offset_1), _1)\n            let newLen := mload(value0)\n            if gt(newLen, _2)\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 0:8475:19212  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 0:8475:19212  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ 0x24)\n            }\n            /// @src 0:9136:9149  \"_name = name_\"\n            let _4 := 0x03\n            /// @src 0:8475:19212  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n            let _5 := sload(/** @src 0:9136:9149  \"_name = name_\" */ _4)\n            /// @src 0:8475:19212  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n            let length := /** @src -1:-1:-1 */ 0\n            /// @src 0:8475:19212  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n            let _6 := 1\n            length := shr(_6, _5)\n            let outOfPlaceEncoding := and(_5, _6)\n            if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n            if eq(outOfPlaceEncoding, lt(length, _3))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 0:8475:19212  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x22)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 0:8475:19212  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ 0x24)\n            }\n            let _7 := 31\n            if gt(length, _7)\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 0:9136:9149  \"_name = name_\" */ _4)\n                /// @src 0:8475:19212  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                let data := keccak256(/** @src -1:-1:-1 */ 0, /** @src 0:8475:19212  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ _3)\n                let deleteStart := add(data, shr(5, add(newLen, _7)))\n                if lt(newLen, _3) { deleteStart := data }\n                let _8 := add(data, shr(5, add(length, _7)))\n                let start := deleteStart\n                for { } lt(start, _8) { start := add(start, _6) }\n                {\n                    sstore(start, /** @src -1:-1:-1 */ 0)\n                }\n            }\n            /// @src 0:8475:19212  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n            let srcOffset := /** @src -1:-1:-1 */ 0\n            /// @src 0:8475:19212  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n            srcOffset := _3\n            switch gt(newLen, _7)\n            case 1 {\n                let loopEnd := and(newLen, not(31))\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 0:9136:9149  \"_name = name_\" */ _4)\n                /// @src 0:8475:19212  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                let dstPtr := keccak256(/** @src -1:-1:-1 */ 0, /** @src 0:8475:19212  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ _3)\n                let i := /** @src -1:-1:-1 */ 0\n                /// @src 0:8475:19212  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                for { } lt(i, loopEnd) { i := add(i, _3) }\n                {\n                    sstore(dstPtr, mload(add(value0, srcOffset)))\n                    dstPtr := add(dstPtr, _6)\n                    srcOffset := add(srcOffset, _3)\n                }\n                if lt(loopEnd, newLen)\n                {\n                    let lastValue := mload(add(value0, srcOffset))\n                    sstore(dstPtr, and(lastValue, not(shr(and(shl(/** @src 0:9136:9149  \"_name = name_\" */ _4, /** @src 0:8475:19212  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ newLen), 248), not(0)))))\n                }\n                sstore(/** @src 0:9136:9149  \"_name = name_\" */ _4, /** @src 0:8475:19212  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ add(shl(_6, newLen), _6))\n            }\n            default {\n                let value := /** @src -1:-1:-1 */ 0\n                /// @src 0:8475:19212  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                if newLen\n                {\n                    value := mload(add(value0, srcOffset))\n                }\n                sstore(/** @src 0:9136:9149  \"_name = name_\" */ _4, /** @src 0:8475:19212  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ or(and(value, not(shr(shl(/** @src 0:9136:9149  \"_name = name_\" */ _4, /** @src 0:8475:19212  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ newLen), not(0)))), shl(_6, newLen)))\n            }\n            let newLen_1 := mload(value1)\n            if gt(newLen_1, _2)\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 0:8475:19212  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ shl(224, 0x4e487b71))\n                mstore(/** @src 0:9160:9177  \"_symbol = symbol_\" */ 0x04, /** @src 0:8475:19212  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 0:8475:19212  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ 0x24)\n            }\n            /// @src 0:9160:9177  \"_symbol = symbol_\"\n            let _9 := 0x04\n            /// @src 0:8475:19212  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n            let _10 := sload(/** @src 0:9160:9177  \"_symbol = symbol_\" */ _9)\n            /// @src 0:8475:19212  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n            let length_1 := /** @src -1:-1:-1 */ 0\n            /// @src 0:8475:19212  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n            length_1 := shr(_6, _10)\n            let outOfPlaceEncoding_1 := and(_10, _6)\n            if iszero(outOfPlaceEncoding_1)\n            {\n                length_1 := and(length_1, 0x7f)\n            }\n            if eq(outOfPlaceEncoding_1, lt(length_1, _3))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 0:8475:19212  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ shl(224, 0x4e487b71))\n                mstore(/** @src 0:9160:9177  \"_symbol = symbol_\" */ _9, /** @src 0:8475:19212  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ 0x22)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 0:8475:19212  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ 0x24)\n            }\n            if gt(length_1, _7)\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 0:9160:9177  \"_symbol = symbol_\" */ _9)\n                /// @src 0:8475:19212  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                let data_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 0:8475:19212  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ _3)\n                let deleteStart_1 := add(data_1, shr(5, add(newLen_1, _7)))\n                if lt(newLen_1, _3) { deleteStart_1 := data_1 }\n                let _11 := add(data_1, shr(5, add(length_1, _7)))\n                let start_1 := deleteStart_1\n                for { } lt(start_1, _11) { start_1 := add(start_1, _6) }\n                {\n                    sstore(start_1, /** @src -1:-1:-1 */ 0)\n                }\n            }\n            /// @src 0:8475:19212  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n            let srcOffset_1 := /** @src -1:-1:-1 */ 0\n            /// @src 0:8475:19212  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n            srcOffset_1 := _3\n            switch gt(newLen_1, _7)\n            case 1 {\n                let loopEnd_1 := and(newLen_1, not(31))\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 0:9160:9177  \"_symbol = symbol_\" */ _9)\n                /// @src 0:8475:19212  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                let dstPtr_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 0:8475:19212  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ _3)\n                let i_1 := /** @src -1:-1:-1 */ 0\n                /// @src 0:8475:19212  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                for { } lt(i_1, loopEnd_1) { i_1 := add(i_1, _3) }\n                {\n                    sstore(dstPtr_1, mload(add(value1, srcOffset_1)))\n                    dstPtr_1 := add(dstPtr_1, _6)\n                    srcOffset_1 := add(srcOffset_1, _3)\n                }\n                if lt(loopEnd_1, newLen_1)\n                {\n                    let lastValue_1 := mload(add(value1, srcOffset_1))\n                    sstore(dstPtr_1, and(lastValue_1, not(shr(and(shl(/** @src 0:9136:9149  \"_name = name_\" */ _4, /** @src 0:8475:19212  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ newLen_1), 248), not(0)))))\n                }\n                sstore(/** @src 0:9160:9177  \"_symbol = symbol_\" */ _9, /** @src 0:8475:19212  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ add(shl(_6, newLen_1), _6))\n            }\n            default {\n                let value_1 := /** @src -1:-1:-1 */ 0\n                /// @src 0:8475:19212  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                if newLen_1\n                {\n                    value_1 := mload(add(value1, srcOffset_1))\n                }\n                sstore(/** @src 0:9160:9177  \"_symbol = symbol_\" */ _9, /** @src 0:8475:19212  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ or(and(value_1, not(shr(shl(/** @src 0:9136:9149  \"_name = name_\" */ _4, /** @src 0:8475:19212  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ newLen_1), not(0)))), shl(_6, newLen_1)))\n            }\n            let _12 := mload(64)\n            let _13 := datasize(\"ERC20_766_deployed\")\n            codecopy(_12, dataoffset(\"ERC20_766_deployed\"), _13)\n            return(_12, _13)\n        }\n        function allocate_memory(size) -> memPtr\n        {\n            memPtr := mload(64)\n            let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n            if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr))\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(0, 0x24)\n            }\n            mstore(64, newFreePtr)\n        }\n        function abi_decode_string_fromMemory(offset, end) -> array\n        {\n            if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n            let _1 := mload(offset)\n            if gt(_1, sub(shl(64, 1), 1))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 0:8475:19212  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 0:8475:19212  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ 0x24)\n            }\n            let _2 := 0x20\n            let array_1 := allocate_memory(add(and(add(_1, 0x1f), not(31)), _2))\n            mstore(array_1, _1)\n            if gt(add(add(offset, _1), _2), end)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 0:8475:19212  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n            let i := /** @src -1:-1:-1 */ 0\n            /// @src 0:8475:19212  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n            for { } lt(i, _1) { i := add(i, _2) }\n            {\n                mstore(add(add(array_1, i), _2), mload(add(add(offset, i), _2)))\n            }\n            mstore(add(add(array_1, _1), _2), /** @src -1:-1:-1 */ 0)\n            /// @src 0:8475:19212  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n            array := array_1\n        }\n    }\n    /// @use-src 0:\"contracts/GOAT.sol\"\n    object \"ERC20_766_deployed\" {\n        code {\n            {\n                /// @src 0:8475:19212  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                let _1 := memoryguard(0x80)\n                let _2 := 64\n                mstore(_2, _1)\n                let _3 := 4\n                if iszero(lt(calldatasize(), _3))\n                {\n                    let _4 := 0\n                    switch shr(224, calldataload(_4))\n                    case 0x06fdde03 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        let ret := _4\n                        let slotValue := sload(/** @src 0:9342:9347  \"_name\" */ 0x03)\n                        /// @src 0:8475:19212  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                        let length := _4\n                        let _5 := 1\n                        length := shr(_5, slotValue)\n                        let outOfPlaceEncoding := and(slotValue, _5)\n                        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                        let _6 := 32\n                        if eq(outOfPlaceEncoding, lt(length, _6))\n                        {\n                            mstore(_4, shl(224, 0x4e487b71))\n                            mstore(_3, 0x22)\n                            revert(_4, 0x24)\n                        }\n                        mstore(_1, length)\n                        switch outOfPlaceEncoding\n                        case 0 {\n                            mstore(add(_1, _6), and(slotValue, not(255)))\n                            ret := add(add(_1, shl(5, iszero(iszero(length)))), _6)\n                        }\n                        case 1 {\n                            mstore(_4, /** @src 0:9342:9347  \"_name\" */ 0x03)\n                            /// @src 0:8475:19212  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                            let dataPos := 87903029871075914254377627908054574944891091886930582284385770809450030037083\n                            let i := _4\n                            for { } lt(i, length) { i := add(i, _6) }\n                            {\n                                mstore(add(add(_1, i), _6), sload(dataPos))\n                                dataPos := add(dataPos, _5)\n                            }\n                            ret := add(add(_1, i), _6)\n                        }\n                        let newFreePtr := add(_1, and(add(sub(ret, _1), 31), not(31)))\n                        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, _1))\n                        {\n                            mstore(_4, shl(224, 0x4e487b71))\n                            mstore(_3, 0x41)\n                            revert(_4, 0x24)\n                        }\n                        mstore(_2, newFreePtr)\n                        return(newFreePtr, sub(abi_encode_string(newFreePtr, _1), newFreePtr))\n                    }\n                    case 0x095ea7b3 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                        let value0 := abi_decode_address()\n                        /// @src 0:11554:11560  \"amount\"\n                        fun_approve(/** @src 0:799:809  \"msg.sender\" */ caller(), /** @src 0:11554:11560  \"amount\" */ value0, /** @src 0:8475:19212  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ calldataload(36))\n                        let memPos := mload(_2)\n                        mstore(memPos, 1)\n                        return(memPos, 32)\n                    }\n                    case 0x18160ddd {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        let _7 := sload(/** @src 0:10463:10475  \"_totalSupply\" */ 0x02)\n                        /// @src 0:8475:19212  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                        let memPos_1 := mload(_2)\n                        mstore(memPos_1, _7)\n                        return(memPos_1, 32)\n                    }\n                    case 0x23b872dd {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), 96) { revert(_4, _4) }\n                        let value0_1 := abi_decode_address()\n                        let value1 := abi_decode_address_4646()\n                        let value := calldataload(68)\n                        /// @src 0:12259:12265  \"amount\"\n                        fun_transfer(value0_1, value1, value)\n                        /// @src 0:8475:19212  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                        mstore(_4, and(value0_1, sub(shl(160, 1), 1)))\n                        mstore(32, 1)\n                        let dataSlot := keccak256(_4, _2)\n                        mstore(_4, /** @src 0:799:809  \"msg.sender\" */ caller())\n                        /// @src 0:8475:19212  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                        mstore(32, dataSlot)\n                        let _8 := sload(keccak256(_4, _2))\n                        if /** @src 0:12358:12384  \"currentAllowance >= amount\" */ lt(_8, value)\n                        /// @src 0:8475:19212  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                        {\n                            let memPtr := mload(_2)\n                            mstore(memPtr, shl(229, 4594637))\n                            mstore(add(memPtr, _3), 32)\n                            mstore(add(memPtr, 36), 40)\n                            mstore(add(memPtr, 68), \"ERC20: transfer amount exceeds a\")\n                            mstore(add(memPtr, 100), \"llowance\")\n                            revert(memPtr, 132)\n                        }\n                        /// @src 0:12496:12521  \"currentAllowance - amount\"\n                        fun_approve(value0_1, /** @src 0:799:809  \"msg.sender\" */ caller(), /** @src 0:8475:19212  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ sub(/** @src 0:12496:12521  \"currentAllowance - amount\" */ _8, value))\n                        /// @src 0:8475:19212  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                        let memPos_2 := mload(_2)\n                        mstore(memPos_2, 1)\n                        return(memPos_2, 32)\n                    }\n                    case 0x313ce567 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        let memPos_3 := mload(_2)\n                        mstore(memPos_3, /** @src 0:10300:10302  \"18\" */ 0x12)\n                        /// @src 0:8475:19212  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                        return(memPos_3, 32)\n                    }\n                    case 0x39509351 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                        let value0_2 := abi_decode_address()\n                        mstore(_4, /** @src 0:799:809  \"msg.sender\" */ caller())\n                        /// @src 0:8475:19212  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                        mstore(32, 1)\n                        let _9 := keccak256(_4, _2)\n                        mstore(_4, and(value0_2, sub(shl(160, 1), 1)))\n                        mstore(32, _9)\n                        /// @src 0:13111:13158  \"_allowances[_msgSender()][spender] + addedValue\"\n                        fun_approve(/** @src 0:799:809  \"msg.sender\" */ caller(), /** @src 0:13111:13158  \"_allowances[_msgSender()][spender] + addedValue\" */ value0_2, checked_add_uint256(/** @src 0:8475:19212  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ sload(keccak256(_4, _2)), calldataload(36)))\n                        let memPos_4 := mload(_2)\n                        mstore(memPos_4, 1)\n                        return(memPos_4, 32)\n                    }\n                    case 0x70a08231 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                        mstore(_4, and(abi_decode_address(), sub(shl(160, 1), 1)))\n                        mstore(32, _4)\n                        let _10 := sload(keccak256(_4, _2))\n                        let memPos_5 := mload(_2)\n                        mstore(memPos_5, _10)\n                        return(memPos_5, 32)\n                    }\n                    case 0x95d89b41 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        let memPtr_1 := mload(_2)\n                        let ret_1 := _4\n                        let slotValue_1 := sload(_3)\n                        let length_1 := _4\n                        let _11 := 1\n                        length_1 := shr(_11, slotValue_1)\n                        let outOfPlaceEncoding_1 := and(slotValue_1, _11)\n                        if iszero(outOfPlaceEncoding_1)\n                        {\n                            length_1 := and(length_1, 0x7f)\n                        }\n                        let _12 := 32\n                        if eq(outOfPlaceEncoding_1, lt(length_1, _12))\n                        {\n                            mstore(_4, shl(224, 0x4e487b71))\n                            mstore(_3, 0x22)\n                            revert(_4, 0x24)\n                        }\n                        mstore(memPtr_1, length_1)\n                        switch outOfPlaceEncoding_1\n                        case 0 {\n                            mstore(add(memPtr_1, _12), and(slotValue_1, not(255)))\n                            ret_1 := add(add(memPtr_1, shl(5, iszero(iszero(length_1)))), _12)\n                        }\n                        case 1 {\n                            mstore(_4, _3)\n                            let dataPos_1 := 62514009886607029107290561805838585334079798074568712924583230797734656856475\n                            let i_1 := _4\n                            for { } lt(i_1, length_1) { i_1 := add(i_1, _12) }\n                            {\n                                mstore(add(add(memPtr_1, i_1), _12), sload(dataPos_1))\n                                dataPos_1 := add(dataPos_1, _11)\n                            }\n                            ret_1 := add(add(memPtr_1, i_1), _12)\n                        }\n                        let newFreePtr_1 := add(memPtr_1, and(add(sub(ret_1, memPtr_1), 31), not(31)))\n                        if or(gt(newFreePtr_1, 0xffffffffffffffff), lt(newFreePtr_1, memPtr_1))\n                        {\n                            mstore(_4, shl(224, 0x4e487b71))\n                            mstore(_3, 0x41)\n                            revert(_4, 0x24)\n                        }\n                        mstore(_2, newFreePtr_1)\n                        return(newFreePtr_1, sub(abi_encode_string(newFreePtr_1, memPtr_1), newFreePtr_1))\n                    }\n                    case 0xa457c2d7 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                        let value0_3 := abi_decode_address()\n                        let value_1 := calldataload(36)\n                        mstore(_4, /** @src 0:799:809  \"msg.sender\" */ caller())\n                        /// @src 0:8475:19212  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                        mstore(32, 1)\n                        let _13 := keccak256(_4, _2)\n                        mstore(_4, and(value0_3, sub(shl(160, 1), 1)))\n                        mstore(32, _13)\n                        let _14 := sload(keccak256(_4, _2))\n                        if /** @src 0:13882:13917  \"currentAllowance >= subtractedValue\" */ lt(_14, value_1)\n                        /// @src 0:8475:19212  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                        {\n                            let memPtr_2 := mload(_2)\n                            mstore(memPtr_2, shl(229, 4594637))\n                            mstore(add(memPtr_2, _3), 32)\n                            mstore(add(memPtr_2, 36), 37)\n                            mstore(add(memPtr_2, 68), \"ERC20: decreased allowance below\")\n                            mstore(add(memPtr_2, 100), \" zero\")\n                            revert(memPtr_2, 132)\n                        }\n                        /// @src 0:14027:14061  \"currentAllowance - subtractedValue\"\n                        fun_approve(/** @src 0:799:809  \"msg.sender\" */ caller(), /** @src 0:14027:14061  \"currentAllowance - subtractedValue\" */ value0_3, /** @src 0:8475:19212  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ sub(/** @src 0:14027:14061  \"currentAllowance - subtractedValue\" */ _14, value_1))\n                        /// @src 0:8475:19212  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                        let memPos_6 := mload(_2)\n                        mstore(memPos_6, 1)\n                        return(memPos_6, 32)\n                    }\n                    case 0xa9059cbb {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                        let value0_4 := abi_decode_address()\n                        /// @src 0:11024:11030  \"amount\"\n                        fun_transfer(/** @src 0:799:809  \"msg.sender\" */ caller(), /** @src 0:11024:11030  \"amount\" */ value0_4, /** @src 0:8475:19212  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ calldataload(36))\n                        let memPos_7 := mload(_2)\n                        mstore(memPos_7, 1)\n                        return(memPos_7, 32)\n                    }\n                    case 0xdd62ed3e {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                        let value0_5 := abi_decode_address()\n                        let value1_1 := abi_decode_address_4646()\n                        let _15 := sub(shl(160, 1), 1)\n                        mstore(_4, and(value0_5, _15))\n                        mstore(32, /** @src 0:11240:11251  \"_allowances\" */ 0x01)\n                        /// @src 0:8475:19212  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                        let _16 := keccak256(_4, _2)\n                        mstore(_4, and(value1_1, _15))\n                        mstore(32, _16)\n                        let _17 := sload(keccak256(_4, _2))\n                        let memPos_8 := mload(_2)\n                        mstore(memPos_8, _17)\n                        return(memPos_8, 32)\n                    }\n                }\n                revert(0, 0)\n            }\n            function abi_encode_string(headStart, value0) -> tail\n            {\n                let _1 := 32\n                mstore(headStart, _1)\n                let length := mload(value0)\n                mstore(add(headStart, _1), length)\n                let i := 0\n                for { } lt(i, length) { i := add(i, _1) }\n                {\n                    mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n                }\n                mstore(add(add(headStart, length), 64), 0)\n                tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n            }\n            function abi_decode_address() -> value\n            {\n                value := calldataload(4)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function abi_decode_address_4646() -> value\n            {\n                value := calldataload(36)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function checked_add_uint256(x, y) -> sum\n            {\n                sum := add(x, y)\n                if gt(x, sum)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x11)\n                    revert(0, 0x24)\n                }\n            }\n            /// @ast-id 570 @src 0:14595:15328  \"function _transfer(...\"\n            function fun_transfer(var_sender, var_recipient, var_amount)\n            {\n                /// @src 0:8475:19212  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                let _1 := sub(shl(160, 1), 1)\n                let _2 := and(/** @src 0:14735:14755  \"sender != address(0)\" */ var_sender, /** @src 0:8475:19212  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ _1)\n                if /** @src 0:14735:14755  \"sender != address(0)\" */ iszero(/** @src 0:8475:19212  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ _2)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 37)\n                    mstore(add(memPtr, 68), \"ERC20: transfer from the zero ad\")\n                    mstore(add(memPtr, 100), \"dress\")\n                    revert(memPtr, 132)\n                }\n                let _3 := and(/** @src 0:14816:14839  \"recipient != address(0)\" */ var_recipient, /** @src 0:8475:19212  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ _1)\n                if /** @src 0:14816:14839  \"recipient != address(0)\" */ iszero(/** @src 0:8475:19212  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ _3)\n                {\n                    let memPtr_1 := mload(64)\n                    mstore(memPtr_1, shl(229, 4594637))\n                    mstore(add(memPtr_1, 4), 32)\n                    mstore(add(memPtr_1, 36), 35)\n                    mstore(add(memPtr_1, 68), \"ERC20: transfer to the zero addr\")\n                    mstore(add(memPtr_1, 100), \"ess\")\n                    revert(memPtr_1, 132)\n                }\n                /// @src 0:14753:14754  \"0\"\n                let _4 := 0x00\n                /// @src 0:8475:19212  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                mstore(/** @src 0:14753:14754  \"0\" */ _4, /** @src 0:8475:19212  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ _2)\n                mstore(0x20, /** @src 0:14753:14754  \"0\" */ _4)\n                /// @src 0:8475:19212  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                let _5 := sload(keccak256(/** @src 0:14753:14754  \"0\" */ _4, /** @src 0:8475:19212  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ 0x40))\n                if /** @src 0:15012:15035  \"senderBalance >= amount\" */ lt(_5, var_amount)\n                /// @src 0:8475:19212  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                {\n                    let memPtr_2 := mload(0x40)\n                    mstore(memPtr_2, shl(229, 4594637))\n                    mstore(add(memPtr_2, 4), 0x20)\n                    mstore(add(memPtr_2, 36), 38)\n                    mstore(add(memPtr_2, 68), \"ERC20: transfer amount exceeds b\")\n                    mstore(add(memPtr_2, 100), \"alance\")\n                    revert(memPtr_2, 132)\n                }\n                mstore(/** @src 0:14753:14754  \"0\" */ _4, /** @src 0:8475:19212  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ _2)\n                mstore(0x20, /** @src 0:14753:14754  \"0\" */ _4)\n                /// @src 0:8475:19212  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                sstore(keccak256(/** @src 0:14753:14754  \"0\" */ _4, /** @src 0:8475:19212  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ 0x40), sub(/** @src 0:15134:15156  \"senderBalance - amount\" */ _5, var_amount))\n                /// @src 0:8475:19212  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                mstore(/** @src 0:14753:14754  \"0\" */ _4, /** @src 0:8475:19212  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ _3)\n                let dataSlot := keccak256(/** @src 0:14753:14754  \"0\" */ _4, /** @src 0:8475:19212  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ 0x40)\n                sstore(dataSlot, /** @src 0:15178:15208  \"_balances[recipient] += amount\" */ checked_add_uint256(/** @src 0:8475:19212  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ sload(/** @src 0:15178:15208  \"_balances[recipient] += amount\" */ dataSlot), var_amount))\n                /// @src 0:15226:15261  \"Transfer(sender, recipient, amount)\"\n                let _6 := /** @src 0:8475:19212  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ mload(0x40)\n                mstore(_6, var_amount)\n                /// @src 0:15226:15261  \"Transfer(sender, recipient, amount)\"\n                log3(_6, /** @src 0:8475:19212  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ 0x20, /** @src 0:15226:15261  \"Transfer(sender, recipient, amount)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, _2, _3)\n            }\n            /// @ast-id 743 @src 0:17376:17756  \"function _approve(...\"\n            function fun_approve(var_owner, var_spender, var_amount)\n            {\n                /// @src 0:8475:19212  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                let _1 := sub(shl(160, 1), 1)\n                let _2 := and(/** @src 0:17512:17531  \"owner != address(0)\" */ var_owner, /** @src 0:8475:19212  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ _1)\n                if /** @src 0:17512:17531  \"owner != address(0)\" */ iszero(/** @src 0:8475:19212  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ _2)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 36)\n                    mstore(add(memPtr, 68), \"ERC20: approve from the zero add\")\n                    mstore(add(memPtr, 100), \"ress\")\n                    revert(memPtr, 132)\n                }\n                let _3 := and(/** @src 0:17591:17612  \"spender != address(0)\" */ var_spender, /** @src 0:8475:19212  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ _1)\n                if /** @src 0:17591:17612  \"spender != address(0)\" */ iszero(/** @src 0:8475:19212  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ _3)\n                {\n                    let memPtr_1 := mload(64)\n                    mstore(memPtr_1, shl(229, 4594637))\n                    mstore(add(memPtr_1, 4), 32)\n                    mstore(add(memPtr_1, 36), 34)\n                    mstore(add(memPtr_1, 68), \"ERC20: approve to the zero addre\")\n                    mstore(add(memPtr_1, 100), \"ss\")\n                    revert(memPtr_1, 132)\n                }\n                mstore(/** @src 0:17529:17530  \"0\" */ 0x00, /** @src 0:8475:19212  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ _2)\n                mstore(0x20, /** @src 0:17664:17675  \"_allowances\" */ 0x01)\n                /// @src 0:8475:19212  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                let _4 := keccak256(/** @src 0:17529:17530  \"0\" */ 0x00, /** @src 0:8475:19212  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ 0x40)\n                mstore(/** @src 0:17529:17530  \"0\" */ 0x00, /** @src 0:8475:19212  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ _3)\n                mstore(0x20, _4)\n                sstore(keccak256(/** @src 0:17529:17530  \"0\" */ 0x00, /** @src 0:8475:19212  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ 0x40), var_amount)\n                /// @src 0:17716:17748  \"Approval(owner, spender, amount)\"\n                let _5 := /** @src 0:8475:19212  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ mload(0x40)\n                mstore(_5, var_amount)\n                /// @src 0:17716:17748  \"Approval(owner, spender, amount)\"\n                log3(_5, /** @src 0:8475:19212  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ 0x20, /** @src 0:17716:17748  \"Approval(owner, spender, amount)\" */ 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925, _2, _3)\n            }\n        }\n        data \".metadata\" hex\"a26469706673582212206dfb0307b6b3913525891e049879fcb2b81b2f7e43dff3126918556a7b0fc9f564736f6c63430008110033\"\n    }\n}\n","hash":"010001b910eedca37c5a24fb149322b7067465ea73bdd8072743f73d40ab47f5","factoryDependencies":{}},"GOAT":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"airdropActive","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"amountAirdrop","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"amountPresale","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"amountSale","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32[]","name":"_merkles","type":"bytes32[]"},{"internalType":"address","name":"_caller","type":"address"}],"name":"canClaim","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"claimed","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"merkleRoot","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"ref_address","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"bytes32[]","name":"_merkleProof","type":"bytes32[]"}],"name":"mint","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"percentRefRewards","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pricePresale","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"priceSale","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"address","name":"_address","type":"address"}],"name":"regTeam","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_amountAirdrop","type":"uint256"},{"internalType":"uint256","name":"_amountPresale","type":"uint256"},{"internalType":"uint256","name":"_amountSale","type":"uint256"}],"name":"setAirdropSettings","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_newMerkleRoot","type":"bytes32"}],"name":"setMerkleRoot","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_pricePresale","type":"uint256"},{"internalType":"uint256","name":"_priceSale","type":"uint256"},{"internalType":"uint32","name":"_percentRefRewards","type":"uint32"}],"name":"setPriceSettings","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bool","name":"_setActive","type":"bool"}],"name":"setSaleActive","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"airdropActive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"amountAirdrop\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"amountPresale\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"amountSale\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"_merkles\",\"type\":\"bytes32[]\"},{\"internalType\":\"address\",\"name\":\"_caller\",\"type\":\"address\"}],\"name\":\"canClaim\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"claimed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"merkleRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"ref_address\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"_merkleProof\",\"type\":\"bytes32[]\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"percentRefRewards\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pricePresale\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceSale\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"regTeam\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amountAirdrop\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amountPresale\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amountSale\",\"type\":\"uint256\"}],\"name\":\"setAirdropSettings\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_newMerkleRoot\",\"type\":\"bytes32\"}],\"name\":\"setMerkleRoot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pricePresale\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_priceSale\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"_percentRefRewards\",\"type\":\"uint32\"}],\"name\":\"setPriceSettings\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_setActive\",\"type\":\"bool\"}],\"name\":\"setSaleActive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/GOAT.sol\":\"GOAT\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/GOAT.sol\":{\"keccak256\":\"0xd212a7218dda9314beb1acee64dd43de276c8fc3c1954e3289729c29335ab28a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2a1fbde35e381df058b97549629b2c48e5ebdae547854ccfad9dce6a1582ae82\",\"dweb:/ipfs/QmNSKUhA7AbpTA4iFvYhfqiMeTMquDt3yXwEuV8rBvBtLz\"]}},\"version\":1}","zk_version":"1.3.9"},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"GOAT.sol:GOAT\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tnop\tstack+=[9]\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r4\n\tptr.add\tr1, r4, stack[@ptr_return_data]\n\tptr.add\tr1, r0, stack[@ptr_calldata]\n\tand\t@CPI0_0[0], r3, stack[@calldatasize]\n\tadd\t0, r0, stack[@returndatasize]\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB0_1\n\tadd\tstack[@calldatasize], r0, r2\n\tsub.s!\t4, r2, r1\n\tjump.lt\t@.BB0_2\n\tptr.add\tstack[@ptr_calldata], r0, r3\n\tld\tr3, r1\n\tshr.s\t224, r1, r1\n\tsub.s!\t@CPI0_26[0], r1, r4\n\tjump.le\t@.BB0_56\n\tsub.s!\t@CPI0_27[0], r1, r2\n\tjump.gt\t@.BB0_89\n\tsub.s!\t@CPI0_39[0], r1, r2\n\tjump.gt\t@.BB0_84\n\tsub.s!\t@CPI0_45[0], r1, r2\n\tjump.gt\t@.BB0_82\n\tsub.s!\t@CPI0_48[0], r1, r2\n\tjump.eq\t@.BB0_261\n\tsub.s!\t@CPI0_49[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_71[0], r0, r2\n\tsub.s!\t0, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_71[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_71[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t8, r0, r1\n\tsload\tr1, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_76[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_1:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tld.1\t64, r4\n\tsub.s!\t@CPI0_1[0], r4, r1\n\tjump.ge\t@.BB0_4\n\tadd\t64, r4, r1\n\tst.1\t64, r1\n\tadd\t4, r0, r3\n\tst.1.inc\tr4, r3, r5\n\tadd\t@CPI0_2[0], r0, r1\n\tst.1\tr5, r1\n\tld.1\t64, r2\n\tsub.s!\t@CPI0_3[0], r2, r1\n\tjump.le\t@.BB0_6\n.BB0_4:\n\tadd\t@CPI0_93[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_94[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_56:\n\tsub.s!\t@CPI0_50[0], r1, r4\n\tjump.le\t@.BB0_57\n\tsub.s!\t@CPI0_51[0], r1, r4\n\tjump.gt\t@.BB0_72\n\tsub.s!\t@CPI0_57[0], r1, r4\n\tjump.gt\t@.BB0_70\n\tsub.s!\t@CPI0_60[0], r1, r2\n\tjump.eq\t@.BB0_147\n\tsub.s!\t@CPI0_61[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_71[0], r0, r2\n\tsub.s!\t32, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_71[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_71[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t4, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r3\n\tcontext.caller\tr2\n\tsub.s!\t0, r2, r1\n\tjump.ne\t@.BB0_158\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI0_98[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI0_99[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t33, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_74[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_75[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_89:\n\tsub.s!\t@CPI0_28[0], r1, r2\n\tjump.gt\t@.BB0_95\n\tsub.s!\t@CPI0_34[0], r1, r2\n\tjump.gt\t@.BB0_93\n\tsub.s!\t@CPI0_37[0], r1, r2\n\tjump.eq\t@.BB0_291\n\tsub.s!\t@CPI0_38[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_71[0], r0, r2\n\tsub.s!\t0, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_71[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_71[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t12, r0, r1\n\tsload\tr1, r1\n\tand!\t@CPI0_79[0], r1, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_76[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_6:\n\tadd\tr5, r0, stack-[7]\n\tadd\tr4, r0, stack-[6]\n\tadd\t64, r2, r1\n\tst.1\t64, r1\n\tadd\tr2, r0, stack-[9]\n\tadd\tr3, r0, stack-[8]\n\tst.1.inc\tr2, r3, r2\n\tadd\t@CPI0_2[0], r0, r1\n\tadd\tr2, r0, stack-[4]\n\tst.1\tr2, r1\n\tsload\tr0, r2\n\tand\t@CPI0_4[0], r2, r1\n\tcontext.caller\tr6\n\tor\tr1, r6, r1\n\tsstore\tr0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.lt\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_5[0], r1, r1\n\tand\t@CPI0_6[0], r2, r5\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_7[0], r0, r4\n\tadd\tr3, r0, stack-[5]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[6], r0, r1\n\tld.1\tr1, r6\n\tsub.s!\t@CPI0_8[0], r6, r1\n\tadd\tstack-[9], r0, r5\n\tadd\tstack-[8], r0, r4\n\tadd\tstack-[7], r0, r7\n\tjump.gt\t@.BB0_4\n\tsload\tr4, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r1\n\tand\t127, r1, r3\n\tadd.ne\tr1, r0, r3\n\tsub.s!\t31, r3, r1\n\tadd\t0, r0, r1\n\tadd.gt\t1, r0, r1\n\tand\t1, r1, r1\n\tsub!\tr2, r1, r1\n\tjump.eq\t@.BB0_10\n.BB0_9:\n\tadd\t@CPI0_93[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_94[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_57:\n\tsub.s!\t@CPI0_62[0], r1, r2\n\tjump.le\t@.BB0_58\n\tsub.s!\t@CPI0_63[0], r1, r2\n\tjump.gt\t@.BB0_64\n\tsub.s!\t@CPI0_66[0], r1, r2\n\tjump.eq\t@.BB0_117\n\tsub.s!\t@CPI0_67[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_71[0], r0, r2\n\tsub.s!\t0, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_71[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_71[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t11, r0, r1\n\tsload\tr1, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_76[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_84:\n\tsub.s!\t@CPI0_40[0], r1, r2\n\tjump.gt\t@.BB0_87\n\tsub.s!\t@CPI0_43[0], r1, r2\n\tjump.eq\t@.BB0_279\n\tsub.s!\t@CPI0_44[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_71[0], r0, r2\n\tsub.s!\t0, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_71[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_71[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t6, r0, r1\n\tsload\tr1, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_76[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_95:\n\tsub.s!\t@CPI0_29[0], r1, r2\n\tjump.gt\t@.BB0_98\n\tsub.s!\t@CPI0_32[0], r1, r2\n\tjump.eq\t@.BB0_315\n\tsub.s!\t@CPI0_33[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_71[0], r0, r2\n\tsub.s!\t32, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_71[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_71[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t4, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_6[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tst.1\t0, r1\n\tadd\t14, r0, r1\n\tst.1\t32, r1\n\tadd\t64, r0, r2\n\tadd\tr0, r0, r1\n\tnear_call\tr0, @__keccak256, @DEFAULT_UNWIND\n\tsload\tr1, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_76[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_72:\n\tsub.s!\t@CPI0_52[0], r1, r2\n\tjump.gt\t@.BB0_75\n\tsub.s!\t@CPI0_55[0], r1, r2\n\tjump.eq\t@.BB0_244\n\tsub.s!\t@CPI0_56[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_71[0], r0, r2\n\tsub.s!\t32, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_71[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_71[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsload\tr0, r1\n\tand\t@CPI0_6[0], r1, r1\n\tcontext.caller\tr2\n\tsub!\tr1, r2, r1\n\tadd\t0, r0, r1\n\tadd.eq\t1, r0, r1\n\tnear_call\tr0, @require_helper_stringliteral, @DEFAULT_UNWIND\n\tadd\t4, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tadd\t11, r0, r2\n\tsstore\tr2, r1\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_58:\n\tsub.s!\t@CPI0_68[0], r1, r2\n\tjump.eq\t@.BB0_100\n\tsub.s!\t@CPI0_69[0], r1, r2\n\tjump.eq\t@.BB0_110\n\tsub.s!\t@CPI0_70[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_71[0], r0, r2\n\tsub.s!\t0, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_71[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_71[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t3, r0, r1\n\tsload\tr1, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_76[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_64:\n\tsub.s!\t@CPI0_64[0], r1, r2\n\tjump.eq\t@.BB0_140\n\tsub.s!\t@CPI0_65[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_71[0], r0, r2\n\tsub.s!\t0, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_71[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_71[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tld.1\t64, r1\n\tadd\t18, r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_76[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_82:\n\tsub.s!\t@CPI0_46[0], r1, r2\n\tjump.eq\t@.BB0_268\n\tsub.s!\t@CPI0_47[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r3\n\tsub.s\t4, r3, r1\n\tadd\t@CPI0_71[0], r0, r2\n\tsub.s!\t64, r1, r4\n\tadd\t0, r0, r4\n\tadd.lt\tr2, r0, r4\n\tand\t@CPI0_71[0], r1, r1\n\tsub.s!\t0, r1, r5\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_71[0], r1, r1\n\tadd\tr4, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tptr.add\tstack[@ptr_calldata], r0, r4\n\tptr.add.s\t4, r4, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_8[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tadd\t35, r1, r2\n\tadd\t@CPI0_71[0], r0, r5\n\tsub!\tr2, r3, r6\n\tadd\t0, r0, r6\n\tadd.ge\tr5, r0, r6\n\tand\t@CPI0_71[0], r3, r7\n\tand\t@CPI0_71[0], r2, r2\n\tsub!\tr2, r7, r8\n\tadd.ge\t0, r0, r5\n\txor\tr2, r7, r2\n\tsub.s!\t@CPI0_71[0], r2, r2\n\tadd\tr6, r0, r2\n\tadd.eq\tr5, r0, r2\n\tsub.s!\t0, r2, r2\n\tjump.ne\t@.BB0_2\n\tadd\t4, r1, r2\n\tptr.add\tr4, r2, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_8[0], r2, r5\n\tjump.gt\t@.BB0_2\n\tadd\t36, r1, r1\n\tshl.s\t5, r2, r5\n\tadd\tr5, r1, r5\n\tsub!\tr5, r3, r3\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r4, r3\n\tld\tr3, r3\n\tsub.s!\t@CPI0_6[0], r3, r4\n\tjump.gt\t@.BB0_2\n\tnear_call\tr0, @fun_canClaim, @DEFAULT_UNWIND\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_76[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_70:\n\tsub.s!\t@CPI0_58[0], r1, r4\n\tjump.eq\t@.BB0_165\n\tsub.s!\t@CPI0_59[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_71[0], r0, r2\n\tsub.s!\t32, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_71[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_71[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t4, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_6[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tst.1\t32, r1\n\tadd\t64, r0, r2\n\tadd\tr0, r0, r1\n\tnear_call\tr0, @__keccak256, @DEFAULT_UNWIND\n\tsload\tr1, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_76[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_93:\n\tsub.s!\t@CPI0_35[0], r1, r2\n\tjump.eq\t@.BB0_303\n\tsub.s!\t@CPI0_36[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_71[0], r0, r2\n\tsub.s!\t64, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_71[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_71[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_6[0], r2, r3\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r1, r1\n\tld\tr1, r3\n\tcontext.caller\tr1\n\tnear_call\tr0, @fun_transfer, @DEFAULT_UNWIND\n\tadd\t1, r0, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_76[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_87:\n\tsub.s!\t@CPI0_41[0], r1, r2\n\tjump.eq\t@.BB0_285\n\tsub.s!\t@CPI0_42[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_71[0], r0, r2\n\tsub.s!\t0, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_71[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_71[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t7, r0, r1\n\tsload\tr1, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_76[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_98:\n\tsub.s!\t@CPI0_30[0], r1, r2\n\tjump.eq\t@.BB0_322\n\tsub.s!\t@CPI0_31[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_71[0], r0, r2\n\tsub.s!\t32, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_71[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_71[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t4, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r6\n\tsub.s!\t@CPI0_6[0], r6, r1\n\tjump.gt\t@.BB0_2\n\tsload\tr0, r1\n\tand\t@CPI0_6[0], r1, r2\n\tcontext.caller\tr5\n\tsub!\tr2, r5, r2\n\tjump.ne\t@.BB0_247\n\tsub.s!\t0, r6, r2\n\tjump.ne\t@.BB0_333\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI0_72[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI0_73[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t38, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_74[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_75[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_75:\n\tsub.s!\t@CPI0_53[0], r1, r2\n\tjump.eq\t@.BB0_252\n\tsub.s!\t@CPI0_54[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_71[0], r0, r2\n\tsub.s!\t0, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_71[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_71[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t10, r0, r1\n\tsload\tr1, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_76[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_117:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_71[0], r0, r2\n\tsub.s!\t96, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_71[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_71[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[9]\n\tsub.s!\t@CPI0_6[0], r2, r2\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[8]\n\tsub.s!\t@CPI0_6[0], r2, r2\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t68, r1, r1\n\tld\tr1, r2\n\tadd\tstack-[9], r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_123\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI0_107[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI0_108[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t37, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_74[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_75[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_140:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_71[0], r0, r2\n\tsub.s!\t96, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_71[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_71[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t68, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[9]\n\tsub.s!\t@CPI0_0[0], r1, r1\n\tjump.gt\t@.BB0_2\n\tsload\tr0, r1\n\tand\t@CPI0_6[0], r1, r1\n\tcontext.caller\tr2\n\tsub!\tr1, r2, r1\n\tadd\t0, r0, r1\n\tadd.eq\t1, r0, r1\n\tnear_call\tr0, @require_helper_stringliteral, @DEFAULT_UNWIND\n\tadd\t12, r0, r1\n\tsload\tr1, r2\n\tand\t@CPI0_100[0], r2, r2\n\tadd\tstack-[9], r0, r3\n\tor\tr2, r3, r2\n\tsstore\tr1, r2\n\tadd\t4, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tadd\t9, r0, r2\n\tsstore\tr2, r1\n\tadd\t36, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tadd\t10, r0, r2\n\tsstore\tr2, r1\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_261:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_71[0], r0, r2\n\tsub.s!\t32, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_71[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_71[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t4, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r2\n\tsub.s!\t0, r2, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tadd\tr2, r0, stack-[9]\n\tsub!\tr2, r1, r1\n\tjump.ne\t@.BB0_2\n\tsload\tr0, r1\n\tand\t@CPI0_6[0], r1, r1\n\tcontext.caller\tr2\n\tsub!\tr1, r2, r1\n\tadd\t0, r0, r1\n\tadd.eq\t1, r0, r1\n\tnear_call\tr0, @require_helper_stringliteral, @DEFAULT_UNWIND\n\tadd\t@CPI0_81[0], r0, r1\n\tadd\tstack-[9], r0, r2\n\tsub.s!\t0, r2, r2\n\tadd.eq\t0, r0, r1\n\tadd\t12, r0, r2\n\tsload\tr2, r3\n\tand\t@CPI0_82[0], r3, r3\n\tor\tr3, r1, r1\n\tsstore\tr2, r1\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_147:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_71[0], r0, r2\n\tsub.s!\t64, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_71[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_71[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t4, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[9]\n\tsub.s!\t@CPI0_6[0], r1, r1\n\tjump.gt\t@.BB0_2\n\tcontext.caller\tr1\n\tadd\tr1, r0, stack-[8]\n\tst.1\t0, r1\n\tadd\t2, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_21[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[9], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_21[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tadd\t36, r0, r2\n\tptr.add\tstack[@ptr_calldata], r2, r2\n\tld\tr2, r2\n\tadd\tr2, r1, r3\n\tsub!\tr3, r2, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_45\n\tadd\tstack-[8], r0, r1\n\tadd\tstack-[9], r0, r2\n\tnear_call\tr0, @fun_approve, @DEFAULT_UNWIND\n\tadd\t1, r0, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_76[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_291:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_71[0], r0, r2\n\tsub.s!\t0, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_71[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_71[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t5, r0, r4\n\tsload\tr4, r3\n\tand!\t1, r3, r5\n\tshr.s\t1, r3, r1\n\tand\t127, r1, r2\n\tadd\tr1, r0, r7\n\tadd.eq\tr2, r0, r7\n\tsub.s!\t31, r7, r2\n\tadd\t0, r0, r2\n\tadd.gt\t1, r0, r2\n\txor\tr3, r2, r2\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_9\n\tld.1\t64, r1\n\tst.1.inc\tr1, r7, r2\n\tsub.s!\t0, r5, r5\n\tjump.ne\t@.BB0_297\n\tsub.s\t256, r0, r4\n\tand\tr3, r4, r3\n\tst.1\tr2, r3\n\tsub.s!\t0, r7, r2\n\tadd\t32, r0, r3\n\tadd.eq\t0, r0, r3\n\tjump\t@.BB0_295\n.BB0_10:\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_14\n\tadd\tr3, r0, stack-[2]\n\tadd\tr6, r0, stack-[3]\n\tst.1\t0, r4\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[3], r0, r6\n\tadd\t31, r6, r2\n\tshr.s\t5, r2, r2\n\tsub.s!\t32, r6, r3\n\tadd.lt\t0, r0, r2\n\tld\tr1, r3\n\tadd\tstack-[2], r0, r1\n\tadd\t31, r1, r1\n\tshr.s\t5, r1, r1\n\tadd\tr3, r1, r1\n\tadd\tr3, r2, r2\n\tsub!\tr2, r1, r3\n\tadd\tstack-[9], r0, r5\n\tadd\tstack-[8], r0, r4\n\tadd\tstack-[7], r0, r7\n\tjump.ge\t@.BB0_14\n.BB0_15:\n\tsstore\tr2, r0\n\tadd\t1, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB0_15\n.BB0_14:\n\tsub.s!\t31, r6, r1\n\tjump.le\t@.BB0_24\n\tadd\tr6, r0, stack-[3]\n\tst.1\t0, r4\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tsub.s\t32, r0, r2\n\tadd\tstack-[3], r0, r7\n\tand!\tr7, r2, r3\n\tadd\t32, r0, r2\n\tld\tr1, r1\n\tadd\tstack-[6], r0, r6\n\tjump.eq\t@.BB0_21\n\tadd\t32, r0, r2\n\tadd\tr0, r0, r4\n.BB0_20:\n\tadd\tr2, r6, r5\n\tld.1\tr5, r5\n\tsstore\tr1, r5\n\tadd\t32, r2, r2\n\tadd\t1, r1, r1\n\tadd\t32, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB0_20\n.BB0_21:\n\tsub!\tr3, r7, r3\n\tadd\tstack-[9], r0, r5\n\tjump.ge\t@.BB0_23\n\tshl.s\t3, r7, r3\n\tand\t248, r3, r3\n\tsub.s\t1, r0, r4\n\tshr\tr4, r3, r3\n\txor\tr3, r4, r3\n\tadd\tr2, r6, r2\n\tld.1\tr2, r2\n\tand\tr2, r3, r2\n\tsstore\tr1, r2\n.BB0_23:\n\tadd\t1, r0, r1\n\tshl.s\t1, r7, r2\n\tadd\tstack-[8], r0, r4\n\tjump\t@.BB0_16\n.BB0_279:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_71[0], r0, r2\n\tsub.s!\t0, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_71[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_71[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t9, r0, r1\n\tsload\tr1, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_76[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_315:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_71[0], r0, r2\n\tsub.s!\t96, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_71[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_71[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsload\tr0, r1\n\tand\t@CPI0_6[0], r1, r1\n\tcontext.caller\tr2\n\tsub!\tr1, r2, r1\n\tadd\t0, r0, r1\n\tadd.eq\t1, r0, r1\n\tnear_call\tr0, @require_helper_stringliteral, @DEFAULT_UNWIND\n\tadd\t4, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tadd\t6, r0, r2\n\tsstore\tr2, r1\n\tadd\t36, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tadd\t7, r0, r2\n\tsstore\tr2, r1\n\tadd\t68, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tadd\t8, r0, r2\n\tsstore\tr2, r1\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_244:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_71[0], r0, r2\n\tsub.s!\t0, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_71[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_71[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsload\tr0, r1\n\tand\t@CPI0_6[0], r1, r2\n\tcontext.caller\tr5\n\tsub!\tr2, r5, r2\n\tjump.ne\t@.BB0_247\n\tand\t@CPI0_4[0], r1, r1\n\tsstore\tr0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_5[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_7[0], r0, r4\n\tadd\tr0, r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB0_164\n\tjump\t@.BB0_2\n.BB0_268:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_71[0], r0, r2\n\tsub.s!\t0, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_71[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_71[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsload\tr0, r1\n\tand\t@CPI0_6[0], r1, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_76[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_165:\n\tsub.s\t4, r2, r1\n\tadd\t@CPI0_71[0], r0, r4\n\tsub.s!\t96, r1, r5\n\tadd\t0, r0, r5\n\tadd.lt\tr4, r0, r5\n\tand\t@CPI0_71[0], r1, r1\n\tsub.s!\t0, r1, r6\n\tadd.le\t0, r0, r4\n\tsub.s!\t@CPI0_71[0], r1, r1\n\tadd\tr5, r0, r1\n\tadd.eq\tr4, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tptr.add.s\t4, r3, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[7]\n\tsub.s!\t@CPI0_6[0], r1, r1\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r3, r1\n\tld\tr1, r6\n\tptr.add.s\t68, r3, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_8[0], r1, r4\n\tjump.gt\t@.BB0_2\n\tadd\t35, r1, r4\n\tadd\t@CPI0_71[0], r0, r5\n\tsub!\tr4, r2, r7\n\tadd\t0, r0, r7\n\tadd.ge\tr5, r0, r7\n\tand\t@CPI0_71[0], r2, r8\n\tand\t@CPI0_71[0], r4, r4\n\tsub!\tr4, r8, r9\n\tadd.ge\t0, r0, r5\n\txor\tr4, r8, r4\n\tsub.s!\t@CPI0_71[0], r4, r4\n\tadd\tr7, r0, r4\n\tadd.eq\tr5, r0, r4\n\tsub.s!\t0, r4, r4\n\tjump.ne\t@.BB0_2\n\tadd\t4, r1, r4\n\tptr.add\tr3, r4, r3\n\tld\tr3, r4\n\tsub.s!\t@CPI0_8[0], r4, r3\n\tjump.gt\t@.BB0_2\n\tadd\t36, r1, r1\n\tshl.s\t5, r4, r5\n\tadd\tr5, r1, r3\n\tsub!\tr3, r2, r2\n\tjump.gt\t@.BB0_2\n\tmul\t@CPI0_85[0], r6, r7, r2\n\tsub.s!\t0, r6, r2\n\tjump.eq\t@.BB0_173\n\tdiv\tr7, r6, r2, r6\n\tsub.s!\t@CPI0_85[0], r2, r2\n\tjump.ne\t@.BB0_45\n.BB0_173:\n\tadd\t12, r0, r6\n\tsload\tr6, r2\n\tand!\t@CPI0_79[0], r2, r2\n\tjump.ne\t@.BB0_175\n\tadd\t@CPI0_74[0], r0, r1\n\tst.1\t128, r1\n\tadd\t32, r0, r1\n\tst.1\t132, r1\n\tadd\t13, r0, r1\n\tst.1\t164, r1\n\tadd\t@CPI0_95[0], r0, r1\n\tst.1\t196, r1\n\tadd\t@CPI0_87[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_303:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_71[0], r0, r2\n\tsub.s!\t64, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_71[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_71[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[9]\n\tsub.s!\t@CPI0_6[0], r2, r2\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r1, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[8]\n\tcontext.caller\tr1\n\tadd\tr1, r0, stack-[7]\n\tst.1\t0, r1\n\tadd\t2, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_21[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[9], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_21[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tadd\tstack-[8], r0, r3\n\tsub!\tr1, r3, r2\n\tjump.ge\t@.BB0_310\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI0_77[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI0_78[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t37, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_74[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_75[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_285:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_71[0], r0, r2\n\tsub.s!\t0, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_71[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_71[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t12, r0, r1\n\tsload\tr1, r1\n\tand\t@CPI0_0[0], r1, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_76[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_322:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_71[0], r0, r2\n\tsub.s!\t64, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_71[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_71[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tptr.add\tstack[@ptr_calldata], r0, r2\n\tptr.add.s\t4, r2, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_6[0], r1, r3\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r2, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[9]\n\tsub.s!\t@CPI0_6[0], r2, r2\n\tjump.gt\t@.BB0_2\n\tst.1\t0, r1\n\tadd\t2, r0, r1\n\tst.1\t32, r1\n\tadd\t64, r0, r2\n\tadd\tr2, r0, stack-[8]\n\tadd\tr0, r0, r1\n\tnear_call\tr0, @__keccak256, @DEFAULT_UNWIND\n\tadd\tstack-[9], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\tr0, r0, r1\n\tadd\tstack-[8], r0, r2\n\tnear_call\tr0, @__keccak256, @DEFAULT_UNWIND\n\tsload\tr1, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_76[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_252:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_71[0], r0, r2\n\tsub.s!\t64, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_71[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_71[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r3\n\tptr.add.s\t36, r1, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[9]\n\tsub.s!\t@CPI0_6[0], r1, r1\n\tjump.gt\t@.BB0_2\n\tsload\tr0, r1\n\tand\t@CPI0_6[0], r1, r1\n\tcontext.caller\tr2\n\tsub!\tr1, r2, r1\n\tjump.ne\t@.BB0_247\n\tadd\t3, r0, r1\n\tsload\tr1, r2\n\tadd\tr2, r3, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_45\n\tadd\t13, r0, r2\n\tsload\tr2, r2\n\tsub!\tr1, r2, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tadd\tr3, r0, stack-[8]\n\tnear_call\tr0, @require_helper_stringliteral_92c8, @DEFAULT_UNWIND\n\tadd\tstack-[9], r0, r1\n\tadd\tstack-[8], r0, r2\n\tnear_call\tr0, @fun_mint, @DEFAULT_UNWIND\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_110:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_71[0], r0, r2\n\tsub.s!\t64, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_71[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_71[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_6[0], r2, r3\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r1, r1\n\tld\tr1, r3\n\tcontext.caller\tr1\n\tnear_call\tr0, @fun_approve, @DEFAULT_UNWIND\n\tadd\t1, r0, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_76[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_100:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_71[0], r0, r2\n\tsub.s!\t0, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_71[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_71[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t4, r0, r3\n\tsload\tr3, r2\n\tand!\t1, r2, r4\n\tshr.s\t1, r2, r1\n\tand\t127, r1, r5\n\tadd.eq\tr5, r0, r1\n\tsub.s!\t31, r1, r5\n\tadd\t0, r0, r5\n\tadd.gt\t1, r0, r5\n\txor\tr2, r5, r5\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB0_9\n\tst.1\t128, r1\n\tsub.s!\t0, r4, r4\n\tjump.ne\t@.BB0_106\n\tsub.s\t256, r0, r3\n\tand\tr2, r3, r2\n\tst.1\t160, r2\n\tsub.s!\t0, r1, r1\n\tadd\t192, r0, r2\n\tadd.eq\t160, r0, r2\n\tjump\t@.BB0_104\n.BB0_24:\n\tsub.s!\t0, r6, r1\n\tadd\tr0, r0, r1\n\tjump.eq\t@.BB0_26\n\tld.1\tr7, r1\n.BB0_26:\n\tshl.s\t3, r6, r2\n\tsub.s\t1, r0, r3\n\tshr\tr3, r2, r2\n\txor\tr2, r3, r2\n\tand\tr1, r2, r2\n\tshl.s\t1, r6, r1\n.BB0_16:\n\tor\tr2, r1, r1\n\tsstore\tr4, r1\n\tld.1\tr5, r5\n\tsub.s!\t@CPI0_8[0], r5, r1\n\tjump.gt\t@.BB0_4\n\tadd\t5, r0, r4\n\tsload\tr4, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r2\n\tand\t127, r2, r3\n\tadd.ne\tr2, r0, r3\n\tsub.s!\t31, r3, r2\n\tadd\t0, r0, r2\n\tadd.gt\t1, r0, r2\n\txor\tr1, r2, r1\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_9\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_32\n\tadd\tr3, r0, stack-[6]\n\tadd\tr5, r0, stack-[7]\n\tadd\tr4, r0, stack-[8]\n\tst.1\t0, r4\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[7], r0, r5\n\tadd\t31, r5, r2\n\tshr.s\t5, r2, r2\n\tsub.s!\t32, r5, r3\n\tadd.lt\t0, r0, r2\n\tld\tr1, r3\n\tadd\tstack-[6], r0, r1\n\tadd\t31, r1, r1\n\tshr.s\t5, r1, r1\n\tadd\tr3, r1, r1\n\tadd\tr3, r2, r2\n\tsub!\tr2, r1, r3\n\tadd\tstack-[8], r0, r4\n\tjump.ge\t@.BB0_32\n.BB0_33:\n\tsstore\tr2, r0\n\tadd\t1, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB0_33\n.BB0_32:\n\tsub.s!\t31, r5, r1\n\tjump.le\t@.BB0_42\n\tadd\tr5, r0, stack-[7]\n\tadd\tr4, r0, stack-[8]\n\tst.1\t0, r4\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tsub.s\t32, r0, r2\n\tadd\tstack-[7], r0, r7\n\tand!\tr7, r2, r3\n\tadd\t32, r0, r2\n\tld\tr1, r1\n\tadd\tstack-[9], r0, r6\n\tjump.eq\t@.BB0_39\n\tadd\t32, r0, r2\n\tadd\tr0, r0, r4\n.BB0_38:\n\tadd\tr2, r6, r5\n\tld.1\tr5, r5\n\tsstore\tr1, r5\n\tadd\t32, r2, r2\n\tadd\t1, r1, r1\n\tadd\t32, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB0_38\n.BB0_39:\n\tsub!\tr3, r7, r3\n\tjump.ge\t@.BB0_41\n\tshl.s\t3, r7, r3\n\tand\t248, r3, r3\n\tsub.s\t1, r0, r4\n\tshr\tr4, r3, r3\n\txor\tr3, r4, r3\n\tadd\tr2, r6, r2\n\tld.1\tr2, r2\n\tand\tr2, r3, r2\n\tsstore\tr1, r2\n.BB0_41:\n\tadd\t1, r0, r1\n\tshl.s\t1, r7, r2\n\tadd\tstack-[8], r0, r4\n\tjump\t@.BB0_34\n.BB0_247:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI0_83[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_74[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t36, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t4, r1, r2\n\tst.1\tr2, r3\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_84[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_158:\n\tadd\tr3, r0, stack-[9]\n\tadd\tr2, r0, stack-[8]\n\tst.1\t0, r2\n\tadd\t1, r0, r1\n\tadd\tr1, r0, stack-[7]\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_21[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tstack-[9], r0, r1\n\tsub!\tr2, r1, r1\n\tjump.ge\t@.BB0_161\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI0_96[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI0_97[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t34, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_74[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_75[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_297:\n\tst.1\t0, r4\n\tsub.s!\t0, r7, r3\n\tadd\tr0, r0, r3\n\tjump.eq\t@.BB0_295\n\tadd\t@CPI0_80[0], r0, r4\n\tadd\tr0, r0, r3\n.BB0_299:\n\tadd\tr2, r3, r5\n\tsload\tr4, r6\n\tst.1\tr5, r6\n\tadd\t1, r4, r4\n\tadd\t32, r3, r3\n\tsub!\tr3, r7, r5\n\tjump.lt\t@.BB0_299\n.BB0_295:\n\tadd\t32, r3, r2\n\tadd\tr1, r0, stack-[9]\n\tnear_call\tr0, @finalize_allocation, @DEFAULT_UNWIND\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[8]\n\tadd\tstack-[9], r0, r2\n\tnear_call\tr0, @abi_encode_string, @DEFAULT_UNWIND\n\tadd\tstack-[8], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_106:\n\tst.1\t0, r3\n\tadd\t160, r0, r2\n\tsub.s!\t0, r1, r3\n\tjump.eq\t@.BB0_104\n\tadd\t@CPI0_109[0], r0, r2\n\tadd\tr0, r0, r4\n.BB0_108:\n\tadd\tr4, r0, r3\n\tsload\tr2, r4\n\tadd\t160, r3, r5\n\tst.1\tr5, r4\n\tadd\t1, r2, r2\n\tadd\t32, r3, r4\n\tsub!\tr4, r1, r5\n\tjump.lt\t@.BB0_108\n\tadd\t192, r3, r2\n.BB0_104:\n\tsub.s\t128, r2, r2\n\tadd\t128, r0, r1\n\tadd\tr1, r0, stack-[9]\n\tnear_call\tr0, @finalize_allocation, @DEFAULT_UNWIND\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[8]\n\tadd\tstack-[9], r0, r2\n\tnear_call\tr0, @abi_encode_string, @DEFAULT_UNWIND\n\tadd\tstack-[8], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_42:\n\tsub.s!\t0, r5, r1\n\tadd\tr0, r0, r1\n\tjump.eq\t@.BB0_44\n\tadd\tstack-[4], r0, r1\n\tld.1\tr1, r1\n.BB0_44:\n\tshl.s\t3, r5, r2\n\tsub.s\t1, r0, r3\n\tshr\tr3, r2, r2\n\txor\tr2, r3, r2\n\tand\tr1, r2, r2\n\tshl.s\t1, r5, r1\n.BB0_34:\n\tor\tr2, r1, r1\n\tsstore\tr4, r1\n\tadd\t@CPI0_10[0], r0, r1\n\tadd\t6, r0, r2\n\tsstore\tr2, r1\n\tadd\t@CPI0_11[0], r0, r1\n\tadd\t7, r0, r2\n\tsstore\tr2, r1\n\tadd\t@CPI0_12[0], r0, r1\n\tadd\t8, r0, r2\n\tsstore\tr2, r1\n\tadd\t@CPI0_13[0], r0, r1\n\tadd\t9, r0, r2\n\tsstore\tr2, r1\n\tadd\t@CPI0_14[0], r0, r1\n\tadd\t10, r0, r2\n\tsstore\tr2, r1\n\tadd\t12, r0, r1\n\tsload\tr1, r2\n\tand\t@CPI0_15[0], r2, r2\n\tor\t@CPI0_16[0], r2, r2\n\tsstore\tr1, r2\n\tadd\t@CPI0_17[0], r0, r1\n\tadd\t13, r0, r2\n\tsstore\tr2, r1\n\tadd\tstack-[5], r0, r3\n\tsload\tr3, r1\n\tsub.s!\t@CPI0_18[0], r1, r2\n\tjump.le\t@.BB0_46\n.BB0_45:\n\tadd\t@CPI0_93[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_94[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_46:\n\tadd\t@CPI0_19[0], r1, r1\n\tsstore\tr3, r1\n\tadd\t@CPI0_20[0], r0, r1\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tadd\tr1, r0, stack-[9]\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_21[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub.s!\t@CPI0_18[0], r2, r3\n\tjump.gt\t@.BB0_45\n\tadd\t@CPI0_19[0], r2, r2\n\tsstore\tr1, r2\n\tadd\t@CPI0_19[0], r0, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_22[0], r0, r4\n\tadd\t@CPI0_20[0], r0, r6\n\tadd\tr3, r0, stack-[8]\n\tadd\tr0, r0, r5\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[8], r0, r1\n\tsload\tr1, r1\n\tsub.s!\t@CPI0_23[0], r1, r2\n\tjump.gt\t@.BB0_45\n\tadd\t@CPI0_24[0], r1, r1\n\tadd\tstack-[8], r0, r2\n\tsstore\tr2, r1\n\tadd\t@CPI0_20[0], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[9], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_21[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub.s!\t@CPI0_23[0], r2, r3\n\tjump.gt\t@.BB0_45\n\tadd\t@CPI0_24[0], r2, r2\n\tsstore\tr1, r2\n\tadd\t@CPI0_24[0], r0, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr1, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_22[0], r0, r4\n\tadd\t@CPI0_20[0], r0, r6\n\tadd\tr0, r0, r5\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_25[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_333:\n\tand\t@CPI0_4[0], r1, r1\n\tor\tr1, r6, r1\n\tsstore\tr0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_5[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_7[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB0_164\n\tjump\t@.BB0_2\n.BB0_123:\n\tadd\tstack-[8], r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_125\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI0_105[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI0_106[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t35, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_74[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_75[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_161:\n\tadd\tr2, r0, stack-[6]\n\tadd\tstack-[8], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[7], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_21[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[9], r0, r4\n\tadd\tstack-[6], r0, r2\n\tsub\tr2, r4, r2\n\tld\tr1, r1\n\tsstore\tr1, r2\n\tadd\t3, r0, r3\n\tsload\tr3, r1\n\tsub!\tr1, r4, r2\n\tjump.lt\t@.BB0_45\n\tsub\tr1, r4, r1\n\tsstore\tr3, r1\n\tld.1\t64, r1\n\tst.1\tr1, r4\n\tadd\t@CPI0_0[0], r0, r2\n\tcontext.gas_left\tr4\n\tsub.s!\t@CPI0_0[0], r4, r5\n\tadd.ge\tr2, r0, r4\n\tsub.s!\t@CPI0_0[0], r1, r5\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r4, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t@CPI0_22[0], r0, r4\n\tadd\tstack-[8], r0, r5\n\tadd\tr0, r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n.BB0_164:\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_310:\n\tsub\tr1, r3, r3\n\tadd\tstack-[7], r0, r1\n\tadd\tstack-[9], r0, r2\n\tnear_call\tr0, @fun_approve, @DEFAULT_UNWIND\n\tadd\t1, r0, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_76[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_125:\n\tadd\tr2, r0, stack-[7]\n\tadd\tstack-[9], r0, r1\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tadd\tr1, r0, stack-[6]\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_21[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tstack-[7], r0, r1\n\tadd\tr2, r0, stack-[5]\n\tsub!\tr2, r1, r1\n\tjump.ge\t@.BB0_128\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI0_103[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI0_104[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t38, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_74[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_75[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_175:\n\tadd\tr6, r0, stack-[5]\n\tadd\t3, r0, r2\n\tadd\tr2, r0, stack-[6]\n\tsload\tr2, r6\n\tadd\tr6, r7, r2\n\tsub!\tr2, r6, r6\n\tadd\t0, r0, r6\n\tadd.lt\t1, r0, r6\n\tand!\t1, r6, r6\n\tjump.ne\t@.BB0_45\n\tadd\tr7, r0, stack-[4]\n\tadd\t13, r0, r6\n\tsload\tr6, r6\n\tsub!\tr2, r6, r2\n\tjump.ge\t@.BB0_177\n\tcontext.caller\tr2\n\tadd\tr2, r0, stack-[3]\n\tshl.s\t96, r2, r2\n\tst.1\t160, r2\n\tadd\t20, r0, r2\n\tst.1\t128, r2\n\tadd\t192, r0, r2\n\tst.1\t64, r2\n\tadd\t255, r5, r5\n\tsub.s\t32, r0, r6\n\tadd\tr6, r0, stack-[2]\n\tand\tr5, r6, r5\n\tsub.s!\t@CPI0_8[0], r5, r6\n\tjump.gt\t@.BB0_4\n\tadd\tstack[@calldatasize], r0, r6\n\tst.1\t64, r5\n\tst.1\t192, r4\n\tsub!\tr3, r6, r5\n\tjump.gt\t@.BB0_2\n\tsub.s!\t0, r4, r4\n\tjump.eq\t@.BB0_183\n.BB0_182:\n\tptr.add\tstack[@ptr_calldata], r1, r4\n\tld\tr4, r4\n\tadd\t32, r2, r2\n\tst.1\tr2, r4\n\tadd\t32, r1, r1\n\tsub!\tr1, r3, r4\n\tjump.lt\t@.BB0_182\n.BB0_183:\n\tadd\t11, r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[1]\n\tld.1\t128, r1\n\tadd\t@CPI0_0[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t96, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr1, r2, r1\n\tor\t@CPI0_88[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tld.1\t192, r2\n\tsub.s!\t0, r2, r2\n\tjump.ne\t@.BB0_185\n.BB0_190:\n\tadd\tstack-[1], r0, r2\n\tsub!\tr1, r2, r1\n\tjump.ne\t@.BB0_191\n\tadd\tstack-[3], r0, r1\n\tst.1\t0, r1\n\tadd\t14, r0, r1\n\tadd\tr1, r0, stack-[9]\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_21[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tstack-[4], r0, r1\n\tadd\tr2, r1, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_45\n\tadd\t6, r0, r2\n\tsload\tr2, r2\n\tadd\tr2, r0, stack-[8]\n\tsub!\tr1, r2, r1\n\tjump.le\t@.BB0_209\n\tadd\tstack-[3], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[9], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_21[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tstack-[4], r0, r1\n\tadd\tr2, r1, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_45\n\tadd\t7, r0, r2\n\tsload\tr2, r3\n\tadd\tstack-[8], r0, r2\n\tadd\tr3, r2, r2\n\tsub!\tr2, r3, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB0_45\n\tadd\t8, r0, r3\n\tsload\tr3, r3\n\tadd\tr3, r2, r2\n\tsub!\tr2, r3, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB0_45\n\tsub!\tr1, r2, r1\n\tjump.le\t@.BB0_202\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI0_92[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t5, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_74[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_84[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_128:\n\tadd\tstack-[9], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[6], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_21[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[7], r0, r2\n\tadd\tstack-[5], r0, r3\n\tsub\tr3, r2, r2\n\tld\tr1, r1\n\tsstore\tr1, r2\n\tadd\tstack-[8], r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_21[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r3\n\tadd\tstack-[7], r0, r2\n\tadd\tr3, r2, r2\n\tsub!\tr2, r3, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB0_45\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tadd\tstack-[7], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_22[0], r0, r4\n\tadd\tstack-[9], r0, r5\n\tadd\tstack-[8], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[9], r0, r1\n\tst.1\t0, r1\n\tadd\t2, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_21[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tcontext.caller\tr2\n\tadd\tr2, r0, stack-[8]\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_21[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tadd\tstack-[7], r0, r2\n\tsub!\tr1, r2, r2\n\tjump.ge\t@.BB0_136\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI0_101[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI0_102[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t40, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_74[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_75[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_177:\n\tadd\t@CPI0_74[0], r0, r1\n\tst.1\t128, r1\n\tadd\t32, r0, r1\n\tst.1\t132, r1\n\tadd\t9, r0, r1\n\tst.1\t164, r1\n\tadd\t@CPI0_86[0], r0, r1\n\tst.1\t196, r1\n\tadd\t@CPI0_87[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_185:\n\tadd\t32784, r0, r2\n\tadd\tr2, r0, stack-[8]\n\tadd\tr0, r0, r3\n\tjump\t@.BB0_186\n.BB0_188:\n\tst.1\t0, r1\n\tst.1\t32, r2\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_21[0], r1, r1\n\tadd\tstack-[8], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n.BB0_189:\n\tld\tr1, r1\n\tadd\tstack-[9], r0, r3\n\tadd\t1, r3, r3\n\tld.1\t192, r2\n\tsub!\tr3, r2, r2\n\tjump.ge\t@.BB0_190\n.BB0_186:\n\tadd\tr3, r0, stack-[9]\n\tshl.s\t5, r3, r2\n\tadd\t224, r2, r2\n\tld.1\tr2, r2\n\tsub!\tr1, r2, r3\n\tjump.lt\t@.BB0_188\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_21[0], r1, r1\n\tadd\tstack-[8], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_189\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_191:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI0_89[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t14, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_74[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_84[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_136:\n\tadd\tstack-[7], r0, r2\n\tsub\tr1, r2, r3\n\tadd\tstack-[9], r0, r1\n\tadd\tstack-[8], r0, r2\n\tnear_call\tr0, @fun_approve, @DEFAULT_UNWIND\n\tld.1\t64, r1\n\tadd\tstack-[6], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_76[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_209:\n\tcontext.get_context_u128\tr1\n.BB0_211:\n\tcontext.gas_left\tr1\n\tsload\tr0, r2\n\tcontext.get_context_u128\tr3\n\tand\t@CPI0_6[0], r2, r4\n\tsub.s!\t4, r4, r2\n\tjump.ne\t@.BB0_212\n\tadd\tstack[@returndatasize], r0, r2\n\tjump\t@.BB0_214\n.BB0_212:\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r5\n\tadd.ge\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tsub.s!\t0, r3, r2\n\tjump.ne\t@.BB0_216\n\tadd\tr4, r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r2\n\tshr.s\t96, r2, r2\n\tand\t@CPI0_0[0], r2, stack[@returndatasize]\n\tand\t@CPI0_0[0], r2, r2\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tjump\t@.BB0_214\n.BB0_216:\n\tor\t@CPI0_5[0], r1, r1\n\tadd\t32777, r0, r2\n\tadd\tr0, r0, r5\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r2\n\tshr.s\t96, r2, r2\n\tand\t@CPI0_0[0], r2, stack[@returndatasize]\n\tand\t@CPI0_0[0], r2, r2\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n.BB0_214:\n\tsub.s!\t0, r2, r1\n\tjump.ne\t@.BB0_227\n.BB0_217:\n\tadd\tstack-[3], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[9], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_21[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tadd\tstack-[4], r0, r2\n\tadd\tr1, r2, r2\n\tadd\tr2, r0, stack-[8]\n\tsub!\tr2, r1, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_45\n\tadd\tstack-[3], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[9], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_21[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[8], r0, r2\n\tsstore\tr1, r2\n\tadd\tstack-[3], r0, r1\n\tand!\t@CPI0_6[0], r1, r1\n\tadd\tr1, r0, stack-[9]\n\tjump.ne\t@.BB0_222\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI0_90[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t31, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_74[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_84[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_227:\n\tsub.s!\t@CPI0_8[0], r2, r1\n\tjump.gt\t@.BB0_4\n\tadd\t63, r2, r1\n\tadd\tstack-[2], r0, r3\n\tand\tr1, r3, r3\n\tld.1\t64, r1\n\tadd\tr1, r3, r3\n\tsub!\tr3, r1, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tsub.s!\t@CPI0_8[0], r3, r5\n\tjump.gt\t@.BB0_4\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB0_4\n\tst.1\t64, r3\n\tst.1.inc\tr1, r2, r1\n\tptr.add\tstack[@ptr_return_data], r0, r2\n\tadd\tstack[@returndatasize], r0, r4\n\tand\t31, r4, r3\n\tshr.s!\t5, r4, r4\n\tjump.eq\t@.BB0_334\n\tadd\tr0, r0, r5\n.BB0_232:\n\tshl.s\t5, r5, r6\n\tadd\tr1, r6, r7\n\tptr.add\tr2, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB0_232\n.BB0_334:\n\tsub.s!\t0, r3, r5\n\tjump.eq\t@.BB0_217\n\tshl.s\t5, r4, r4\n\tptr.add\tr2, r4, r2\n\tadd\tr1, r4, r1\n\tshl.s\t3, r3, r3\n\tld.1\tr1, r4\n\tshl\tr4, r3, r4\n\tshr\tr4, r3, r4\n\tld\tr2, r2\n\tsub\t256, r3, r3\n\tshr\tr2, r3, r2\n\tshl\tr2, r3, r2\n\tor\tr2, r4, r2\n\tst.1\tr1, r2\n\tjump\t@.BB0_217\n.BB0_222:\n\tadd\tstack-[6], r0, r1\n\tsload\tr1, r2\n\tadd\tstack-[4], r0, r1\n\tadd\tr2, r1, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_45\n\tadd\tstack-[6], r0, r2\n\tsstore\tr2, r1\n\tadd\tstack-[9], r0, r1\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tadd\tr1, r0, stack-[8]\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_21[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r3\n\tadd\tstack-[4], r0, r4\n\tadd\tr3, r4, r2\n\tsub!\tr2, r3, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB0_45\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r4\n\tadd\t@CPI0_0[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_22[0], r0, r4\n\tadd\tr3, r0, stack-[6]\n\tadd\tr0, r0, r5\n\tadd\tstack-[9], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[7], r0, r1\n\tand!\t@CPI0_6[0], r1, r1\n\tadd\tr1, r0, stack-[9]\n\tjump.eq\t@.BB0_164\n\tadd\tstack-[5], r0, r1\n\tsload\tr1, r1\n\tand\t@CPI0_0[0], r1, r2\n\tadd\tstack-[4], r0, r4\n\tmul\tr2, r4, r1, r3\n\tsub.s!\t0, r4, r3\n\tjump.eq\t@.BB0_236\n\tdiv\tr1, r4, r3, r4\n\tsub!\tr3, r2, r2\n\tjump.ne\t@.BB0_45\n.BB0_236:\n\tdiv.s\t100, r1, r3, r1\n\tadd\tstack-[6], r0, r1\n\tsload\tr1, r2\n\tadd\tr3, r0, stack-[7]\n\tadd\tr2, r3, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_45\n\tadd\tstack-[6], r0, r2\n\tsstore\tr2, r1\n\tadd\tstack-[9], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[8], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_21[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r3\n\tadd\tstack-[7], r0, r2\n\tadd\tr3, r2, r2\n\tsub!\tr2, r3, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB0_45\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tadd\tstack-[7], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_22[0], r0, r4\n\tadd\tr0, r0, r5\n\tadd\tstack-[9], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB0_164\n\tjump\t@.BB0_2\n.BB0_202:\n\tadd\tstack-[3], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[9], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_21[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_204\n\tadd\tstack-[4], r0, r5\n\tadd\tstack-[8], r0, r1\n\tsub!\tr5, r1, r1\n\tjump.lt\t@.BB0_45\n\tadd\t9, r0, r1\n\tsload\tr1, r2\n\tadd\tstack-[8], r0, r6\n\tsub\tr5, r6, r3\n\tmul\tr2, r3, r1, r4\n\tsub!\tr5, r6, r4\n\tjump.eq\t@.BB0_195\n\tdiv\tr1, r3, r3, r4\n\tsub!\tr3, r2, r2\n\tjump.eq\t@.BB0_195\n\tjump\t@.BB0_45\n.BB0_204:\n\tadd\tstack-[4], r0, r4\n\tsub.s!\t0, r4, r1\n\tadd\tr0, r0, r1\n\tjump.eq\t@.BB0_195\n\tadd\t9, r0, r1\n\tsload\tr1, r2\n\tmul\tr2, r4, r1, r3\n\tdiv\tr1, r4, r3, r4\n\tsub!\tr3, r2, r2\n\tjump.ne\t@.BB0_45\n.BB0_195:\n\tdiv.s\t@CPI0_85[0], r1, r1, r2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r1, r1\n\tjump.ge\t@.BB0_211\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI0_91[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t19, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_74[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_84[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n__keccak256:\n.func_begin1:\n\tadd\t@CPI1_0[0], r0, r3\n\tsub.s!\t@CPI1_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tsub.s!\t@CPI1_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI1_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_2\n\tld\tr1, r1\n\tret\n.BB1_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end1:\n\nabi_encode_string:\n.func_begin2:\n\tadd\t32, r0, r3\n\tst.1.inc\tr1, r3, r4\n\tld.1\tr2, r3\n\tst.1\tr4, r3\n\tadd\t64, r1, r1\n\tsub.s!\t0, r3, r4\n\tjump.eq\t@.BB2_3\n\tadd\tr0, r0, r4\n.BB2_2:\n\tadd\tr1, r4, r5\n\tadd\t32, r4, r4\n\tadd\tr4, r2, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB2_2\n.BB2_3:\n\tadd\tr1, r3, r2\n\tst.1\tr2, r0\n\tadd\t31, r3, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r2\n\tadd\tr1, r2, r1\n\tret\n.func_end2:\n\nrequire_helper_stringliteral:\n.func_begin3:\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB3_1\n\tret\n.BB3_1:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI3_0[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI3_1[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t36, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t4, r1, r2\n\tst.1\tr2, r3\n\tadd\t@CPI3_2[0], r0, r2\n\tsub.s!\t@CPI3_2[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI3_3[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end3:\n\nfinalize_allocation:\n.func_begin4:\n\tadd\t31, r2, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r2\n\tadd\tr2, r1, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI4_0[0], r1, r3\n\tjump.gt\t@.BB4_2\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB4_2\n\tst.1\t64, r1\n\tret\n.BB4_2:\n\tadd\t@CPI4_1[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI4_2[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end4:\n\nfun_transfer:\n.func_begin5:\n\tnop\tstack+=[5]\n\tand!\t@CPI5_0[0], r1, r1\n\tjump.eq\t@.BB5_1\n\tadd\tr3, r0, stack-[5]\n\tand!\t@CPI5_0[0], r2, r2\n\tadd\tr2, r0, stack-[3]\n\tjump.eq\t@.BB5_3\n\tadd\tr1, r0, stack-[4]\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tadd\tr1, r0, stack-[2]\n\tst.1\t32, r1\n\tadd\t@CPI5_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI5_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI5_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB5_5\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tstack-[5], r0, r1\n\tadd\tr2, r0, stack-[1]\n\tsub!\tr2, r1, r1\n\tjump.lt\t@.BB5_7\n\tadd\tstack-[4], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[2], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI5_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI5_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI5_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB5_5\n\tadd\tstack-[5], r0, r2\n\tadd\tstack-[1], r0, r3\n\tsub\tr3, r2, r2\n\tld\tr1, r1\n\tsstore\tr1, r2\n\tadd\tstack-[3], r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI5_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI5_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI5_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB5_5\n\tld\tr1, r1\n\tsload\tr1, r3\n\tadd\tstack-[5], r0, r4\n\tadd\tr3, r4, r2\n\tsub!\tr2, r3, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB5_11\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r4\n\tadd\t@CPI5_1[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI5_1[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI5_1[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI5_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI5_4[0], r0, r4\n\tadd\tstack-[4], r0, r5\n\tadd\tstack-[3], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB5_5\n\tret\n.BB5_5:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB5_1:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI5_13[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI5_14[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t37, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI5_9[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI5_1[0], r0, r2\n\tsub.s!\t@CPI5_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI5_10[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB5_3:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI5_11[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI5_12[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t35, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI5_9[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI5_1[0], r0, r2\n\tsub.s!\t@CPI5_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI5_10[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB5_7:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI5_7[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI5_8[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t38, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI5_9[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI5_1[0], r0, r2\n\tsub.s!\t@CPI5_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI5_10[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB5_11:\n\tadd\t@CPI5_5[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI5_6[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end5:\n\nfun_approve:\n.func_begin6:\n\tnop\tstack+=[3]\n\tand!\t@CPI6_0[0], r1, r1\n\tjump.eq\t@.BB6_1\n\tadd\tr3, r0, stack-[2]\n\tand!\t@CPI6_0[0], r2, r2\n\tadd\tr2, r0, stack-[3]\n\tjump.eq\t@.BB6_3\n\tadd\tr1, r0, stack-[1]\n\tst.1\t0, r1\n\tadd\t2, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI6_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI6_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI6_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tadd\tstack-[3], r0, r4\n\tjump.eq\t@.BB6_5\n\tld\tr1, r1\n\tst.1\t0, r4\n\tst.1\t32, r1\n\tadd\t@CPI6_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI6_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI6_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[3], r0, r6\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB6_5\n\tld\tr1, r1\n\tadd\tstack-[2], r0, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r2\n\tadd\t@CPI6_1[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI6_1[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI6_1[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI6_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI6_4[0], r0, r4\n\tadd\tstack-[1], r0, r5\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB6_5\n\tret\n.BB6_5:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB6_1:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI6_9[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI6_10[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t36, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI6_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI6_1[0], r0, r2\n\tsub.s!\t@CPI6_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI6_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB6_3:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI6_5[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI6_6[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t34, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI6_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI6_1[0], r0, r2\n\tsub.s!\t@CPI6_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI6_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end6:\n\nrequire_helper_stringliteral_92c8:\n.func_begin7:\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB7_1\n\tret\n.BB7_1:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI7_0[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t9, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI7_1[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI7_2[0], r0, r2\n\tsub.s!\t@CPI7_2[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI7_3[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end7:\n\nfun_mint:\n.func_begin8:\n\tnop\tstack+=[2]\n\tand!\t@CPI8_0[0], r1, r4\n\tjump.eq\t@.BB8_1\n\tadd\t3, r0, r1\n\tsload\tr1, r3\n\tadd\tr3, r2, r5\n\tsub!\tr5, r3, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB8_3\n\tadd\tr2, r0, stack-[1]\n\tsstore\tr1, r5\n\tadd\tr4, r0, stack-[2]\n\tst.1\t0, r4\n\tadd\t1, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI8_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI8_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI8_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB8_5\n\tld\tr1, r1\n\tsload\tr1, r3\n\tadd\tstack-[1], r0, r4\n\tadd\tr3, r4, r2\n\tsub!\tr2, r3, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tand!\t1, r3, r3\n\tadd\tstack-[2], r0, r6\n\tjump.ne\t@.BB8_3\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r4\n\tadd\t@CPI8_1[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI8_1[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI8_1[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI8_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI8_4[0], r0, r4\n\tadd\tr0, r0, r5\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB8_5\n\tret\n.BB8_3:\n\tadd\t@CPI8_5[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI8_6[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB8_5:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB8_1:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI8_7[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t31, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI8_8[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI8_1[0], r0, r2\n\tsub.s!\t@CPI8_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI8_9[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end8:\n\nfun_canClaim:\n.func_begin9:\n\tnop\tstack+=[6]\n\tld.1\t64, r9\n\tadd\t20, r0, r4\n\tst.1.inc\tr9, r4, r8\n\tadd\tr3, r0, stack-[1]\n\tshl.s\t96, r3, r4\n\tst.1\tr8, r4\n\tsub.s!\t@CPI9_0[0], r9, r4\n\tjump.ge\t@.BB9_1\n\tadd\t64, r9, r3\n\tst.1\t64, r3\n\tadd\tstack[@calldatasize], r0, r4\n\tsub.s!\t@CPI9_1[0], r2, r5\n\tjump.gt\t@.BB9_1\n\tshl.s\t5, r2, r5\n\tadd\t63, r5, r6\n\tsub.s\t32, r0, r7\n\tand\tr6, r7, r6\n\tadd\tr3, r6, r6\n\tsub.s!\t@CPI9_1[0], r6, r7\n\tjump.gt\t@.BB9_1\n\tadd\tr9, r0, stack-[6]\n\tst.1\t64, r6\n\tst.1\tr3, r2\n\tadd\tr5, r1, r2\n\tsub!\tr2, r4, r4\n\tjump.gt\t@.BB9_7\n\tsub!\tr2, r1, r4\n\tadd\tstack-[6], r0, r6\n\tjump.le\t@.BB9_9\n\tadd\tr3, r0, r4\n.BB9_8:\n\tptr.add\tstack[@ptr_calldata], r1, r5\n\tld\tr5, r5\n\tadd\t32, r4, r4\n\tst.1\tr4, r5\n\tadd\t32, r1, r1\n\tsub!\tr1, r2, r5\n\tjump.lt\t@.BB9_8\n.BB9_9:\n\tadd\t@CPI9_2[0], r0, r1\n\tsub.s!\t@CPI9_2[0], r8, r2\n\tadd\tr1, r0, r2\n\tadd.lt\tr8, r0, r2\n\tshl.s\t64, r2, r2\n\tadd\tr3, r0, stack-[5]\n\tld.1\tr6, r3\n\tsub.s!\t@CPI9_2[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tshl.s\t96, r3, r3\n\tor\tr3, r2, r2\n\tadd\t11, r0, r3\n\tsload\tr3, r3\n\tadd\tr3, r0, stack-[2]\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI9_2[0], r3, r4\n\tadd.lt\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI9_3[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[5], r0, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB9_7\n\tld\tr1, r1\n\tld.1\tr3, r2\n\tsub.s!\t0, r2, r2\n\tjump.eq\t@.BB9_16\n\tadd\tstack-[6], r0, r2\n\tadd\t96, r2, r2\n\tadd\tr2, r0, stack-[4]\n\tadd\t32784, r0, r2\n\tadd\tr2, r0, stack-[3]\n\tadd\tr0, r0, r3\n\tjump\t@.BB9_12\n.BB9_14:\n\tst.1\t0, r1\n\tst.1\t32, r2\n\tadd\t@CPI9_2[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI9_2[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI9_4[0], r1, r1\n\tadd\tstack-[3], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tadd\tstack-[5], r0, r2\n\tjump.eq\t@.BB9_7\n.BB9_15:\n\tld\tr1, r1\n\tadd\tstack-[6], r0, r3\n\tadd\t1, r3, r3\n\tld.1\tr2, r2\n\tsub!\tr3, r2, r2\n\tjump.ge\t@.BB9_16\n.BB9_12:\n\tadd\tr3, r0, stack-[6]\n\tshl.s\t5, r3, r2\n\tadd\tstack-[4], r0, r3\n\tadd\tr3, r2, r2\n\tld.1\tr2, r2\n\tsub!\tr1, r2, r3\n\tjump.lt\t@.BB9_14\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI9_2[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI9_2[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI9_4[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tadd\tstack-[5], r0, r2\n\tjump.ne\t@.BB9_15\n.BB9_7:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB9_16:\n\tadd\tstack-[2], r0, r2\n\tsub!\tr1, r2, r1\n\tadd\tr0, r0, r1\n\tjump.ne\t@.BB9_17\n\tadd\t6, r0, r1\n\tsload\tr1, r1\n\tadd\t7, r0, r2\n\tsload\tr2, r2\n\tadd\tr2, r1, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB9_19\n\tadd\t8, r0, r2\n\tsload\tr2, r2\n\tadd\tr2, r1, r3\n\tsub!\tr3, r2, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB9_19\n\tadd\tr3, r0, stack-[6]\n\tadd\tstack-[1], r0, r1\n\tand\t@CPI9_5[0], r1, r1\n\tst.1\t0, r1\n\tadd\t14, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI9_2[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI9_2[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI9_4[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB9_7\n\tld\tr1, r1\n\tsload\tr1, r1\n\tadd\tstack-[6], r0, r3\n\tsub!\tr3, r1, r2\n\tjump.lt\t@.BB9_19\n\tsub\tr3, r1, r1\n\tdiv.s\t@CPI9_6[0], r1, r1, r2\n.BB9_17:\n\tret\n.BB9_1:\n\tadd\t@CPI9_7[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI9_8[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB9_19:\n\tadd\t@CPI9_7[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI9_8[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end9:\n\n__farcall:\n.func_begin10:\n.tmp0:\n\tfar_call\tr1, r2, @.BB10_2\n.tmp1:\n\tadd\t1, r0, r2\n\tret\n.BB10_2:\n.tmp2:\n\tadd\tr0, r0, r2\n\tret\n.func_end10:\n\n__staticcall:\n.func_begin11:\n.tmp3:\n\tfar_call.static\tr1, r2, @.BB11_2\n.tmp4:\n\tadd\t1, r0, r2\n\tret\n.BB11_2:\n.tmp5:\n\tadd\tr0, r0, r2\n\tret\n.func_end11:\n\n\t.data\n\t.p2align\t5\ncalldatasize:\n\t.cell 0\n\n\t.p2align\t5\nreturndatasize:\n\t.cell 0\n\n\t.p2align\t5\nptr_calldata:\n.cell\t0\n\n\t.p2align\t5\nptr_return_data:\n.cell\t0\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\nCPI1_0:\nCPI3_2:\nCPI5_1:\nCPI6_1:\nCPI7_2:\nCPI8_1:\nCPI9_2:\n\t.cell 4294967295\nCPI0_1:\nCPI9_0:\n\t.cell 18446744073709551552\nCPI0_2:\n\t.cell 32254244045677467363843021887222292822734104445067746649044095181374581899264\nCPI0_3:\n\t.cell 18446744073709551551\nCPI0_4:\n\t.cell -1461501637330902918203684832716283019655932542976\nCPI0_5:\nCPI1_1:\nCPI9_3:\n\t.cell 904625697166532776746648320380374280103671755200316906558262375061821325312\nCPI0_6:\nCPI5_0:\nCPI6_0:\nCPI8_0:\nCPI9_5:\n\t.cell 1461501637330902918203684832716283019655932542975\nCPI0_7:\n\t.cell -52524777015005588113349992707137368332388074750292320778649315033004770043936\nCPI0_8:\nCPI4_0:\nCPI9_1:\n\t.cell 18446744073709551615\nCPI0_9:\nCPI5_3:\nCPI6_3:\nCPI8_3:\n\t.cell 904625697166532776746648320380374280103671757735618107014721178055227736064\nCPI0_10:\n\t.cell 8000000000000000000000000000\nCPI0_11:\n\t.cell 20000000000000000000000000000\nCPI0_12:\n\t.cell 10000000000000000000000000000\nCPI0_13:\n\t.cell 2500000\nCPI0_14:\n\t.cell 7500000\nCPI0_15:\n\t.cell -1099511627776\nCPI0_16:\n\t.cell 4294967301\nCPI0_17:\n\t.cell 400000000000000000000000000000000\nCPI0_18:\n\t.cell -120000000000000000000000000000001\nCPI0_19:\n\t.cell 120000000000000000000000000000000\nCPI0_20:\n\t.cell 1336671347844978712161332750804850926694722012634\nCPI0_21:\nCPI5_2:\nCPI6_2:\nCPI8_2:\nCPI9_4:\n\t.cell 904625697166532776746648320380374280103671760270919307471179981048634146816\nCPI0_22:\nCPI5_4:\nCPI8_4:\n\t.cell -15402802100530019096323380498944738953123845089667699673314898783681816316945\nCPI0_23:\n\t.cell -40000000000000000000000000000001\nCPI0_24:\n\t.cell 40000000000000000000000000000000\nCPI0_25:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\nCPI0_26:\n\t.cell 2216106149\nCPI0_27:\n\t.cell 2514000704\nCPI0_28:\n\t.cell 3307687888\nCPI0_29:\n\t.cell 3714247997\nCPI0_30:\n\t.cell 3714247998\nCPI0_31:\n\t.cell 4076725131\nCPI0_32:\n\t.cell 3307687889\nCPI0_33:\n\t.cell 3364155267\nCPI0_34:\n\t.cell 2757214934\nCPI0_35:\n\t.cell 2757214935\nCPI0_36:\n\t.cell 2835717307\nCPI0_37:\n\t.cell 2514000705\nCPI0_38:\n\t.cell 2554587875\nCPI0_39:\n\t.cell 2437405978\nCPI0_40:\n\t.cell 2488396237\nCPI0_41:\n\t.cell 2488396238\nCPI0_42:\n\t.cell 2512525681\nCPI0_43:\n\t.cell 2437405979\nCPI0_44:\n\t.cell 2477130855\nCPI0_45:\n\t.cell 2376452954\nCPI0_46:\n\t.cell 2376452955\nCPI0_47:\n\t.cell 2425718712\nCPI0_48:\n\t.cell 2216106150\nCPI0_49:\n\t.cell 2267930529\nCPI0_50:\n\t.cell 961581904\nCPI0_51:\n\t.cell 1901074597\nCPI0_52:\n\t.cell 2133508795\nCPI0_53:\n\t.cell 2133508796\nCPI0_54:\n\t.cell 2175242878\nCPI0_55:\n\t.cell 1901074598\nCPI0_56:\n\t.cell 2092320601\nCPI0_57:\n\t.cell 1679614271\nCPI0_58:\n\t.cell 1679614272\nCPI0_59:\n\t.cell 1889567281\nCPI0_60:\n\t.cell 961581905\nCPI0_61:\n\t.cell 1117154408\nCPI0_62:\n\t.cell 599290588\nCPI0_63:\n\t.cell 790478001\nCPI0_64:\n\t.cell 790478002\nCPI0_65:\n\t.cell 826074471\nCPI0_66:\n\t.cell 599290589\nCPI0_67:\n\t.cell 783591339\nCPI0_68:\n\t.cell 117300739\nCPI0_69:\n\t.cell 157198259\nCPI0_70:\n\t.cell 404098525\nCPI0_71:\n\t.cell -57896044618658097711785492504343953926634992332820282019728792003956564819968\nCPI0_72:\n\t.cell 45408759099000846574684193736602357774271237157169010951590501707763511459840\nCPI0_73:\n\t.cell 35943731656364841964517558219894961445653631979235167635064085396828900499553\nCPI0_74:\nCPI3_1:\nCPI5_9:\nCPI6_7:\nCPI7_1:\nCPI8_8:\n\t.cell 3963877391197344453575983046348115674221700746820753546331534351508065746944\nCPI0_75:\nCPI5_10:\nCPI6_8:\n\t.cell 10458117451882892562347801444352\nCPI0_76:\n\t.cell 2535301200456458802993406410752\nCPI0_77:\n\t.cell 14690266658072097593480850647027335513285713462661904985951319567533531463680\nCPI0_78:\n\t.cell 31354931781638678506476475496475743842680577777870365728514456330491174612855\nCPI0_79:\n\t.cell 1095216660480\nCPI0_80:\n\t.cell 1546678032441257452667456735582814959992782782816731922691272282333561699760\nCPI0_81:\n\t.cell 4294967296\nCPI0_82:\n\t.cell -1095216660481\nCPI0_83:\nCPI3_0:\n\t.cell 35943731656364841964516503116990081338611484598491072354577564874054038349170\nCPI0_84:\nCPI3_3:\nCPI7_3:\nCPI8_9:\n\t.cell 7922816251426433759354395033600\nCPI0_85:\nCPI9_6:\n\t.cell 1000000000000000000\nCPI0_86:\nCPI7_0:\n\t.cell 37682073719929961212334726103044514231752350445552639876963474413176135614464\nCPI0_87:\n\t.cell 7922816253787617000789217640448\nCPI0_88:\n\t.cell 904625697166532776746648320380374280103671755200316909509741426855349583872\nCPI0_89:\n\t.cell 33214008156304899519908535789041251374442731501006129183748088365378474868736\nCPI0_90:\nCPI8_7:\n\t.cell 31354931781638678563069525067809233856775101976563302031013534919694566519552\nCPI0_91:\n\t.cell 33213987989631693067883787898814906347851281387820643264461297815586617688064\nCPI0_92:\n\t.cell 31411796921273332039540167021977234770400022203154653039219347659833896599552\nCPI0_93:\nCPI4_1:\nCPI5_5:\nCPI8_5:\nCPI9_7:\n\t.cell 35408467139433450592217433187231851964531694900788300625387963629091585785856\nCPI0_94:\nCPI4_2:\nCPI5_6:\nCPI8_6:\nCPI9_8:\n\t.cell 2852213850513516153367582212096\nCPI0_95:\n\t.cell 35477323691027006751881214553240158749964647787880777778063321125218534031360\nCPI0_96:\n\t.cell 44957423563285989266247004906403561635230327756000124389404269791890710200320\nCPI0_97:\n\t.cell 31354931781638678494316026001312189103416802390932084224065329695412615668078\nCPI0_98:\n\t.cell 52015977587075634662932278421871521105961125924018222127100086566054726205440\nCPI0_99:\n\t.cell 31354931781638678494316026001340845558170976982936511063842609339963588896115\nCPI0_100:\n\t.cell -4294967296\nCPI0_101:\n\t.cell 49041376442327685983450583443845300569967147870487584211451521639864848089088\nCPI0_102:\n\t.cell 31354931781638678607228669297131712859100820671745083778533502622993977909345\nCPI0_103:\nCPI5_7:\n\t.cell 44065838241030143116324720188876985940908656145555552347773292252211112312832\nCPI0_104:\nCPI5_8:\n\t.cell 31354931781638678607228669297131712859100820671745083778533502622993977909346\nCPI0_105:\nCPI5_11:\n\t.cell 45887578820189300338443374388718498632482616163288499555830078344056365121536\nCPI0_106:\nCPI5_12:\n\t.cell 31354931781638678607228669297131712859126084785867252355217498662940140921970\nCPI0_107:\nCPI5_13:\n\t.cell 45433405612597180762055095701412804886438245671210399661410036396145969725440\nCPI0_108:\nCPI5_14:\n\t.cell 31354931781638678607228669297131712859107492772550336241160036866987736981860\nCPI0_109:\n\t.cell -53278079350709166316280423202849322519190186591071851114874353210178472783461\nCPI6_4:\n\t.cell -52305948261162578668367882225327028569797882979485679342215860919519743330011\nCPI6_5:\n\t.cell 52219164999525148860834357634456956735281286572158918307284071279203377479680\nCPI6_6:\n\t.cell 31354931781638678487916134672869638488806705378895508030211234510262059168357\nCPI6_9:\n\t.cell 51742913093258732729005998692887265601192425265805909375210916622055285719040\nCPI6_10:\n\t.cell 31354931781638678487916134672869638484047149969764982831501014746446650500196\n","bytecode":{"object":""},"methodIdentifiers":{"airdropActive()":"9843eae3","allowance(address,address)":"dd62ed3e","amountAirdrop()":"93a60467","amountPresale()":"95c21971","amountSale()":"872ddfa1","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","burn(uint256)":"42966c68","canClaim(bytes32[],address)":"909587b8","claimed(address)":"c884ef83","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","merkleRoot()":"2eb4a7ab","mint(address,uint256,bytes32[])":"641ce140","name()":"06fdde03","owner()":"8da5cb5b","percentRefRewards()":"9451e9ce","pricePresale()":"9147dd1b","priceSale()":"81a7927e","regTeam(uint256,address)":"7f2ac2bc","renounceOwnership()":"715018a6","setAirdropSettings(uint256,uint256,uint256)":"c5274fd1","setMerkleRoot(bytes32)":"7cb64759","setPriceSettings(uint256,uint256,uint32)":"2f1dbcb2","setSaleActive(bool)":"841718a6","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b"}},"irOptimized":"/// @use-src 0:\"contracts/GOAT.sol\"\nobject \"GOAT_1688\" {\n    code {\n        {\n            /// @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\"\n            let _1 := 64\n            mstore(_1, memoryguard(0x80))\n            if callvalue() { revert(0, 0) }\n            /// @src 0:27704:27710  \"\\\"GOAT\\\"\"\n            let _mpos := /** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ copy_literal_to_memory_37c469dadd9df9fb454182ffced72eec76a99c56ccde61f27666b040e87df709()\n            let _2 := copy_literal_to_memory_37c469dadd9df9fb454182ffced72eec76a99c56ccde61f27666b040e87df709()\n            /// @src 0:3365:3371  \"_owner\"\n            let _3 := 0x00\n            /// @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\"\n            let _4 := sload(/** @src 0:3365:3371  \"_owner\" */ _3)\n            /// @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\"\n            sstore(/** @src 0:3365:3371  \"_owner\" */ _3, /** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ or(and(_4, not(sub(shl(160, 1), 1))), /** @src 0:799:809  \"msg.sender\" */ caller()))\n            /// @src 0:3415:3455  \"OwnershipTransferred(oldOwner, newOwner)\"\n            log3(/** @src 0:3365:3371  \"_owner\" */ _3, _3, /** @src 0:3415:3455  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ and(_4, sub(shl(160, 1), 1)), /** @src 0:799:809  \"msg.sender\" */ caller())\n            /// @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\"\n            let newLen := mload(_mpos)\n            let _5 := sub(shl(64, 1), 1)\n            if gt(newLen, _5)\n            {\n                mstore(/** @src 0:3365:3371  \"_owner\" */ _3, /** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ shl(224, 0x4e487b71))\n                mstore(/** @src 0:9136:9149  \"_name = name_\" */ 0x04, /** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ 0x41)\n                revert(/** @src 0:3365:3371  \"_owner\" */ _3, /** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ 0x24)\n            }\n            /// @src 0:9136:9149  \"_name = name_\"\n            let _6 := 0x04\n            /// @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\"\n            let _7 := sload(/** @src 0:9136:9149  \"_name = name_\" */ _6)\n            /// @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\"\n            let length := /** @src 0:3365:3371  \"_owner\" */ _3\n            /// @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\"\n            let _8 := 1\n            length := shr(_8, _7)\n            let outOfPlaceEncoding := and(_7, _8)\n            if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n            let _9 := 32\n            if eq(outOfPlaceEncoding, lt(length, _9))\n            {\n                mstore(/** @src 0:3365:3371  \"_owner\" */ _3, /** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ shl(224, 0x4e487b71))\n                mstore(/** @src 0:9136:9149  \"_name = name_\" */ _6, /** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ 0x22)\n                revert(/** @src 0:3365:3371  \"_owner\" */ _3, /** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ 0x24)\n            }\n            let _10 := 31\n            if gt(length, _10)\n            {\n                mstore(/** @src 0:3365:3371  \"_owner\" */ _3, /** @src 0:9136:9149  \"_name = name_\" */ _6)\n                /// @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\"\n                let data := keccak256(/** @src 0:3365:3371  \"_owner\" */ _3, /** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ _9)\n                let deleteStart := add(data, shr(5, add(newLen, _10)))\n                if lt(newLen, _9) { deleteStart := data }\n                let _11 := add(data, shr(5, add(length, _10)))\n                let start := deleteStart\n                for { } lt(start, _11) { start := add(start, _8) }\n                {\n                    sstore(start, /** @src 0:3365:3371  \"_owner\" */ _3)\n                }\n            }\n            /// @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\"\n            let srcOffset := /** @src 0:3365:3371  \"_owner\" */ _3\n            /// @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\"\n            srcOffset := _9\n            switch gt(newLen, _10)\n            case 1 {\n                let loopEnd := and(newLen, not(31))\n                mstore(/** @src 0:3365:3371  \"_owner\" */ _3, /** @src 0:9136:9149  \"_name = name_\" */ _6)\n                /// @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\"\n                let dstPtr := keccak256(/** @src 0:3365:3371  \"_owner\" */ _3, /** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ _9)\n                let i := /** @src 0:3365:3371  \"_owner\" */ _3\n                /// @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\"\n                for { } lt(i, loopEnd) { i := add(i, _9) }\n                {\n                    sstore(dstPtr, mload(add(_mpos, srcOffset)))\n                    dstPtr := add(dstPtr, _8)\n                    srcOffset := add(srcOffset, _9)\n                }\n                if lt(loopEnd, newLen)\n                {\n                    let lastValue := mload(add(_mpos, srcOffset))\n                    sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n                }\n                sstore(/** @src 0:9136:9149  \"_name = name_\" */ _6, /** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ add(shl(_8, newLen), _8))\n            }\n            default {\n                let value := /** @src 0:3365:3371  \"_owner\" */ _3\n                /// @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\"\n                if newLen\n                {\n                    value := mload(add(_mpos, srcOffset))\n                }\n                sstore(/** @src 0:9136:9149  \"_name = name_\" */ _6, /** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ or(and(value, not(shr(shl(3, newLen), not(0)))), shl(_8, newLen)))\n            }\n            let newLen_1 := mload(_2)\n            if gt(newLen_1, _5)\n            {\n                mstore(/** @src 0:3365:3371  \"_owner\" */ _3, /** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ shl(224, 0x4e487b71))\n                mstore(/** @src 0:9136:9149  \"_name = name_\" */ _6, /** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ 0x41)\n                revert(/** @src 0:3365:3371  \"_owner\" */ _3, /** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ 0x24)\n            }\n            /// @src 0:9160:9177  \"_symbol = symbol_\"\n            let _12 := 0x05\n            /// @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\"\n            let _13 := sload(/** @src 0:9160:9177  \"_symbol = symbol_\" */ _12)\n            /// @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\"\n            let length_1 := /** @src 0:3365:3371  \"_owner\" */ _3\n            /// @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\"\n            length_1 := shr(_8, _13)\n            let outOfPlaceEncoding_1 := and(_13, _8)\n            if iszero(outOfPlaceEncoding_1)\n            {\n                length_1 := and(length_1, 0x7f)\n            }\n            if eq(outOfPlaceEncoding_1, lt(length_1, _9))\n            {\n                mstore(/** @src 0:3365:3371  \"_owner\" */ _3, /** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ shl(224, 0x4e487b71))\n                mstore(/** @src 0:9136:9149  \"_name = name_\" */ _6, /** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ 0x22)\n                revert(/** @src 0:3365:3371  \"_owner\" */ _3, /** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ 0x24)\n            }\n            if gt(length_1, _10)\n            {\n                mstore(/** @src 0:3365:3371  \"_owner\" */ _3, /** @src 0:9160:9177  \"_symbol = symbol_\" */ _12)\n                /// @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\"\n                let data_1 := keccak256(/** @src 0:3365:3371  \"_owner\" */ _3, /** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ _9)\n                let deleteStart_1 := add(data_1, shr(/** @src 0:9160:9177  \"_symbol = symbol_\" */ _12, /** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ add(newLen_1, _10)))\n                if lt(newLen_1, _9) { deleteStart_1 := data_1 }\n                let _14 := add(data_1, shr(/** @src 0:9160:9177  \"_symbol = symbol_\" */ _12, /** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ add(length_1, _10)))\n                let start_1 := deleteStart_1\n                for { } lt(start_1, _14) { start_1 := add(start_1, _8) }\n                {\n                    sstore(start_1, /** @src 0:3365:3371  \"_owner\" */ _3)\n                }\n            }\n            /// @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\"\n            let srcOffset_1 := /** @src 0:3365:3371  \"_owner\" */ _3\n            /// @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\"\n            srcOffset_1 := _9\n            switch gt(newLen_1, _10)\n            case 1 {\n                let loopEnd_1 := and(newLen_1, not(31))\n                mstore(/** @src 0:3365:3371  \"_owner\" */ _3, /** @src 0:9160:9177  \"_symbol = symbol_\" */ _12)\n                /// @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\"\n                let dstPtr_1 := keccak256(/** @src 0:3365:3371  \"_owner\" */ _3, /** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ _9)\n                let i_1 := /** @src 0:3365:3371  \"_owner\" */ _3\n                /// @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\"\n                for { } lt(i_1, loopEnd_1) { i_1 := add(i_1, _9) }\n                {\n                    sstore(dstPtr_1, mload(add(_2, srcOffset_1)))\n                    dstPtr_1 := add(dstPtr_1, _8)\n                    srcOffset_1 := add(srcOffset_1, _9)\n                }\n                if lt(loopEnd_1, newLen_1)\n                {\n                    let lastValue_1 := mload(add(_2, srcOffset_1))\n                    sstore(dstPtr_1, and(lastValue_1, not(shr(and(shl(3, newLen_1), 248), not(0)))))\n                }\n                sstore(/** @src 0:9160:9177  \"_symbol = symbol_\" */ _12, /** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ add(shl(_8, newLen_1), _8))\n            }\n            default {\n                let value_1 := /** @src 0:3365:3371  \"_owner\" */ _3\n                /// @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\"\n                if newLen_1\n                {\n                    value_1 := mload(add(_2, srcOffset_1))\n                }\n                sstore(/** @src 0:9160:9177  \"_symbol = symbol_\" */ _12, /** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ or(and(value_1, not(shr(shl(3, newLen_1), not(0)))), shl(_8, newLen_1)))\n            }\n            sstore(/** @src 0:27193:27218  \"8000000000*10**decimals()\" */ 0x06, /** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ 0x19d971e4fe8401e740000000)\n            sstore(/** @src 0:27254:27280  \"20000000000*10**decimals()\" */ 0x07, /** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ 0x409f9cbc7c4a04c220000000)\n            sstore(/** @src 0:27313:27339  \"10000000000*10**decimals()\" */ 0x08, /** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ 0x204fce5e3e25026110000000)\n            sstore(/** @src 0:27374:27381  \"2500000\" */ 0x09, 0x2625a0)\n            /// @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\"\n            sstore(/** @src 0:27431:27438  \"7500000\" */ 0x0a, 0x7270e0)\n            /// @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\"\n            sstore(/** @src 0:27530:27531  \"5\" */ 0x0c, /** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ or(and(sload(/** @src 0:27530:27531  \"5\" */ 0x0c), /** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ not(0xffffffffff)), 0x0100000005))\n            sstore(/** @src 0:27596:27626  \"400000000000000*10**decimals()\" */ 0x0d, /** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ 0x13b8b5b5056e16b3be0400000000)\n            let _15 := sload(/** @src 0:15831:15853  \"_totalSupply += amount\" */ 0x03)\n            /// @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\"\n            let _16 := 0x05ea9ce981a106cf85ce00000000\n            let sum := add(_15, _16)\n            if gt(_15, sum)\n            {\n                mstore(/** @src 0:3365:3371  \"_owner\" */ _3, /** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ shl(224, 0x4e487b71))\n                mstore(/** @src 0:9136:9149  \"_name = name_\" */ _6, /** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ 0x11)\n                revert(/** @src 0:3365:3371  \"_owner\" */ _3, /** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ 0x24)\n            }\n            sstore(/** @src 0:15831:15853  \"_totalSupply += amount\" */ 0x03, sum)\n            /// @src 0:27740:27782  \"0xEa226A8DBe9524E6921b9698911A2daEAb9D85dA\"\n            let _17 := 0xea226a8dbe9524e6921b9698911a2daeab9d85da\n            /// @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\"\n            mstore(/** @src 0:3365:3371  \"_owner\" */ _3, /** @src 0:27740:27782  \"0xEa226A8DBe9524E6921b9698911A2daEAb9D85dA\" */ _17)\n            /// @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\"\n            mstore(_9, _8)\n            let dataSlot := keccak256(/** @src 0:3365:3371  \"_owner\" */ _3, /** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ _1)\n            let _18 := sload(/** @src 0:15864:15892  \"_balances[account] += amount\" */ dataSlot)\n            /// @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\"\n            let sum_1 := add(_18, _16)\n            if gt(_18, sum_1)\n            {\n                mstore(/** @src 0:3365:3371  \"_owner\" */ _3, /** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ shl(224, 0x4e487b71))\n                mstore(/** @src 0:9136:9149  \"_name = name_\" */ _6, /** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ 0x11)\n                revert(/** @src 0:3365:3371  \"_owner\" */ _3, /** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ 0x24)\n            }\n            sstore(dataSlot, /** @src 0:15864:15892  \"_balances[account] += amount\" */ sum_1)\n            /// @src 0:15908:15945  \"Transfer(address(0), account, amount)\"\n            let _19 := /** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ mload(_1)\n            mstore(_19, _16)\n            /// @src 0:15908:15945  \"Transfer(address(0), account, amount)\"\n            let _20 := 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n            log3(_19, /** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ _9, /** @src 0:15908:15945  \"Transfer(address(0), account, amount)\" */ _20, /** @src 0:3365:3371  \"_owner\" */ _3, /** @src 0:27740:27782  \"0xEa226A8DBe9524E6921b9698911A2daEAb9D85dA\" */ _17)\n            /// @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\"\n            let _21 := sload(/** @src 0:15831:15853  \"_totalSupply += amount\" */ 0x03)\n            /// @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\"\n            let _22 := 0x01f8def8808b02452c9a00000000\n            let sum_2 := add(_21, _22)\n            if gt(_21, sum_2)\n            {\n                mstore(/** @src 0:3365:3371  \"_owner\" */ _3, /** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ shl(224, 0x4e487b71))\n                mstore(/** @src 0:9136:9149  \"_name = name_\" */ _6, /** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ 0x11)\n                revert(/** @src 0:3365:3371  \"_owner\" */ _3, /** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ 0x24)\n            }\n            sstore(/** @src 0:15831:15853  \"_totalSupply += amount\" */ 0x03, sum_2)\n            /// @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\"\n            mstore(/** @src 0:3365:3371  \"_owner\" */ _3, /** @src 0:27740:27782  \"0xEa226A8DBe9524E6921b9698911A2daEAb9D85dA\" */ _17)\n            /// @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\"\n            mstore(_9, _8)\n            let dataSlot_1 := keccak256(/** @src 0:3365:3371  \"_owner\" */ _3, /** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ _1)\n            let _23 := sload(/** @src 0:15864:15892  \"_balances[account] += amount\" */ dataSlot_1)\n            /// @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\"\n            let sum_3 := add(_23, _22)\n            if gt(_23, sum_3)\n            {\n                mstore(/** @src 0:3365:3371  \"_owner\" */ _3, /** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ shl(224, 0x4e487b71))\n                mstore(/** @src 0:9136:9149  \"_name = name_\" */ _6, /** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ 0x11)\n                revert(/** @src 0:3365:3371  \"_owner\" */ _3, /** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ 0x24)\n            }\n            sstore(dataSlot_1, /** @src 0:15864:15892  \"_balances[account] += amount\" */ sum_3)\n            /// @src 0:15908:15945  \"Transfer(address(0), account, amount)\"\n            let _24 := /** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ mload(_1)\n            mstore(_24, _22)\n            /// @src 0:15908:15945  \"Transfer(address(0), account, amount)\"\n            log3(_24, /** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ _9, /** @src 0:15908:15945  \"Transfer(address(0), account, amount)\" */ _20, /** @src 0:3365:3371  \"_owner\" */ _3, /** @src 0:27740:27782  \"0xEa226A8DBe9524E6921b9698911A2daEAb9D85dA\" */ _17)\n            /// @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\"\n            let _25 := mload(_1)\n            let _26 := datasize(\"GOAT_1688_deployed\")\n            codecopy(_25, dataoffset(\"GOAT_1688_deployed\"), _26)\n            return(_25, _26)\n        }\n        function copy_literal_to_memory_37c469dadd9df9fb454182ffced72eec76a99c56ccde61f27666b040e87df709() -> memPtr\n        {\n            let memPtr_1 := mload(64)\n            let newFreePtr := add(memPtr_1, 64)\n            if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr_1))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ 0x24)\n            }\n            mstore(64, newFreePtr)\n            mstore(memPtr_1, 4)\n            memPtr := memPtr_1\n            mstore(add(memPtr_1, 0x20), \"GOAT\")\n        }\n    }\n    /// @use-src 0:\"contracts/GOAT.sol\"\n    object \"GOAT_1688_deployed\" {\n        code {\n            {\n                /// @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\"\n                let _1 := memoryguard(0x80)\n                let _2 := 64\n                mstore(_2, _1)\n                let _3 := 4\n                if iszero(lt(calldatasize(), _3))\n                {\n                    let _4 := 0\n                    switch shr(224, calldataload(_4))\n                    case 0x06fdde03 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        let ret := _4\n                        let slotValue := sload(_3)\n                        let length := _4\n                        let _5 := 1\n                        length := shr(_5, slotValue)\n                        let outOfPlaceEncoding := and(slotValue, _5)\n                        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                        let _6 := 32\n                        if eq(outOfPlaceEncoding, lt(length, _6))\n                        {\n                            mstore(_4, shl(224, 0x4e487b71))\n                            mstore(_3, 0x22)\n                            revert(_4, 0x24)\n                        }\n                        mstore(_1, length)\n                        switch outOfPlaceEncoding\n                        case 0 {\n                            mstore(add(_1, _6), and(slotValue, not(255)))\n                            ret := add(add(_1, shl(5, iszero(iszero(length)))), _6)\n                        }\n                        case 1 {\n                            mstore(_4, _3)\n                            let dataPos := 62514009886607029107290561805838585334079798074568712924583230797734656856475\n                            let i := _4\n                            for { } lt(i, length) { i := add(i, _6) }\n                            {\n                                mstore(add(add(_1, i), _6), sload(dataPos))\n                                dataPos := add(dataPos, _5)\n                            }\n                            ret := add(add(_1, i), _6)\n                        }\n                        finalize_allocation(_1, sub(ret, _1))\n                        let memPos := mload(_2)\n                        return(memPos, sub(abi_encode_string(memPos, _1), memPos))\n                    }\n                    case 0x095ea7b3 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                        let value0 := abi_decode_address()\n                        /// @src 0:11554:11560  \"amount\"\n                        fun_approve(/** @src 0:799:809  \"msg.sender\" */ caller(), /** @src 0:11554:11560  \"amount\" */ value0, /** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ calldataload(36))\n                        let memPos_1 := mload(_2)\n                        mstore(memPos_1, 1)\n                        return(memPos_1, 32)\n                    }\n                    case 0x18160ddd {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        let _7 := sload(/** @src 0:10463:10475  \"_totalSupply\" */ 0x03)\n                        /// @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\"\n                        let memPos_2 := mload(_2)\n                        mstore(memPos_2, _7)\n                        return(memPos_2, 32)\n                    }\n                    case 0x23b872dd {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), 96) { revert(_4, _4) }\n                        let value0_1 := abi_decode_address()\n                        let value1 := abi_decode_address_13670()\n                        let value := calldataload(68)\n                        /// @src 0:12259:12265  \"amount\"\n                        fun_transfer(value0_1, value1, value)\n                        /// @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\"\n                        mstore(_4, and(value0_1, sub(shl(160, 1), 1)))\n                        mstore(32, /** @src 0:12306:12317  \"_allowances\" */ 0x02)\n                        /// @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\"\n                        let dataSlot := keccak256(_4, _2)\n                        mstore(_4, /** @src 0:799:809  \"msg.sender\" */ caller())\n                        /// @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\"\n                        mstore(32, dataSlot)\n                        let _8 := sload(keccak256(_4, _2))\n                        if /** @src 0:12358:12384  \"currentAllowance >= amount\" */ lt(_8, value)\n                        /// @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\"\n                        {\n                            let memPtr := mload(_2)\n                            mstore(memPtr, shl(229, 4594637))\n                            mstore(add(memPtr, _3), 32)\n                            mstore(add(memPtr, 36), 40)\n                            mstore(add(memPtr, 68), \"ERC20: transfer amount exceeds a\")\n                            mstore(add(memPtr, 100), \"llowance\")\n                            revert(memPtr, 132)\n                        }\n                        /// @src 0:12496:12521  \"currentAllowance - amount\"\n                        fun_approve(value0_1, /** @src 0:799:809  \"msg.sender\" */ caller(), /** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ sub(/** @src 0:12496:12521  \"currentAllowance - amount\" */ _8, value))\n                        /// @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\"\n                        let memPos_3 := mload(_2)\n                        mstore(memPos_3, 1)\n                        return(memPos_3, 32)\n                    }\n                    case 0x2eb4a7ab {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        let _9 := sload(/** @src 0:27466:27491  \"bytes32 public merkleRoot\" */ 11)\n                        /// @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\"\n                        let memPos_4 := mload(_2)\n                        mstore(memPos_4, _9)\n                        return(memPos_4, 32)\n                    }\n                    case 0x2f1dbcb2 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), 96) { revert(_4, _4) }\n                        let value_1 := calldataload(68)\n                        let _10 := and(value_1, 0xffffffff)\n                        if iszero(eq(value_1, _10)) { revert(_4, _4) }\n                        let value_2 := and(sload(_4), sub(shl(160, 1), 1))\n                        /// @src 0:2214:2282  \"require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\")\"\n                        require_helper_stringliteral(/** @src 0:2222:2245  \"owner() == _msgSender()\" */ eq(/** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ value_2, /** @src 0:799:809  \"msg.sender\" */ caller()))\n                        /// @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\"\n                        sstore(/** @src 0:28558:28596  \"percentRefRewards = _percentRefRewards\" */ 0x0c, /** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ or(and(sload(/** @src 0:28558:28596  \"percentRefRewards = _percentRefRewards\" */ 0x0c), /** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ not(0xffffffff)), _10))\n                        sstore(/** @src 0:28607:28635  \"pricePresale = _pricePresale\" */ 0x09, /** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ calldataload(_3))\n                        sstore(/** @src 0:28646:28668  \"priceSale = _priceSale\" */ 0x0a, /** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ calldataload(36))\n                        return(_4, _4)\n                    }\n                    case 0x313ce567 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        let memPos_5 := mload(_2)\n                        mstore(memPos_5, /** @src 0:10300:10302  \"18\" */ 0x12)\n                        /// @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\"\n                        return(memPos_5, 32)\n                    }\n                    case 0x39509351 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                        let value0_2 := abi_decode_address()\n                        mstore(_4, /** @src 0:799:809  \"msg.sender\" */ caller())\n                        /// @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\"\n                        mstore(32, /** @src 0:13111:13122  \"_allowances\" */ 0x02)\n                        /// @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\"\n                        let _11 := keccak256(_4, _2)\n                        mstore(_4, and(value0_2, sub(shl(160, 1), 1)))\n                        mstore(32, _11)\n                        /// @src 0:13111:13158  \"_allowances[_msgSender()][spender] + addedValue\"\n                        fun_approve(/** @src 0:799:809  \"msg.sender\" */ caller(), /** @src 0:13111:13158  \"_allowances[_msgSender()][spender] + addedValue\" */ value0_2, checked_add_uint256(/** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ sload(keccak256(_4, _2)), calldataload(36)))\n                        let memPos_6 := mload(_2)\n                        mstore(memPos_6, 1)\n                        return(memPos_6, 32)\n                    }\n                    case 0x42966c68 {\n                        if callvalue() { revert(_4, _4) }\n                        let _12 := 32\n                        if slt(add(calldatasize(), not(3)), _12) { revert(_4, _4) }\n                        let value_3 := calldataload(_3)\n                        if /** @src 0:16431:16452  \"account != address(0)\" */ iszero(/** @src 0:30622:30632  \"msg.sender\" */ caller())\n                        /// @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\"\n                        {\n                            let memPtr_1 := mload(_2)\n                            mstore(memPtr_1, shl(229, 4594637))\n                            mstore(add(memPtr_1, _3), _12)\n                            mstore(add(memPtr_1, 36), 33)\n                            mstore(add(memPtr_1, 68), \"ERC20: burn from the zero addres\")\n                            mstore(add(memPtr_1, 100), \"s\")\n                            revert(memPtr_1, 132)\n                        }\n                        mstore(_4, /** @src 0:30622:30632  \"msg.sender\" */ caller())\n                        /// @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\"\n                        mstore(_12, 1)\n                        let _13 := sload(keccak256(_4, _2))\n                        if /** @src 0:16627:16651  \"accountBalance >= amount\" */ lt(_13, value_3)\n                        /// @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\"\n                        {\n                            let memPtr_2 := mload(_2)\n                            mstore(memPtr_2, shl(229, 4594637))\n                            mstore(add(memPtr_2, _3), _12)\n                            mstore(add(memPtr_2, 36), 34)\n                            mstore(add(memPtr_2, 68), \"ERC20: burn amount exceeds balan\")\n                            mstore(add(memPtr_2, 100), \"ce\")\n                            revert(memPtr_2, 132)\n                        }\n                        mstore(_4, /** @src 0:30622:30632  \"msg.sender\" */ caller())\n                        /// @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\"\n                        mstore(_12, 1)\n                        sstore(keccak256(_4, _2), sub(/** @src 0:16747:16770  \"accountBalance - amount\" */ _13, value_3))\n                        /// @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\"\n                        sstore(/** @src 0:16792:16814  \"_totalSupply -= amount\" */ 0x03, checked_sub_uint256(/** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ sload(/** @src 0:16792:16814  \"_totalSupply -= amount\" */ 0x03), value_3))\n                        /// @src 0:16832:16869  \"Transfer(account, address(0), amount)\"\n                        let _14 := /** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ mload(_2)\n                        mstore(_14, value_3)\n                        /// @src 0:16832:16869  \"Transfer(account, address(0), amount)\"\n                        log3(_14, /** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ _12, /** @src 0:16832:16869  \"Transfer(account, address(0), amount)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, /** @src 0:30622:30632  \"msg.sender\" */ caller(), /** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ _4)\n                        return(_4, _4)\n                    }\n                    case 0x641ce140 {\n                        if slt(add(calldatasize(), not(3)), 96) { revert(_4, _4) }\n                        let value0_3 := abi_decode_address()\n                        let _15 := 36\n                        let value_4 := calldataload(_15)\n                        let offset := calldataload(68)\n                        let _16 := 0xffffffffffffffff\n                        if gt(offset, _16) { revert(_4, _4) }\n                        let value2, value3 := abi_decode_array_bytes32_dyn_calldata(add(_3, offset), calldatasize())\n                        let _17 := 0x0de0b6b3a7640000\n                        let product := mul(value_4, _17)\n                        if iszero(or(iszero(value_4), eq(_17, div(product, value_4))))\n                        {\n                            mstore(_4, shl(224, 0x4e487b71))\n                            mstore(_3, 0x11)\n                            revert(_4, _15)\n                        }\n                        let _18 := sload(/** @src 0:28882:28895  \"airdropActive\" */ 0x0c)\n                        /// @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\"\n                        let _19 := 32\n                        if iszero(and(shr(_19, _18), 0xff))\n                        {\n                            let memPtr_3 := mload(_2)\n                            mstore(memPtr_3, shl(229, 4594637))\n                            mstore(add(memPtr_3, _3), _19)\n                            mstore(add(memPtr_3, _15), 13)\n                            mstore(add(memPtr_3, 68), \"Not ready yet\")\n                            revert(memPtr_3, 100)\n                        }\n                        /// @src 0:28932:28952  \"amount+totalSupply()\"\n                        let expr := checked_add_uint256(product, /** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ sload(/** @src 0:10463:10475  \"_totalSupply\" */ 0x03))\n                        /// @src 0:28924:28978  \"require(amount+totalSupply()<_totalSupply,\\\"SOLD OUT!\\\")\"\n                        require_helper_stringliteral_92c8(/** @src 0:28932:28965  \"amount+totalSupply()<_totalSupply\" */ lt(expr, /** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ sload(/** @src 0:28953:28965  \"_totalSupply\" */ 0x0d)))\n                        /// @src 0:29014:29042  \"abi.encodePacked(msg.sender)\"\n                        let expr_mpos := /** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ mload(_2)\n                        /// @src 0:29014:29042  \"abi.encodePacked(msg.sender)\"\n                        let _20 := add(expr_mpos, /** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ _19)\n                        mstore(_20, shl(96, /** @src 0:29031:29041  \"msg.sender\" */ caller()))\n                        /// @src 0:29014:29042  \"abi.encodePacked(msg.sender)\"\n                        mstore(expr_mpos, 20)\n                        finalize_allocation_16833(expr_mpos)\n                        /// @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\"\n                        if iszero(/** @src 0:29062:29112  \"MerkleProof.verify(_merkleProof, merkleRoot, leaf)\" */ fun_verify(/** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ abi_decode_available_length_array_bytes32_dyn(/** @src 0:29062:29112  \"MerkleProof.verify(_merkleProof, merkleRoot, leaf)\" */ value2, value3, /** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ calldatasize()), sload(/** @src 0:29095:29105  \"merkleRoot\" */ 0x0b), /** @src 0:29004:29043  \"keccak256(abi.encodePacked(msg.sender))\" */ keccak256(/** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ _20, mload(/** @src 0:29004:29043  \"keccak256(abi.encodePacked(msg.sender))\" */ expr_mpos))))\n                        /// @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\"\n                        {\n                            let memPtr_4 := mload(_2)\n                            mstore(memPtr_4, shl(229, 4594637))\n                            mstore(add(memPtr_4, _3), _19)\n                            mstore(add(memPtr_4, _15), 14)\n                            mstore(add(memPtr_4, 68), \"Invalid proof!\")\n                            revert(memPtr_4, 100)\n                        }\n                        /// @src 0:29150:29167  \"uint256 req_val=0\"\n                        let var_req_val := /** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ _4\n                        mstore(_4, /** @src 0:29031:29041  \"msg.sender\" */ caller())\n                        /// @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\"\n                        mstore(_19, /** @src 0:29189:29196  \"claimed\" */ 0x0e)\n                        /// @src 0:29182:29208  \"amount+claimed[msg.sender]\"\n                        let expr_1 := checked_add_uint256(product, /** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ sload(keccak256(_4, _2)))\n                        let _21 := sload(/** @src 0:29210:29223  \"amountAirdrop\" */ 0x06)\n                        /// @src 0:29178:29621  \"if (amount+claimed[msg.sender]<=amountAirdrop) { ...\"\n                        switch /** @src 0:29182:29223  \"amount+claimed[msg.sender]<=amountAirdrop\" */ iszero(gt(expr_1, _21))\n                        case /** @src 0:29178:29621  \"if (amount+claimed[msg.sender]<=amountAirdrop) { ...\" */ 0 {\n                            /// @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\"\n                            mstore(_4, /** @src 0:29031:29041  \"msg.sender\" */ caller())\n                            /// @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\"\n                            mstore(_19, /** @src 0:29189:29196  \"claimed\" */ 0x0e)\n                            /// @src 0:29276:29302  \"amount+claimed[msg.sender]\"\n                            let expr_2 := checked_add_uint256(product, /** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ sload(keccak256(_4, _2)))\n                            /// @src 0:29304:29331  \"amountAirdrop+amountPresale\"\n                            let expr_3 := checked_add_uint256(_21, /** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ sload(/** @src 0:29318:29331  \"amountPresale\" */ 0x07))\n                            /// @src 0:29272:29621  \"if (amount+claimed[msg.sender]<=amountAirdrop+amountPresale+amountSale) {...\"\n                            switch /** @src 0:29276:29342  \"amount+claimed[msg.sender]<=amountAirdrop+amountPresale+amountSale\" */ iszero(gt(expr_2, /** @src 0:29304:29342  \"amountAirdrop+amountPresale+amountSale\" */ checked_add_uint256(expr_3, /** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ sload(/** @src 0:29332:29342  \"amountSale\" */ 0x08))))\n                            case /** @src 0:29272:29621  \"if (amount+claimed[msg.sender]<=amountAirdrop+amountPresale+amountSale) {...\" */ 0 {\n                                /// @src 0:29594:29609  \"revert(\\\"Error\\\")\"\n                                let _22 := /** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ mload(_2)\n                                /// @src 0:29594:29609  \"revert(\\\"Error\\\")\"\n                                mstore(_22, /** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ shl(229, 4594637))\n                                mstore(/** @src 0:29594:29609  \"revert(\\\"Error\\\")\" */ add(_22, /** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ _3), _19)\n                                mstore(add(/** @src 0:29594:29609  \"revert(\\\"Error\\\")\" */ _22, /** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ _15), 5)\n                                mstore(add(/** @src 0:29594:29609  \"revert(\\\"Error\\\")\" */ _22, /** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ 68), \"Error\")\n                                /// @src 0:29594:29609  \"revert(\\\"Error\\\")\"\n                                revert(_22, /** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ 100)\n                            }\n                            default /// @src 0:29272:29621  \"if (amount+claimed[msg.sender]<=amountAirdrop+amountPresale+amountSale) {...\"\n                            {\n                                /// @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\"\n                                mstore(_4, /** @src 0:29031:29041  \"msg.sender\" */ caller())\n                                /// @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\"\n                                mstore(_19, /** @src 0:29189:29196  \"claimed\" */ 0x0e)\n                                /// @src 0:29359:29566  \"if (claimed[msg.sender]<1) {...\"\n                                switch /** @src 0:29363:29384  \"claimed[msg.sender]<1\" */ lt(/** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ sload(keccak256(_4, _2)), 1)\n                                case /** @src 0:29359:29566  \"if (claimed[msg.sender]<1) {...\" */ 0 {\n                                    /// @src 0:29506:29550  \"req_val=amount*pricePresale/(10**decimals())\"\n                                    var_req_val := /** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ div(/** @src 0:29514:29533  \"amount*pricePresale\" */ checked_mul_uint256(product, /** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ sload(/** @src 0:29521:29533  \"pricePresale\" */ 0x09)), /** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ _17)\n                                }\n                                default /// @src 0:29359:29566  \"if (claimed[msg.sender]<1) {...\"\n                                {\n                                    /// @src 0:29414:29434  \"amount-amountAirdrop\"\n                                    let expr_4 := checked_sub_uint256(product, /** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ _21)\n                                    /// @src 0:29405:29465  \"req_val=(amount-amountAirdrop)*pricePresale/(10**decimals())\"\n                                    var_req_val := /** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ div(/** @src 0:29413:29448  \"(amount-amountAirdrop)*pricePresale\" */ checked_mul_uint256(expr_4, /** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ sload(/** @src 0:29436:29448  \"pricePresale\" */ 0x09)), /** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ _17)\n                                }\n                            }\n                        }\n                        default /// @src 0:29178:29621  \"if (amount+claimed[msg.sender]<=amountAirdrop) { ...\"\n                        {\n                            /// @src 0:29240:29249  \"req_val=0\"\n                            var_req_val := /** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ _4\n                        }\n                        if /** @src 0:29639:29659  \"msg.value >= req_val\" */ lt(/** @src 0:29639:29648  \"msg.value\" */ callvalue(), /** @src 0:29639:29659  \"msg.value >= req_val\" */ var_req_val)\n                        /// @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\"\n                        {\n                            let memPtr_5 := mload(_2)\n                            mstore(memPtr_5, shl(229, 4594637))\n                            mstore(add(memPtr_5, _3), _19)\n                            mstore(add(memPtr_5, _15), 19)\n                            mstore(add(memPtr_5, 68), \"Insufficient funds!\")\n                            revert(memPtr_5, 100)\n                        }\n                        let _23 := sub(shl(160, 1), 1)\n                        /// @src 0:29712:29754  \"payable(owner()).call{value:msg.value}('')\"\n                        pop(call(gas(), /** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ and(sload(_4), _23), /** @src 0:29639:29648  \"msg.value\" */ callvalue(), /** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ _4, _4, _4, _4))\n                        switch returndatasize()\n                        case 0 { }\n                        default {\n                            let _24 := returndatasize()\n                            if gt(_24, _16)\n                            {\n                                mstore(_4, shl(224, 0x4e487b71))\n                                mstore(_3, 0x41)\n                                revert(_4, _15)\n                            }\n                            let memPtr_6 := mload(_2)\n                            finalize_allocation(memPtr_6, add(and(add(_24, 31), /** @src 0:29014:29042  \"abi.encodePacked(msg.sender)\" */ not(31)), /** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ _19))\n                            mstore(memPtr_6, _24)\n                            returndatacopy(add(memPtr_6, _19), _4, returndatasize())\n                        }\n                        mstore(_4, /** @src 0:29031:29041  \"msg.sender\" */ caller())\n                        /// @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\"\n                        mstore(_19, /** @src 0:29189:29196  \"claimed\" */ 0x0e)\n                        /// @src 0:29785:29811  \"claimed[msg.sender]+amount\"\n                        let _25 := checked_add_uint256(/** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ sload(keccak256(_4, _2)), /** @src 0:29785:29811  \"claimed[msg.sender]+amount\" */ product)\n                        /// @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\"\n                        mstore(_4, /** @src 0:29031:29041  \"msg.sender\" */ caller())\n                        /// @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\"\n                        mstore(_19, /** @src 0:29189:29196  \"claimed\" */ 0x0e)\n                        /// @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\"\n                        sstore(keccak256(_4, _2), _25)\n                        /// @src 0:29840:29846  \"amount\"\n                        fun_mint(/** @src 0:29031:29041  \"msg.sender\" */ caller(), /** @src 0:29840:29846  \"amount\" */ product)\n                        /// @src 0:29868:30003  \"if (ref_address!= 0x0000000000000000000000000000000000000000) {...\"\n                        if /** @src 0:29872:29928  \"ref_address!= 0x0000000000000000000000000000000000000000\" */ iszero(iszero(/** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ and(/** @src 0:29872:29928  \"ref_address!= 0x0000000000000000000000000000000000000000\" */ value0_3, /** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ _23)))\n                        /// @src 0:29868:30003  \"if (ref_address!= 0x0000000000000000000000000000000000000000) {...\"\n                        {\n                            /// @src 0:29960:29988  \"amount*percentRefRewards/100\"\n                            fun_mint(value0_3, /** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ div(/** @src 0:29960:29984  \"amount*percentRefRewards\" */ checked_mul_uint256(product, /** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ and(sload(/** @src 0:28882:28895  \"airdropActive\" */ 0x0c), /** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ 0xffffffff)), /** @src 0:29985:29988  \"100\" */ 0x64))\n                        }\n                        /// @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\"\n                        return(_4, _4)\n                    }\n                    case 0x70a08231 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                        mstore(_4, and(abi_decode_address(), sub(shl(160, 1), 1)))\n                        mstore(32, /** @src 0:10647:10656  \"_balances\" */ 0x01)\n                        /// @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\"\n                        let _26 := sload(keccak256(_4, _2))\n                        let memPos_7 := mload(_2)\n                        mstore(memPos_7, _26)\n                        return(memPos_7, 32)\n                    }\n                    case 0x715018a6 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        let _27 := sload(_4)\n                        let value_5 := and(_27, sub(shl(160, 1), 1))\n                        /// @src 0:2214:2282  \"require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\")\"\n                        require_helper_stringliteral(/** @src 0:2222:2245  \"owner() == _msgSender()\" */ eq(/** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ value_5, /** @src 0:799:809  \"msg.sender\" */ caller()))\n                        /// @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\"\n                        sstore(_4, and(_27, shl(160, 0xffffffffffffffffffffffff)))\n                        /// @src 0:3415:3455  \"OwnershipTransferred(oldOwner, newOwner)\"\n                        log3(/** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ _4, _4, /** @src 0:3415:3455  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, value_5, /** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ _4)\n                        return(_4, _4)\n                    }\n                    case 0x7cb64759 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                        let value_6 := and(sload(_4), sub(shl(160, 1), 1))\n                        /// @src 0:2214:2282  \"require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\")\"\n                        require_helper_stringliteral(/** @src 0:2222:2245  \"owner() == _msgSender()\" */ eq(/** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ value_6, /** @src 0:799:809  \"msg.sender\" */ caller()))\n                        /// @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\"\n                        sstore(/** @src 0:28026:28053  \"merkleRoot = _newMerkleRoot\" */ 0x0b, /** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ calldataload(_3))\n                        return(_4, _4)\n                    }\n                    case 0x7f2ac2bc {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                        let value_7 := calldataload(_3)\n                        let value1_1 := abi_decode_address_13670()\n                        let value_8 := and(sload(_4), sub(shl(160, 1), 1))\n                        /// @src 0:2214:2282  \"require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\")\"\n                        require_helper_stringliteral(/** @src 0:2222:2245  \"owner() == _msgSender()\" */ eq(/** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ value_8, /** @src 0:799:809  \"msg.sender\" */ caller()))\n                        /// @src 0:30469:30490  \"_amount+totalSupply()\"\n                        let expr_5 := checked_add_uint256(value_7, /** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ sload(/** @src 0:10463:10475  \"_totalSupply\" */ 0x03))\n                        /// @src 0:30461:30516  \"require(_amount+totalSupply()<_totalSupply,\\\"SOLD OUT!\\\")\"\n                        require_helper_stringliteral_92c8(/** @src 0:30469:30503  \"_amount+totalSupply()<_totalSupply\" */ lt(expr_5, /** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ sload(/** @src 0:30491:30503  \"_totalSupply\" */ 0x0d)))\n                        /// @src 0:30543:30550  \"_amount\"\n                        fun_mint(value1_1, value_7)\n                        /// @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\"\n                        return(_4, _4)\n                    }\n                    case 0x81a7927e {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        let _28 := sload(/** @src 0:27406:27438  \"uint256 public priceSale=7500000\" */ 10)\n                        /// @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\"\n                        let memPos_8 := mload(_2)\n                        mstore(memPos_8, _28)\n                        return(memPos_8, 32)\n                    }\n                    case 0x841718a6 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                        let value_9 := calldataload(_3)\n                        let _29 := iszero(iszero(value_9))\n                        if iszero(eq(value_9, _29)) { revert(_4, _4) }\n                        let value_10 := and(sload(_4), sub(shl(160, 1), 1))\n                        /// @src 0:2214:2282  \"require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\")\"\n                        require_helper_stringliteral(/** @src 0:2222:2245  \"owner() == _msgSender()\" */ eq(/** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ value_10, /** @src 0:799:809  \"msg.sender\" */ caller()))\n                        /// @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\"\n                        let _30 := sload(/** @src 0:28141:28167  \"airdropActive = _setActive\" */ 0x0c)\n                        /// @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\"\n                        sstore(/** @src 0:28141:28167  \"airdropActive = _setActive\" */ 0x0c, /** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ or(and(_30, not(0xff00000000)), and(shl(32, _29), 0xff00000000)))\n                        return(_4, _4)\n                    }\n                    case 0x872ddfa1 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        let _31 := sload(/** @src 0:27287:27339  \"uint256 public amountSale=10000000000*10**decimals()\" */ 8)\n                        /// @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\"\n                        let memPos_9 := mload(_2)\n                        mstore(memPos_9, _31)\n                        return(memPos_9, 32)\n                    }\n                    case 0x8da5cb5b {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        let value_11 := and(sload(_4), sub(shl(160, 1), 1))\n                        let memPos_10 := mload(_2)\n                        mstore(memPos_10, value_11)\n                        return(memPos_10, 32)\n                    }\n                    case 0x909587b8 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                        let offset_1 := calldataload(_3)\n                        if gt(offset_1, 0xffffffffffffffff) { revert(_4, _4) }\n                        let value0_4, value1_2 := abi_decode_array_bytes32_dyn_calldata(add(_3, offset_1), calldatasize())\n                        let ret_1 := fun_canClaim(value0_4, value1_2, abi_decode_address_13670())\n                        let memPos_11 := mload(_2)\n                        mstore(memPos_11, ret_1)\n                        return(memPos_11, 32)\n                    }\n                    case 0x9147dd1b {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        let _32 := sload(/** @src 0:27346:27381  \"uint256 public pricePresale=2500000\" */ 9)\n                        /// @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\"\n                        let memPos_12 := mload(_2)\n                        mstore(memPos_12, _32)\n                        return(memPos_12, 32)\n                    }\n                    case 0x93a60467 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        let _33 := sload(/** @src 0:27164:27218  \"uint256 public amountAirdrop=8000000000*10**decimals()\" */ 6)\n                        /// @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\"\n                        let memPos_13 := mload(_2)\n                        mstore(memPos_13, _33)\n                        return(memPos_13, 32)\n                    }\n                    case 0x9451e9ce {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        let value_12 := and(sload(/** @src 0:27498:27531  \"uint32 public percentRefRewards=5\" */ 12), /** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ 0xffffffff)\n                        let memPos_14 := mload(_2)\n                        mstore(memPos_14, value_12)\n                        return(memPos_14, 32)\n                    }\n                    case 0x95c21971 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        let _34 := sload(/** @src 0:27225:27280  \"uint256 public amountPresale=20000000000*10**decimals()\" */ 7)\n                        /// @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\"\n                        let memPos_15 := mload(_2)\n                        mstore(memPos_15, _34)\n                        return(memPos_15, 32)\n                    }\n                    case 0x95d89b41 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        let memPtr_7 := mload(_2)\n                        let ret_2 := _4\n                        let slotValue_1 := sload(/** @src 0:9563:9570  \"_symbol\" */ 0x05)\n                        /// @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\"\n                        let length_1 := _4\n                        let _35 := 1\n                        length_1 := shr(_35, slotValue_1)\n                        let outOfPlaceEncoding_1 := and(slotValue_1, _35)\n                        if iszero(outOfPlaceEncoding_1)\n                        {\n                            length_1 := and(length_1, 0x7f)\n                        }\n                        let _36 := 32\n                        if eq(outOfPlaceEncoding_1, lt(length_1, _36))\n                        {\n                            mstore(_4, shl(224, 0x4e487b71))\n                            mstore(_3, 0x22)\n                            revert(_4, 0x24)\n                        }\n                        mstore(memPtr_7, length_1)\n                        switch outOfPlaceEncoding_1\n                        case 0 {\n                            mstore(add(memPtr_7, _36), and(slotValue_1, not(255)))\n                            ret_2 := add(add(memPtr_7, shl(/** @src 0:9563:9570  \"_symbol\" */ 0x05, /** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ iszero(iszero(length_1)))), _36)\n                        }\n                        case 1 {\n                            mstore(_4, /** @src 0:9563:9570  \"_symbol\" */ 0x05)\n                            /// @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\"\n                            let dataPos_1 := 1546678032441257452667456735582814959992782782816731922691272282333561699760\n                            let i_1 := _4\n                            for { } lt(i_1, length_1) { i_1 := add(i_1, _36) }\n                            {\n                                mstore(add(add(memPtr_7, i_1), _36), sload(dataPos_1))\n                                dataPos_1 := add(dataPos_1, _35)\n                            }\n                            ret_2 := add(add(memPtr_7, i_1), _36)\n                        }\n                        finalize_allocation(memPtr_7, sub(ret_2, memPtr_7))\n                        let memPos_16 := mload(_2)\n                        return(memPos_16, sub(abi_encode_string(memPos_16, memPtr_7), memPos_16))\n                    }\n                    case 0x9843eae3 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        let _37 := sload(/** @src 0:27538:27568  \"bool public airdropActive=true\" */ 12)\n                        /// @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\"\n                        let memPos_17 := mload(_2)\n                        mstore(memPos_17, iszero(iszero(and(shr(32, _37), 0xff))))\n                        return(memPos_17, 32)\n                    }\n                    case 0xa457c2d7 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                        let value0_5 := abi_decode_address()\n                        let value_13 := calldataload(36)\n                        mstore(_4, /** @src 0:799:809  \"msg.sender\" */ caller())\n                        /// @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\"\n                        mstore(32, /** @src 0:13829:13840  \"_allowances\" */ 0x02)\n                        /// @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\"\n                        let _38 := keccak256(_4, _2)\n                        mstore(_4, and(value0_5, sub(shl(160, 1), 1)))\n                        mstore(32, _38)\n                        let _39 := sload(keccak256(_4, _2))\n                        if /** @src 0:13882:13917  \"currentAllowance >= subtractedValue\" */ lt(_39, value_13)\n                        /// @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\"\n                        {\n                            let memPtr_8 := mload(_2)\n                            mstore(memPtr_8, shl(229, 4594637))\n                            mstore(add(memPtr_8, _3), 32)\n                            mstore(add(memPtr_8, 36), 37)\n                            mstore(add(memPtr_8, 68), \"ERC20: decreased allowance below\")\n                            mstore(add(memPtr_8, 100), \" zero\")\n                            revert(memPtr_8, 132)\n                        }\n                        /// @src 0:14027:14061  \"currentAllowance - subtractedValue\"\n                        fun_approve(/** @src 0:799:809  \"msg.sender\" */ caller(), /** @src 0:14027:14061  \"currentAllowance - subtractedValue\" */ value0_5, /** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ sub(/** @src 0:14027:14061  \"currentAllowance - subtractedValue\" */ _39, value_13))\n                        /// @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\"\n                        let memPos_18 := mload(_2)\n                        mstore(memPos_18, 1)\n                        return(memPos_18, 32)\n                    }\n                    case 0xa9059cbb {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                        let value0_6 := abi_decode_address()\n                        /// @src 0:11024:11030  \"amount\"\n                        fun_transfer(/** @src 0:799:809  \"msg.sender\" */ caller(), /** @src 0:11024:11030  \"amount\" */ value0_6, /** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ calldataload(36))\n                        let memPos_19 := mload(_2)\n                        mstore(memPos_19, 1)\n                        return(memPos_19, 32)\n                    }\n                    case 0xc5274fd1 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), 96) { revert(_4, _4) }\n                        let value_14 := and(sload(_4), sub(shl(160, 1), 1))\n                        /// @src 0:2214:2282  \"require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\")\"\n                        require_helper_stringliteral(/** @src 0:2222:2245  \"owner() == _msgSender()\" */ eq(/** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ value_14, /** @src 0:799:809  \"msg.sender\" */ caller()))\n                        /// @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\"\n                        sstore(/** @src 0:28310:28340  \"amountAirdrop = _amountAirdrop\" */ 0x06, /** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ calldataload(_3))\n                        sstore(/** @src 0:28351:28381  \"amountPresale = _amountPresale\" */ 0x07, /** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ calldataload(36))\n                        sstore(/** @src 0:28392:28416  \"amountSale = _amountSale\" */ 0x08, /** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ calldataload(68))\n                        return(_4, _4)\n                    }\n                    case 0xc884ef83 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                        mstore(_4, and(abi_decode_address(), sub(shl(160, 1), 1)))\n                        mstore(32, /** @src 0:27633:27675  \"mapping(address => uint256) public claimed\" */ 14)\n                        /// @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\"\n                        let _40 := sload(keccak256(_4, _2))\n                        let memPos_20 := mload(_2)\n                        mstore(memPos_20, _40)\n                        return(memPos_20, 32)\n                    }\n                    case 0xdd62ed3e {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                        let value0_7 := abi_decode_address()\n                        let value1_3 := abi_decode_address_13670()\n                        let _41 := sub(shl(160, 1), 1)\n                        mstore(_4, and(value0_7, _41))\n                        mstore(32, /** @src 0:11240:11251  \"_allowances\" */ 0x02)\n                        /// @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\"\n                        let _42 := keccak256(_4, _2)\n                        mstore(_4, and(value1_3, _41))\n                        mstore(32, _42)\n                        let _43 := sload(keccak256(_4, _2))\n                        let memPos_21 := mload(_2)\n                        mstore(memPos_21, _43)\n                        return(memPos_21, 32)\n                    }\n                    case 0xf2fde38b {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                        let value0_8 := abi_decode_address()\n                        let _44 := sload(_4)\n                        let _45 := sub(shl(160, 1), 1)\n                        let value_15 := and(_44, _45)\n                        /// @src 0:2214:2282  \"require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\")\"\n                        require_helper_stringliteral(/** @src 0:2222:2245  \"owner() == _msgSender()\" */ eq(/** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ value_15, /** @src 0:799:809  \"msg.sender\" */ caller()))\n                        /// @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\"\n                        let _46 := and(/** @src 0:3000:3022  \"newOwner != address(0)\" */ value0_8, /** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ _45)\n                        if /** @src 0:3000:3022  \"newOwner != address(0)\" */ iszero(/** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ _46)\n                        {\n                            let memPtr_9 := mload(_2)\n                            mstore(memPtr_9, shl(229, 4594637))\n                            mstore(add(memPtr_9, _3), 32)\n                            mstore(add(memPtr_9, 36), 38)\n                            mstore(add(memPtr_9, 68), \"Ownable: new owner is the zero a\")\n                            mstore(add(memPtr_9, 100), \"ddress\")\n                            revert(memPtr_9, 132)\n                        }\n                        sstore(_4, or(and(_44, shl(160, 0xffffffffffffffffffffffff)), _46))\n                        /// @src 0:3415:3455  \"OwnershipTransferred(oldOwner, newOwner)\"\n                        log3(/** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ _4, _4, /** @src 0:3415:3455  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, value_15, _46)\n                        /// @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\"\n                        return(_4, _4)\n                    }\n                }\n                revert(0, 0)\n            }\n            function abi_encode_string(headStart, value0) -> tail\n            {\n                let _1 := 32\n                mstore(headStart, _1)\n                let length := mload(value0)\n                mstore(add(headStart, _1), length)\n                let i := 0\n                for { } lt(i, length) { i := add(i, _1) }\n                {\n                    mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n                }\n                mstore(add(add(headStart, length), 64), 0)\n                tail := add(add(headStart, and(add(length, 31), /** @src 0:29014:29042  \"abi.encodePacked(msg.sender)\" */ not(31))), /** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ 64)\n            }\n            function abi_decode_address() -> value\n            {\n                value := calldataload(4)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function abi_decode_address_13670() -> value\n            {\n                value := calldataload(36)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function abi_decode_array_bytes32_dyn_calldata(offset, end) -> arrayPos, length\n            {\n                if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n                length := calldataload(offset)\n                if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n                arrayPos := add(offset, 0x20)\n                if gt(add(add(offset, shl(5, length)), 0x20), end) { revert(0, 0) }\n            }\n            function require_helper_stringliteral(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 32)\n                    mstore(add(memPtr, 68), \"Ownable: caller is not the owner\")\n                    revert(memPtr, 100)\n                }\n            }\n            function finalize_allocation_16833(memPtr)\n            {\n                let newFreePtr := add(memPtr, 64)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function finalize_allocation(memPtr, size)\n            {\n                let newFreePtr := add(memPtr, and(add(size, 31), /** @src 0:29014:29042  \"abi.encodePacked(msg.sender)\" */ not(31)))\n                /// @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\"\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function checked_add_uint256(x, y) -> sum\n            {\n                sum := add(x, y)\n                if gt(x, sum)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x11)\n                    revert(0, 0x24)\n                }\n            }\n            /// @ast-id 570 @src 0:14595:15328  \"function _transfer(...\"\n            function fun_transfer(var_sender, var_recipient, var_amount)\n            {\n                /// @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\"\n                let _1 := sub(shl(160, 1), 1)\n                let _2 := and(/** @src 0:14735:14755  \"sender != address(0)\" */ var_sender, /** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ _1)\n                if /** @src 0:14735:14755  \"sender != address(0)\" */ iszero(/** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ _2)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 37)\n                    mstore(add(memPtr, 68), \"ERC20: transfer from the zero ad\")\n                    mstore(add(memPtr, 100), \"dress\")\n                    revert(memPtr, 132)\n                }\n                let _3 := and(/** @src 0:14816:14839  \"recipient != address(0)\" */ var_recipient, /** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ _1)\n                if /** @src 0:14816:14839  \"recipient != address(0)\" */ iszero(/** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ _3)\n                {\n                    let memPtr_1 := mload(64)\n                    mstore(memPtr_1, shl(229, 4594637))\n                    mstore(add(memPtr_1, 4), 32)\n                    mstore(add(memPtr_1, 36), 35)\n                    mstore(add(memPtr_1, 68), \"ERC20: transfer to the zero addr\")\n                    mstore(add(memPtr_1, 100), \"ess\")\n                    revert(memPtr_1, 132)\n                }\n                /// @src 0:14753:14754  \"0\"\n                let _4 := 0x00\n                /// @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\"\n                mstore(/** @src 0:14753:14754  \"0\" */ _4, /** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ _2)\n                mstore(0x20, /** @src 0:14976:14985  \"_balances\" */ 0x01)\n                /// @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\"\n                let _5 := sload(keccak256(/** @src 0:14753:14754  \"0\" */ _4, /** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ 0x40))\n                if /** @src 0:15012:15035  \"senderBalance >= amount\" */ lt(_5, var_amount)\n                /// @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\"\n                {\n                    let memPtr_2 := mload(0x40)\n                    mstore(memPtr_2, shl(229, 4594637))\n                    mstore(add(memPtr_2, 4), 0x20)\n                    mstore(add(memPtr_2, 36), 38)\n                    mstore(add(memPtr_2, 68), \"ERC20: transfer amount exceeds b\")\n                    mstore(add(memPtr_2, 100), \"alance\")\n                    revert(memPtr_2, 132)\n                }\n                mstore(/** @src 0:14753:14754  \"0\" */ _4, /** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ _2)\n                mstore(0x20, /** @src 0:14976:14985  \"_balances\" */ 0x01)\n                /// @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\"\n                sstore(keccak256(/** @src 0:14753:14754  \"0\" */ _4, /** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ 0x40), sub(/** @src 0:15134:15156  \"senderBalance - amount\" */ _5, var_amount))\n                /// @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\"\n                mstore(/** @src 0:14753:14754  \"0\" */ _4, /** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ _3)\n                let dataSlot := keccak256(/** @src 0:14753:14754  \"0\" */ _4, /** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ 0x40)\n                sstore(dataSlot, /** @src 0:15178:15208  \"_balances[recipient] += amount\" */ checked_add_uint256(/** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ sload(/** @src 0:15178:15208  \"_balances[recipient] += amount\" */ dataSlot), var_amount))\n                /// @src 0:15226:15261  \"Transfer(sender, recipient, amount)\"\n                let _6 := /** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ mload(0x40)\n                mstore(_6, var_amount)\n                /// @src 0:15226:15261  \"Transfer(sender, recipient, amount)\"\n                log3(_6, /** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ 0x20, /** @src 0:15226:15261  \"Transfer(sender, recipient, amount)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, _2, _3)\n            }\n            /// @ast-id 743 @src 0:17376:17756  \"function _approve(...\"\n            function fun_approve(var_owner, var_spender, var_amount)\n            {\n                /// @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\"\n                let _1 := sub(shl(160, 1), 1)\n                let _2 := and(/** @src 0:17512:17531  \"owner != address(0)\" */ var_owner, /** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ _1)\n                if /** @src 0:17512:17531  \"owner != address(0)\" */ iszero(/** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ _2)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 36)\n                    mstore(add(memPtr, 68), \"ERC20: approve from the zero add\")\n                    mstore(add(memPtr, 100), \"ress\")\n                    revert(memPtr, 132)\n                }\n                let _3 := and(/** @src 0:17591:17612  \"spender != address(0)\" */ var_spender, /** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ _1)\n                if /** @src 0:17591:17612  \"spender != address(0)\" */ iszero(/** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ _3)\n                {\n                    let memPtr_1 := mload(64)\n                    mstore(memPtr_1, shl(229, 4594637))\n                    mstore(add(memPtr_1, 4), 32)\n                    mstore(add(memPtr_1, 36), 34)\n                    mstore(add(memPtr_1, 68), \"ERC20: approve to the zero addre\")\n                    mstore(add(memPtr_1, 100), \"ss\")\n                    revert(memPtr_1, 132)\n                }\n                mstore(/** @src 0:17529:17530  \"0\" */ 0x00, /** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ _2)\n                mstore(0x20, /** @src 0:17664:17675  \"_allowances\" */ 0x02)\n                /// @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\"\n                let _4 := keccak256(/** @src 0:17529:17530  \"0\" */ 0x00, /** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ 0x40)\n                mstore(/** @src 0:17529:17530  \"0\" */ 0x00, /** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ _3)\n                mstore(0x20, _4)\n                sstore(keccak256(/** @src 0:17529:17530  \"0\" */ 0x00, /** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ 0x40), var_amount)\n                /// @src 0:17716:17748  \"Approval(owner, spender, amount)\"\n                let _5 := /** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ mload(0x40)\n                mstore(_5, var_amount)\n                /// @src 0:17716:17748  \"Approval(owner, spender, amount)\"\n                log3(_5, /** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ 0x20, /** @src 0:17716:17748  \"Approval(owner, spender, amount)\" */ 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925, _2, _3)\n            }\n            /// @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\"\n            function checked_mul_uint256(x, y) -> product\n            {\n                product := mul(x, y)\n                if iszero(or(iszero(x), eq(y, div(product, x))))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x11)\n                    revert(0, 0x24)\n                }\n            }\n            function require_helper_stringliteral_92c8(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 9)\n                    mstore(add(memPtr, 68), \"SOLD OUT!\")\n                    revert(memPtr, 100)\n                }\n            }\n            function abi_decode_available_length_array_bytes32_dyn(offset, length, end) -> array\n            {\n                if gt(length, 0xffffffffffffffff)\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ 0x24)\n                }\n                let _1 := shl(5, length)\n                let _2 := 0x20\n                let memPtr := mload(64)\n                finalize_allocation(memPtr, add(_1, _2))\n                array := memPtr\n                let dst := memPtr\n                mstore(memPtr, length)\n                dst := add(memPtr, _2)\n                let srcEnd := add(offset, _1)\n                if gt(srcEnd, end)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\"\n                let src := offset\n                for { } lt(src, srcEnd) { src := add(src, _2) }\n                {\n                    mstore(dst, calldataload(src))\n                    dst := add(dst, _2)\n                }\n            }\n            function checked_sub_uint256(x, y) -> diff\n            {\n                diff := sub(x, y)\n                if gt(diff, x)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x11)\n                    revert(0, 0x24)\n                }\n            }\n            /// @ast-id 626 @src 0:15615:16014  \"function _mint(address account, uint256 amount) internal virtual {...\"\n            function fun_mint(var_account, var_amount)\n            {\n                /// @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\"\n                let _1 := and(/** @src 0:15699:15720  \"account != address(0)\" */ var_account, /** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ sub(shl(160, 1), 1))\n                if /** @src 0:15699:15720  \"account != address(0)\" */ iszero(/** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ _1)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 31)\n                    mstore(add(memPtr, 68), \"ERC20: mint to the zero address\")\n                    revert(memPtr, 100)\n                }\n                sstore(/** @src 0:15831:15853  \"_totalSupply += amount\" */ 0x03, checked_add_uint256(/** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ sload(/** @src 0:15831:15853  \"_totalSupply += amount\" */ 0x03), var_amount))\n                /// @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\"\n                mstore(/** @src 0:15718:15719  \"0\" */ 0x00, /** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ _1)\n                mstore(0x20, /** @src 0:15864:15873  \"_balances\" */ 0x01)\n                /// @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\"\n                let dataSlot := keccak256(/** @src 0:15718:15719  \"0\" */ 0x00, /** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ 0x40)\n                sstore(dataSlot, /** @src 0:15864:15892  \"_balances[account] += amount\" */ checked_add_uint256(/** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ sload(/** @src 0:15864:15892  \"_balances[account] += amount\" */ dataSlot), var_amount))\n                /// @src 0:15908:15945  \"Transfer(address(0), account, amount)\"\n                let _2 := /** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ mload(0x40)\n                mstore(_2, var_amount)\n                /// @src 0:15908:15945  \"Transfer(address(0), account, amount)\"\n                log3(_2, /** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ 0x20, /** @src 0:15908:15945  \"Transfer(address(0), account, amount)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, /** @src 0:15718:15719  \"0\" */ 0x00, /** @src 0:15908:15945  \"Transfer(address(0), account, amount)\" */ _1)\n            }\n            /// @ast-id 787 @src 0:19579:19769  \"function verify(...\"\n            function fun_verify(var_proof_mpos, var_root, var_leaf) -> var\n            {\n                /// @src 0:20549:20576  \"bytes32 computedHash = leaf\"\n                let var_computedHash := var_leaf\n                /// @src 0:20592:20605  \"uint256 i = 0\"\n                let var_i := /** @src -1:-1:-1 */ 0\n                /// @src 0:20587:20705  \"for (uint256 i = 0; i < proof.length; i++) {...\"\n                for { }\n                /** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ 1\n                /// @src 0:20592:20605  \"uint256 i = 0\"\n                {\n                    /// @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\"\n                    if eq(var_i, not(0))\n                    {\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ shl(224, 0x4e487b71))\n                        mstore(4, 0x11)\n                        revert(/** @src -1:-1:-1 */ 0, /** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ 0x24)\n                    }\n                    /// @src 0:20625:20628  \"i++\"\n                    var_i := /** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ add(var_i, 1)\n                }\n                /// @src 0:20625:20628  \"i++\"\n                {\n                    /// @src 0:20607:20623  \"i < proof.length\"\n                    if iszero(lt(var_i, /** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ mload(/** @src 0:20611:20623  \"proof.length\" */ var_proof_mpos)))\n                    /// @src 0:20607:20623  \"i < proof.length\"\n                    { break }\n                    /// @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\"\n                    let _1 := 32\n                    let _2 := mload(add(add(var_proof_mpos, shl(5, var_i)), _1))\n                    /// @src 0:26743:26794  \"a < b ? _efficientHash(a, b) : _efficientHash(b, a)\"\n                    let expr := /** @src -1:-1:-1 */ 0\n                    /// @src 0:26743:26794  \"a < b ? _efficientHash(a, b) : _efficientHash(b, a)\"\n                    switch /** @src 0:26743:26748  \"a < b\" */ lt(var_computedHash, _2)\n                    case /** @src 0:26743:26794  \"a < b ? _efficientHash(a, b) : _efficientHash(b, a)\" */ 0 {\n                        /// @src 0:26948:27071  \"assembly {...\"\n                        mstore(/** @src -1:-1:-1 */ expr, /** @src 0:26948:27071  \"assembly {...\" */ _2)\n                        mstore(/** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ _1, /** @src 0:26948:27071  \"assembly {...\" */ var_computedHash)\n                        /// @src 0:26743:26794  \"a < b ? _efficientHash(a, b) : _efficientHash(b, a)\"\n                        expr := /** @src 0:26948:27071  \"assembly {...\" */ keccak256(/** @src -1:-1:-1 */ expr, /** @src 0:26948:27071  \"assembly {...\" */ 0x40)\n                    }\n                    default /// @src 0:26743:26794  \"a < b ? _efficientHash(a, b) : _efficientHash(b, a)\"\n                    {\n                        /// @src 0:26948:27071  \"assembly {...\"\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 0:26948:27071  \"assembly {...\" */ var_computedHash)\n                        mstore(/** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ _1, /** @src 0:26948:27071  \"assembly {...\" */ _2)\n                        /// @src 0:26743:26794  \"a < b ? _efficientHash(a, b) : _efficientHash(b, a)\"\n                        expr := /** @src 0:26948:27071  \"assembly {...\" */ keccak256(/** @src -1:-1:-1 */ 0, /** @src 0:26948:27071  \"assembly {...\" */ 0x40)\n                    }\n                    /// @src 0:20645:20693  \"computedHash = _hashPair(computedHash, proof[i])\"\n                    var_computedHash := expr\n                }\n                /// @src 0:19721:19761  \"return processProof(proof, leaf) == root\"\n                var := /** @src 0:19728:19761  \"processProof(proof, leaf) == root\" */ eq(var_computedHash, var_root)\n            }\n            /// @ast-id 1650 @src 0:30018:30371  \"function canClaim(bytes32[] calldata _merkles, address _caller) public view returns(uint256) {...\"\n            function fun_canClaim(var_merkles_offset, var_merkles_length, var_caller) -> var\n            {\n                /// @src 0:30147:30172  \"abi.encodePacked(_caller)\"\n                let expr_mpos := /** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ mload(64)\n                /// @src 0:30147:30172  \"abi.encodePacked(_caller)\"\n                let _1 := add(expr_mpos, 0x20)\n                /// @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\"\n                mstore(_1, and(shl(96, var_caller), not(0xffffffffffffffffffffffff)))\n                /// @src 0:30147:30172  \"abi.encodePacked(_caller)\"\n                mstore(expr_mpos, 20)\n                finalize_allocation_16833(expr_mpos)\n                /// @src 0:30184:30364  \"if (MerkleProof.verify(_merkles, merkleRoot, leaf)) {...\"\n                switch /** @src 0:30188:30234  \"MerkleProof.verify(_merkles, merkleRoot, leaf)\" */ fun_verify(/** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ abi_decode_available_length_array_bytes32_dyn(/** @src 0:30188:30234  \"MerkleProof.verify(_merkles, merkleRoot, leaf)\" */ var_merkles_offset, var_merkles_length, /** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ calldatasize()), sload(/** @src 0:30217:30227  \"merkleRoot\" */ 0x0b), /** @src 0:30137:30173  \"keccak256(abi.encodePacked(_caller))\" */ keccak256(/** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ _1, mload(/** @src 0:30137:30173  \"keccak256(abi.encodePacked(_caller))\" */ expr_mpos)))\n                case /** @src 0:30184:30364  \"if (MerkleProof.verify(_merkles, merkleRoot, leaf)) {...\" */ 0 {\n                    /// @src 0:30353:30361  \"return 0\"\n                    var := /** @src -1:-1:-1 */ 0\n                    /// @src 0:30353:30361  \"return 0\"\n                    leave\n                }\n                default /// @src 0:30184:30364  \"if (MerkleProof.verify(_merkles, merkleRoot, leaf)) {...\"\n                {\n                    /// @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\"\n                    let _2 := sload(/** @src 0:30259:30272  \"amountAirdrop\" */ 0x06)\n                    /// @src 0:30259:30286  \"amountAirdrop+amountPresale\"\n                    let expr := checked_add_uint256(_2, /** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ sload(/** @src 0:30273:30286  \"amountPresale\" */ 0x07))\n                    /// @src 0:30259:30297  \"amountAirdrop+amountPresale+amountSale\"\n                    let expr_1 := checked_add_uint256(expr, /** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ sload(/** @src 0:30287:30297  \"amountSale\" */ 0x08))\n                    /// @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\"\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ and(var_caller, sub(shl(160, 1), 1)))\n                    mstore(/** @src 0:30147:30172  \"abi.encodePacked(_caller)\" */ 0x20, /** @src 0:30298:30305  \"claimed\" */ 0x0e)\n                    /// @src 0:30251:30332  \"return (amountAirdrop+amountPresale+amountSale-claimed[_caller])/(10**decimals())\"\n                    var := /** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ div(/** @src 0:30259:30314  \"amountAirdrop+amountPresale+amountSale-claimed[_caller]\" */ checked_sub_uint256(expr_1, /** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ sload(keccak256(/** @src -1:-1:-1 */ 0, /** @src 0:27125:30651  \"contract GOAT is Ownable, ERC20 {...\" */ 64))), 0x0de0b6b3a7640000)\n                    /// @src 0:30251:30332  \"return (amountAirdrop+amountPresale+amountSale-claimed[_caller])/(10**decimals())\"\n                    leave\n                }\n            }\n        }\n        data \".metadata\" hex\"a2646970667358221220fc4cdf9ecfdf80caf022d3c1e0e849bce6768f19fbf2c44e8f90a41023fb597f64736f6c63430008110033\"\n    }\n}\n","hash":"010003c11e234896214242aac33e97183c8e1eefa9201703033efd2e6bc5498c","factoryDependencies":{}},"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/GOAT.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/GOAT.sol\":{\"keccak256\":\"0xd212a7218dda9314beb1acee64dd43de276c8fc3c1954e3289729c29335ab28a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2a1fbde35e381df058b97549629b2c48e5ebdae547854ccfad9dce6a1582ae82\",\"dweb:/ipfs/QmNSKUhA7AbpTA4iFvYhfqiMeTMquDt3yXwEuV8rBvBtLz\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"irOptimized":""},"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/GOAT.sol\":\"IERC20Metadata\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/GOAT.sol\":{\"keccak256\":\"0xd212a7218dda9314beb1acee64dd43de276c8fc3c1954e3289729c29335ab28a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2a1fbde35e381df058b97549629b2c48e5ebdae547854ccfad9dce6a1582ae82\",\"dweb:/ipfs/QmNSKUhA7AbpTA4iFvYhfqiMeTMquDt3yXwEuV8rBvBtLz\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"irOptimized":""},"MerkleProof":{"abi":[],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/GOAT.sol\":\"MerkleProof\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/GOAT.sol\":{\"keccak256\":\"0xd212a7218dda9314beb1acee64dd43de276c8fc3c1954e3289729c29335ab28a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2a1fbde35e381df058b97549629b2c48e5ebdae547854ccfad9dce6a1582ae82\",\"dweb:/ipfs/QmNSKUhA7AbpTA4iFvYhfqiMeTMquDt3yXwEuV8rBvBtLz\"]}},\"version\":1}","zk_version":"1.3.9"},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"GOAT.sol:MerkleProof\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\n","bytecode":{"object":"00000001012001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000110004c0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e0000001000010430000000000000000000000000000000000000000000000000000000020000000000000000000000000000004000000100000000000000000031f0dd7be6099a13d5f172df4e55e8e3093177eabcdaecc176186df0f3e44a60"},"methodIdentifiers":{}},"irOptimized":"/// @use-src 0:\"contracts/GOAT.sol\"\nobject \"MerkleProof_1265\" {\n    code {\n        {\n            /// @src 0:19218:27081  \"library MerkleProof {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"MerkleProof_1265_deployed\")\n            codecopy(_1, dataoffset(\"MerkleProof_1265_deployed\"), _2)\n            setimmutable(_1, \"library_deploy_address\", address())\n            return(_1, _2)\n        }\n    }\n    /// @use-src 0:\"contracts/GOAT.sol\"\n    object \"MerkleProof_1265_deployed\" {\n        code {\n            {\n                /// @src 0:19218:27081  \"library MerkleProof {...\"\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a26469706673582212202503abe0126e3fa09987113c08f2d79003cbcc357741aef31aca8bc2efdfe4e664736f6c63430008110033\"\n    }\n}\n","hash":"01000007315699bd1521500edb7c419ad1ec911bab39fab9f189349b9830dcb0","factoryDependencies":{}},"Ownable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/GOAT.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/GOAT.sol\":{\"keccak256\":\"0xd212a7218dda9314beb1acee64dd43de276c8fc3c1954e3289729c29335ab28a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2a1fbde35e381df058b97549629b2c48e5ebdae547854ccfad9dce6a1582ae82\",\"dweb:/ipfs/QmNSKUhA7AbpTA4iFvYhfqiMeTMquDt3yXwEuV8rBvBtLz\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"irOptimized":""}}}}}